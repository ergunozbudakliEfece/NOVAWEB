@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<script src="~/Scripts/select2.min.js"></script>
<script src="~/assets/vendor/libs/popper/popper.js"></script>
<style>
    body {
        padding: 0 0 0 4rem !important;
    }
</style>
<style>
    #navbar {
        z-index: 99999999;
    }

    #table i {
        color: #00AAFF;
        font-weight: 300;
    }

        #table i:hover {
            opacity: 0.4;
        }

    .heart {
        animation: heartbeat 1s infinite alternate;
    }

    .swal2-icon {
        font-size: 35px;
    }




    .swal2-container.swal2-backdrop-show, .swal2-container.swal2-noanimation {
        background: rgba(0,0,0,.4) !important;
    }

    @@keyframes heartbeat {
        from {
            opacity: 0.3;
            transform: scale(0.32);
        }

        to {
            opacity: 1;
            transform: scale(0.40);
        }
    }

    .card-view {
        border-bottom: 1px dashed gray;
        margin-top: 2px;
    }

    .card-view-value {
        margin-left: 5px;
        white-space: normal;
    }



    .search {
        width: 50%;
    }



    .menu1 {
        display: none;
    }

    .th-inner {
        white-space: unset !important;
    }


    @@media screen and (max-width: 600px) {
        .select2 {
            width: 70vw !important;
        }

        .menu1 {
            display: inline-flex;
        }

        .menu2 {
            display: none;
        }

        body {
            padding: 0 0 0 2rem !important;
        }
    }
</style>

<div class="jumbotron vertical-center" onclick="hideAllPop()">
    <div id="nova-overlay" style="position: absolute; background: #00000080; left: 0; right: 0; bottom: 0; top: 0; z-index: 9999999;display:none;justify-content:center;align-items:center;">
        <div class="heart"><img id="progress" src="~/images/novasaydam.png" width="400" /></div>
    </div>
    <div class="container-fluid h-100">

        <div class="card" style="font-size:14px;letter-spacing:1px">

            <div class="card-header pb-0">

                <div class="btn-group menu1">
                    <button type="button" class="btn btn-primary btn-icon rounded-pill dropdown-toggle hide-arrow" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bx bx-dots-vertical-rounded"></i>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" style="">
                        <li><a class="dropdown-item" onclick="change(1)">Standart</a></li>
                        <li>
                            <hr class="dropdown-divider">
                        </li>
                        <li><a class="dropdown-item" onclick="change(2)">Detaylı</a></li>


                    </ul>
                </div>

                <div class="btn-group menu2" role="group" aria-label="Basic radio toggle button group">
                    <input type="radio" class="btn-check" onclick="change(1)" name="btnradio" id="btnradio1" checked="" autocomplete="off">
                    <label class="btn btn-outline-secondary" for="btnradio1">Standart</label>
                    <input type="radio" class="btn-check" onclick="change(2)" name="btnradio" id="btnradio2" autocomplete="off">
                    <label class="btn btn-outline-secondary" for="btnradio2">Detaylı</label>

                </div>


            </div>
            <div class="card-body">



                <div id="employeeTableWrapper" class="tableWrapper">
                    <div id="toolbar" class="mt-2 w-100">

                        <select id="filter" multiple="multiple" name="filterAlgorithm">
                        </select>

                    </div>


                    <table id="table"
                           class="table table-striped"
                           data-show-fullscreen="true"
                           data-buttons-order="['filterTable','columns']"
                           data-toggle="table"
                           data-show-export="false"
                           data-export-data-type="all"
                           data-export-types="['excel']"
                           data-pagination="true"
                           data-page-size="100"
                           data-toolbar="#toolbar"
                           data-search="true"
                           data-show-columns="true"
                           data-show-columns-toggle-all="true"
                           data-locale="tr-TR"
                           data-filter-control="true"
                           data-filter-control-multiple-search="true"
                           data-loading-template="loadingTemplate"
                           data-height="780"
                           data-mobile-responsive="true"
                           data-show-footer="false"
                           data-detail-view="false"
                           data-detail-formatter="detailFormatter"
                           data-check-on-init="true"
                           data-trim-on-search="false">
                        <thead>
                            <tr>
                                <th data-field="STOK_ADI" data-halign="center" data-sortable="true" data-width="50" data-width-unit="px" data-formatter="formatterAciklama">Stok Adı</th>
                                <th data-field="SATISA_HAZIR" data-halign="center" data-sortable="true" data-formatter="satishzrFormatter">Satışa Hazır</th>
                                <th data-field="BEKLEYEN_SIPARIS" data-halign="center" data-formatter="sipFormatter" data-sortable="true">Bekleyen Sipariş</th>
                                <th data-field="BAKIYE" data-halign="center" data-formatter="bakiyeFormatter" data-sortable="true">Bakiye</th>
                                <th data-field="BEKL_IE_MIKTAR" data-halign="center" data-sortable="true" data-formatter="ieFormatter">Bekleyen İş Emri</th>
                                <th data-field="FAB_STOK_MIK" data-halign="center" data-sortable="true" data-formatter="fabFormatter">Fabrika Stok</th>
                                <th data-field="GRUP_KODU" data-halign="center" data-visible="false" data-filter-strict-search="false">Grup Adı</th>
                                <th data-formatter="girisFormatter" data-halign="center" data-searchable="false">Son Girişler</th>
                                <th data-formatter="cikisFormatter" data-halign="center" data-searchable="false">Son Çıkışlar</th>
                                @{
                                    if (ViewBag.OzelYetki)
                                    {
                                        <th data-formatter="listefiyatiFormatter" data-visible="false" data-halign="center" data-searchable="false">Liste Fiyatı</th>
                                        <th data-formatter="iskontoFormatter" data-halign="center" data-searchable="false">İskonto</th>
                                        <th data-formatter="fiyatlarFormatter" data-halign="center" data-searchable="false">Toptan/Perakende<br /> <span style="color:red">KDV HARİÇ</span></th>
                                    }
                                }
                                <th data-field="TESLIM_TARIHI" data-sortable="true" data-visible="false" data-halign="center">Termin Tarihi</th>

                            </tr>
                        </thead>
                    </table>


                </div>
                <div id="employeeTableWrapper2" class="tableWrapper">
                    <div id="toolbar2">

                        <select id="filter2" multiple="multiple" name="filterAlgorithm2">
                        </select>

                    </div>
                    <table id="table2"
                           class="table table-striped"
                           data-buttons-order="['paginationSwitch', 'columns', 'filterTable']"
                           data-page-list="[5,10, 25, 50, 100, 200, All]"
                           data-page-size="5"
                           data-toggle="table"
                           data-show-export="true"
                           data-export-data-type="all"
                           data-export-types="['xlsx']"
                           data-pagination="true"
                           data-search="true"
                           data-toolbar="#toolbar2"
                           data-show-columns="true"
                           data-show-columns-toggle-all="true"
                           data-locale="tr-TR"
                           data-filter-control="true"
                           data-filter-control-multiple-search="true"
                           data-mobile-responsive="true">
                        <thead>
                            <tr>
                                <th data-field="STOK_ADI" data-sortable="true" data-formatter="adFormatter">Stok Adı</th>
                                <th data-field="SATISA_HAZIR" data-sortable="true" data-formatter="fabadFormatter">Satışa Hazır Miktar</th>
                                <th data-field="SAT_HZR_ADET" data-sortable="true" data-formatter="fabadFormatter">Satışa Hazır Adet</th>
                                <th data-field="BEKLEYEN_SIPARIS" ddata-sortable="true" data-formatter="fabadFormatter">Bekleyen Sipariş Miktar</th>
                                <th data-field="BEK_SIP_ADET" ddata-sortable="true" data-formatter="fabadFormatter">Bekleyen Sipariş Adet</th>
                                <th data-field="BAKIYE" data-sortable="true" data-formatter="fabadFormatter">Bakiye Miktar</th>
                                <th data-field="AD_BAKIYE" data-sortable="true" data-formatter="fabadFormatter">Bakiye Adet</th>
                                <th data-field="BEKL_IE_MIKTAR" data-sortable="true" data-formatter="fabadFormatter">Bekleyen İş Emri Miktar</th>
                                <th data-field="BEKL_IE_AD" data-sortable="true" data-formatter="fabadFormatter">Bekleyen İş Emri Adet</th>
                                <th data-field="FAB_STOK_MIK" data-sortable="true" data-formatter="fabadFormatter">Fabrika Stok Miktar</th>
                                <th data-field="FAB_STOK_AD" data-sortable="true" data-formatter="fabadFormatter">Fabrika Stok Adet</th>
                                <th data-field="ALISFIYAT1" data-sortable="true" data-formatter="fabadFormatter">Alış Fiyatı</th>
                                <th data-field="ALISFIYAT2" data-sortable="true" data-formatter="fabadFormatter">Alış Fiyatı 2</th>
                                <th data-field="SATISFIYAT1" data-sortable="true" data-formatter="fabadFormatter">Satış Fiyatı</th>
                                <th data-field="SATISFIYAT2" data-sortable="true" data-formatter="fabadFormatter">Satış Fiyatı 2</th>
                                <th data-field="GRUP_KODU" data-visible="false" data-filter-strict-search="false">Grup Adı</th>
                                <th data-field="TESLIM_TARIHI" data-sortable="true">Termin Tarihi</th>
                            </tr>
                        </thead>
                    </table>

                </div>
            </div>

        </div>
    </div>
</div>
<script>

    $("#divPartial").show();



    var type = 'fa'

    function loadingTemplate(message) {
        ShowProgress()
        return '<div class="text-center">YÜKLENİYOR..</div>'


    }
    var grupisimleri = [];
   

    
    function ozelkosulFormatter(value, row, index) {
        if (value != null) {
            return value.replaceAll("::", "<br/>");
        }

    }
   
    function alisFormatter(value, row, index) {
        var val = "";
        var val2 = "";
        if (value > 0) {
            val = "green";
        } else {
            val = "red";
        }
        if (row.ALISFIYAT2 > 0) {
            val2 = "green";
        } else {
            val2 = "red";
        }
        return "<span class='text-nowrap' style='color:" + val + "'>" + value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + "</span>" + "</br><span class='text-nowrap' style='color:" + val2 + "'>" + row.ALISFIYAT2.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + "</span>";
    }
    function adFormatter(value, row, index) {


        return "<span style='overflow-wrap:break-word'>" + value + "</span>";
    }
    function satisFormatter(value, row, index) {
        var val = "";
        var val2 = "";
        if (value > 0) {
            val = "green";
        } else {
            val = "red";
        }
        if (row.SATISFIYAT2 > 0) {
            val2 = "green";
        } else {
            val2 = "red";
        }
        return "<span class='text-nowrap' style='color:" + val + "'>" + value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + "</span>" + "</br><span class='text-nowrap' style='color:" + val + "'>" + row.SATISFIYAT2.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + "</span>";
    }
    function fabadFormatter(value, row, index) {

        return value.toLocaleString("tr-TR");
    }
    function satishzrFormatter(value, row, index) {
        var val = "";
        var val2 = "";
        if (value > 0) {
            val = "green";
        } else {
            val = "red";
        }
        if (row.SAT_HZR_ADET > 0) {
            val2 = "green";
        } else {
            val2 = "red";
        }
        return "<span class='text-nowrap' style='color:" + val + "'>" + (value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })).split(',')[0] + "," + "<span class='text-nowrap' style='font-size:10px'>" + (value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })).split(',')[1] + "</span>" + "</span>" + "<span  class='text-nowrap' style='font-size: 10px;color:" + val + "'> " + row.OLCU_BIRIMI + "</span></br><span class='text-nowrap' style='color:" + val2 + "'>" + row.SAT_HZR_ADET.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + "<span  class='text-nowrap' style='font-size: 10px;color:" + val2 + "'>," + row.SAT_HZR_ADET.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "</span></span>";

    }
    function fabFormatter(value, row, index) {
        var val = "";
        var val2 = "";
        if (value > 0) {
            val = "green";
        } else {
            val = "red";
        }
        if (row.FAB_STOK_AD > 0) {
            val2 = "green";
        } else {
            val2 = "red";
        }
        return "<span style='color:" + val + "'>" + value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + "</span>" + "<span style='font-size: 10px;color:" + val + "'>," + value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + " " + row.OLCU_BIRIMI + "</span></br><span style='color:" + val2 + "'>" + row.FAB_STOK_AD.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + "</span><span style='font-size:10px;color:" + val2 + "'>," + row.FAB_STOK_AD.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "</span>";

    }
    function ieFormatter(value, row, index) {
        var val = "";
        var val2 = "";
        if (value > 0) {
            val = "green";
        } else {
            val = "red";
        }
        if (row.BEKL_IE_AD > 0) {
            val2 = "green";
        } else {
            val2 = "red";
        }
        return "<span style='color:" + val + "'>" + value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + "</span>" + "<span  class='text-nowrap' style='font-size: 10px;color:" + val + "'>," + value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + " " + row.OLCU_BIRIMI + "</span></br><span style='color:" + val2 + "'>" + row.BEKL_IE_AD.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span  class='text-nowrap' style='font-size:10px'>" + row.BEKL_IE_AD.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "</span></span>";

    }
    function bakiyeFormatter(value, row, index) {
        var val = "";
        var val2 = "";
        if (value > 0) {
            val = "green";
        } else {
            val = "red";
        }
        if (row.AD_BAKIYE > 0) {
            val2 = "green";
        } else {
            val2 = "red";
        }
        return "<span class='text-nowrap' style='color:" + val + "'>" + value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + "</span>" + "<span  class='text-nowrap' style='font-size: 10px;color:" + val + "'>," + value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + " " + row.OLCU_BIRIMI + "</span></br><span style='color:" + val2 + "'>" + row.AD_BAKIYE.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span  class='text-nowrap' style='font-size:10px'>" + row.AD_BAKIYE.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "</span></span>";

    }
    function sipFormatter(value, row, index) {
        var val = "";
        var val2 = "";
        if (value > 0) {
            val = "green";
        } else {
            val = "red";
        }
        if (row.BEK_SIP_ADET > 0) {
            val2 = "green";
        } else {
            val2 = "red";
        }
        return "<span style='color:" + val + "'>" + value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + "</span>" + "<span class='text-nowrap' style='font-size: 10px;color:" + val + "'>," + value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + " " + row.OLCU_BIRIMI + "</span></br><span style='color:" + val2 + "'>" + row.BEK_SIP_ADET.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span style='font-size:10px'>" + row.BEK_SIP_ADET.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "</span></span>";

    }



</script>
<script>
    $('#filter').change(function (e) {
        var filterAlgorithm = $('[name="filterAlgorithm"]').val()


        if (filterAlgorithm.length > 0) {
            $('#table').bootstrapTable('filterBy', {
                GRUP_KODU: filterAlgorithm
            })
        } else {
            $('#table').bootstrapTable('filterBy', {});

        }

    })
    $('#filter2').change(function (e) {
        var filterAlgorithm2 = $('[name="filterAlgorithm2"]').val()


        if (filterAlgorithm2.length > 0) {
            $('#table2').bootstrapTable('filterBy', {
                GRUP_KODU: filterAlgorithm2
            })
        } else {
            $('#table2').bootstrapTable('filterBy', {});

        }

    })
    function change(value) {
        if (value == 1) {
            $('#employeeTableWrapper2').hide();
            $('#employeeTableWrapper').show();
        } else {
            $('#employeeTableWrapper2').show();
            $('#employeeTableWrapper').hide();
        }
    }
    var sondurum = null;
    var ozelkosullar;
    $(document).ready(function () {
        $('#pageName').html('<div class="dot"></div> Stok')
        $('#employeeTableWrapper2').hide();


        getstokfiatAsync().then(function (data) {
            stokfiatlar = data;
        })
        getozelAsync().then(function (ddd) {
            ozelkosullar = ddd
            const filt = document.getElementById("filter");
            const filt2 = document.getElementById("filter2");
            $.getJSON('http://192.168.2.13:83/api/stok/gruplar', function (data) {
                for (let i = 0; i < data.length; i++) {

                    var opt = document.createElement("option");
                    opt.innerHTML = data[i].GRUP_ISIM;
                    opt.value = data[i].GRUP_KOD;
                    var opt2 = document.createElement("option");
                    opt2.innerHTML = data[i].GRUP_ISIM;
                    opt2.value = data[i].GRUP_KOD;
                    filt.appendChild(opt);
                    filt2.appendChild(opt2);


                }


            }).done(function () {
                $('#filter').select2({ placeholder: 'Grup Filtresi', width: '300px' });
                $('#filter2').select2({ width: '25vw', placeholder: 'Grup Filtresi' });
                $.getJSON('http://192.168.2.13:83/api/stok/yedek1', function (data) {
                    $("#table").bootstrapTable('destroy').bootstrapTable({
                        data: data,
                        onPostBody: function () {
                            $("[data-bs-toggle='popover']").popover();
                        }
                    }).after(function () {
                        HideProgress()

                        document.getElementsByClassName("search-input")[0].oninput = function () {

                            document.getElementsByClassName("search-input")[0].value = document.getElementsByClassName("search-input")[0].value.toLocaleUpperCase('TR');
                        }
                    })
                    $("#table2").bootstrapTable('destroy').bootstrapTable({
                        data: data
                    }).after(function () {
                            HideProgress()
                        })
                })
               
                
            })
        })


        $.getJSON("http://192.168.2.13:83/api/fiyat/exec/fiyatdurum", function (data) {
            sondurum = data;
        })

    })
    function girisFormatter(index, row) {
        var stok =[]
        if (stoklar!=null ){
            stok = stoklar.filter(x => x.STOK_KODU == row.STOK_KODU);
        }
        


        if (stok.length > 0) {

            var girismik1 = stok[0].SON1_GIRIS_BIRIM_MIKTAR;
            var girismik2 = stok[0].SON2_GIRIS_BIRIM_MIKTAR;
            var girismik3 = stok[0].SON3_GIRIS_BIRIM_MIKTAR;
            var metrajmik1 = stok[0].SON1_GIRIS_METRAJ_MIKTAR
            var metrajmik2 = stok[0].SON2_GIRIS_METRAJ_MIKTAR
            var metrajmik3 = stok[0].SON3_GIRIS_METRAJ_MIKTAR
            return "<table class='table table-responsive table-borderless'><tr><td class='text-center' style='color:green;font-size:12px'>" + (girismik1 ? parseFloat(girismik1).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span style='font-size:10px'>" + parseFloat(girismik1).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "KG/AD</span>" : "-") + "</td><td class='text-center' style='color:green;font-size:12px'>" + (metrajmik1 ? parseFloat(metrajmik1).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span style='font-size:10px'>" + parseFloat(metrajmik1).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "KG/MT</span>" : "-") + "</td></tr><tr><td class='text-center' style='color:green;font-size:12px'>" + (girismik2 ? parseFloat(girismik2).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span style='font-size:10px'>" + parseFloat(girismik2).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "KG/AD</span>" : "-") + "</td><td class='text-center ' style='color:green;font-size:12px'>" + (metrajmik2 ? parseFloat(metrajmik2).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span style='font-size:10px'>" + parseFloat(metrajmik2).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "KG/MT</span>" : "-") + "</td></tr><tr><td class='text-center' style='color:green;font-size:12px'>" + (girismik3 ? parseFloat(girismik3).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span style='font-size:10px'>" + parseFloat(girismik3).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "KG/AD</span>" : "-") + "</td><td class='text-center' style='color:green;font-size:12px'>" + (metrajmik3 ? parseFloat(metrajmik3).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span style='font-size:10px'>" + parseFloat(metrajmik3).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "KG/MT</span>" : "-") + "</td></tr></table>";
        } else {
            return "<div class='text-center'>-</div>";
        }





    }
    function cikisFormatter(index, row) {
        var stok = stoklar.filter(x => x.STOK_KODU == row.STOK_KODU);


        if (stok.length > 0) {

            var cikismik1 = stok[0].SON1_CIKIS_BIRIM_MIKTAR;
            var cikismik2 = stok[0].SON2_CIKIS_BIRIM_MIKTAR;
            var cikismik3 = stok[0].SON3_CIKIS_BIRIM_MIKTAR;
            var metrajcikmik1 = stok[0].SON1_CIKIS_METRAJ_MIKTAR
            var metrajcikmik2 = stok[0].SON2_CIKIS_METRAJ_MIKTAR
            var metrajcikmik3 = stok[0].SON3_CIKIS_METRAJ_MIKTAR
            return "<table class='table table-responsive table-borderless'><tr><td class='text-center' style='color:red;font-size:12px'>" + (cikismik1 ? parseFloat(cikismik1).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span style='font-size:10px'>" + parseFloat(cikismik1).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "KG/AD</span>" : "-") + "</td><td class='text-center' style='color:red;font-size:12px'>" + (metrajcikmik1 ? parseFloat(metrajcikmik1).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span style='font-size:10px'>" + parseFloat(metrajcikmik1).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "KG/MT</span>" : "-") + "</td></tr><tr><td class='text-center' style='color:red;font-size:12px'>" + (cikismik2 ? parseFloat(cikismik2).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span style='font-size:10px'>" + parseFloat(cikismik2).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "KG/AD</span>" : "-") + "</td><td class='text-center ' style='color:red;font-size:12px'>" + (metrajcikmik2 ? parseFloat(metrajcikmik2).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span style='font-size:10px'>" + parseFloat(metrajcikmik2).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "KG/MT</span>" : "-") + "</td></tr><tr><td class='text-center' style='color:red;font-size:12px'>" + (cikismik3 ? parseFloat(cikismik3).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span style='font-size:10px'>" + parseFloat(cikismik3).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "KG/AD</span>" : "-") + "</td><td class='text-center' style='color:red;font-size:12px'>" + (metrajcikmik3 ? parseFloat(metrajcikmik3).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[0] + ",<span style='font-size:10px'>" + parseFloat(metrajcikmik3).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }).split(',')[1] + "KG/MT</span>" : "-") + "</td></tr></table>";
        } else {
            return "<div class='text-center'>-</div>";
        }





    }

    function toptanFormatter(value, row, index) {
        var stok1;
        if (stokfiatlar.length > 0) {

            stok1 = stokfiatlar.filter(x => x.STOK_KODU == row.STOK_KODU);
        }
        if (stok1.length > 0) {
            return "<div class='text-center'>" + (stok1[0].TOPTAN_FIYAT ? parseFloat(stok1[0].TOPTAN_FIYAT).toFixed(2).toString().replace('.', ',') + " " + stok1[0].FIYATDOVIZTIPI : "-") + "</div>";
        } else {
            return "<div class='text-center'>-</div>";
        }


    }
    function fiyatlarFormatter(value, row, index) {

        var stok2;
        if (stokfiatlar.length > 0) {

            stok2 = stokfiatlar.filter(x => x.STOK_KODU == row.STOK_KODU);
        }
        var sayi = 0;
        var f2 = " ";
        var f3 = " ";





        if (row.FIYATKODU != null) {
            var d;
            if (sondurum!=null) {
                d = sondurum.filter(x => x.FIYATKODU == row.FIYATKODU);
            }
            
            if (d.length > 0) {
                if (d[0].FIYAT3 == "YÜKSELDİ") {
                    f3 = " <i class='bx bxs-up-arrow' style='color:#00ee00'></i>";
                } else if (d[0].FIYAT3 == "DÜŞTÜ") {
                    f3 = " <i class='bx bxs-down-arrow' style='color:#ff0200'></i>";
                }
                else {
                    f3 = " <i class='bx bx-minus' style='color:rgba(0,0,0,0)'></i>"
                }
                if (d[0].FIYAT2 == "YÜKSELDİ") {
                    f2 = " <i class='bx bxs-up-arrow' style='color:#00ee00'></i>"
                } else if (d.FIYAT2 == "DÜŞTÜ") {
                    f2 = " <i class='bx bxs-down-arrow' style='color:#ff0200'></i>"
                } else {
                    f2 = " <i class='bx bx-minus' style='color:rgba(0,0,0,0)'></i>"
                }
            }

        }

        if (stok2.length > 0) {
            if (stok2[0].FIYATDOVIZTIPI == "TRY") {
                sayi = 2;
            }
            else {
                sayi = 3;
            }

            return "<div class='row'><div class='col text-center flex-nowrap' style='font-size:16px'>" + (stok2[0].TOPTAN_FIYAT ? parseFloat(stok2[0].TOPTAN_FIYAT).toLocaleString(undefined, { minimumFractionDigits: sayi, maximumFractionDigits: sayi }).split(',')[0] + "<span style='font-size:12px'>," + parseFloat(stok2[0].TOPTAN_FIYAT).toLocaleString(undefined, { minimumFractionDigits: sayi, maximumFractionDigits: sayi }).split(',')[1] + " " + stok2[0].FIYATDOVIZTIPI + "</span>" : "-") + "<span>" + f2 + "</span>" + "</div></div><div class='row'><div class='col text-center flex-nowrap' style='font-size:16px'>" + (stok2[0].PERAKENDE_FIYAT ? parseFloat(stok2[0].PERAKENDE_FIYAT).toLocaleString(undefined, { minimumFractionDigits: sayi, maximumFractionDigits: sayi }).split(',')[0] + "<span style='font-size:12px'>," + parseFloat(stok2[0].PERAKENDE_FIYAT).toLocaleString(undefined, { minimumFractionDigits: sayi, maximumFractionDigits: sayi }).split(',')[1] + " " + stok2[0].FIYATDOVIZTIPI + "</span>" : "-") + "<span>" + f3 + "</span>" + "</div></div>";

        } else {
            return "<div class='text-center'>-</div>";
        }


    }
    function iskontoFormatter(value, row, index) {
        var stok2 = stokfiatlar.filter(x => x.STOK_KODU == row.STOK_KODU);
        if (stok2.length > 0) {
            return "<div class='row'><div class='col text-center flex-nowrap' style='font-size:12px'>" + (stok2[0].TOPTAN_ISK ? parseFloat(stok2[0].TOPTAN_ISK).toLocaleString(undefined, { minimumFractionDigits: 1, maximumFractionDigits: 1 }).split(',')[0] + ",<span style='font-size:10px'>" + parseFloat(stok2[0].TOPTAN_ISK).toLocaleString(undefined, { minimumFractionDigits: 1, maximumFractionDigits: 1 }).split(',')[1] + "</span>" : "-") + "</div></div><div class='row'><div class='col text-center flex-nowrap' style='font-size:12px'>" + (stok2[0].PERAKENDE_ISK ? parseFloat(stok2[0].PERAKENDE_ISK).toLocaleString(undefined, { minimumFractionDigits: 1, maximumFractionDigits: 1 }).split(',')[0] + ",<span style='font-size:10px'>" + parseFloat(stok2[0].PERAKENDE_ISK).toLocaleString(undefined, { minimumFractionDigits: 1, maximumFractionDigits: 1 }).split(',')[1] + "</span>" : "-") + "</div></div>";

        } else {
            return "<div class='text-center'>-</div>";
        }
    }
    function listefiyatiFormatter(value, row, index) {
        var stok2 = stokfiatlar.filter(x => x.STOK_KODU == row.STOK_KODU);
        if (stok2.length > 0) {
            return "<div class='text-center'>" + (stok2[0].LISTE_FIYATI ? parseFloat(stok2[0].LISTE_FIYATI).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + "<span style='font-size:8px'> " + stok2[0].FIYATDOVIZTIPI + "</span>" : "-") + "</div>";

        } else {
            return "<div class='text-center'>-</div>";
        }
    }
    function formatterAd(value, row, index) {

        if (row.OZELKOSULLAR != "null" && row.OZELKOSULLAR != null) {
            return value + " <i style='cursor:help' class='bx bx-info-circle mt-2' data-bs-toggle='popover' data-bs-offset='0,14' data-bs-placement='right' data-bs-html='true' data-bs-content='<p>" + (row.OZELKOSULLAR == "null" ? "Özel koşul bulunmamakta." : row.OZELKOSULLAR.replaceAll("::", "<br/>")) + "</p>' title='Ek Bilgiler'></i>";
        } else {
            return value;
        }

    }

    function hideAllPop() {
        $(".popover").hide();
    }
    function ShowProgress() {
        document.body.style.overflow = 'hidden';
        document.activeElement.blur();
        $('#nova-overlay').fadeIn('fast').css('display', 'flex');
    }
    function HideProgress() {
        document.body.style.overflow = 'auto';
        $('#nova-overlay').fadeOut('slow');
    }
    function formatterAciklama(value, index, row) {
        var ozel = ozelkosullar.filter(x => x.FIYATKODU == index.FIYATKODU)
        if (ozel.length > 0 && ozel != null) {
            if (ozel[0].OZELKOSULLAR != null && ozel[0].OZELKOSULLAR.trim() != '::::::') {
                return value + " <i style='cursor:help' class='bx bx-info-circle mt-2' data-bs-toggle='popover' data-bs-offset='0,14' data-bs-placement='right' data-bs-html='true' data-bs-content='<p>" + (ozel[0].OZELKOSULLAR == null ? "Özel koşul bulunmamakta." : ozel[0].OZELKOSULLAR.replaceAll("::", "<br/>").replaceAll(':', '').replaceAll("&.&", "+").replaceAll("&yuzde&", "%").replaceAll("&tire&", "/").replaceAll("&eksi&", "-").replaceAll("&gulucuk&", "D").replaceAll("&gulucuk&", "D")) + "</p>' title='Ek Bilgiler'></i>";
            } else {
                return value;
            }
            
        } else {
            return value;
        }

    }
</script>



