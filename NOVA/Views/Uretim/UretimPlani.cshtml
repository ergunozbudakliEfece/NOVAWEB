@{
    Layout = "~/Views/Shared/_Layout_common.cshtml";
}

<head>
    <meta charset='utf-8' />

    <style>
        .btn-secondary, .btn-secondary:hover, .btn-secondary:active, .btn-secondary:visited {
            background-color: rgb(105, 127, 194) !important;
        }
        .fc-timegrid-event {
            font-size: xx-small;
        }

        .select2-selection {
            text-align: center;
        }

        .btn-success {
            color: #fff;
            background-color: #63a876;
            border-color: #63a876;
            box-shadow: 0 0.125rem 0.25rem 0 rgba(99, 168, 118, 0.4);
        }

        #fc-dom-1 {
            text-align: center;
        }

        ::-webkit-scrollbar {
            width: 3px;
            height: 5px;
            background: #7f7f7f38;
        }

        ::-webkit-scrollbar-thumb {
            background: #7f7f7f;
            border-radius: 0.5rem;
        }

        .fc-daygrid-event {
            white-space: normal !important;
            cursor: pointer;
        }

            .fc-daygrid-event:hover {
                opacity: .8;
            }


        html, body {
            margin: 0;
            padding: 0 1rem 0 2.5rem !important;
            font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
            font-size: 14px;
            --fc-button-border-color: white;
            --fc-today-bg-color: #cfdafa;
        }

        #calendar {
            width: 65vw;
            height: 98vh;
        }

        .fc-toolbar-chunk {
            margin-top: 5px;
        }

        .heart {
            animation: heartbeat 1s infinite alternate;
        }

        @@keyframes heartbeat {
            from {
                opacity: 0.3;
                transform: scale(0.32);
            }

            to {
                opacity: 1;
                transform: scale(0.40);
            }
        }

        @@media screen and (max-width: 750px) {
            #calendar {
                width: 100% !important;
            }

            .fc-toolbar-ltr {
                display: flex;
                justify-content: center
            }
        }

        .btn-group-vertical button {
            background-color: #04AA6D; /* Green background */
            border: 1px solid green; /* Green border */
            color: white; /* White text */
            padding: 10px 24px; /* Some padding */
            cursor: pointer; /* Pointer/hand icon */
            width: 100px; /* Set a width if needed */
            display: block; /* Make the buttons appear below each other */
        }

            .btn-group-vertical button:not(:last-child) {
                border-bottom: none; /* Prevent double borders */
            }

            /* Add a background color on hover */
            .btn-group-vertical button:hover {
                background-color: #3e8e41;
            }

        .accordion .accordion-item.active {
            box-shadow: none !important;
        }
    </style>

    <script src="~/wwwroot/libs/moment.js/moment-with-locales.js"></script>
    <script src="~/fullcalendar-scheduler-6.0.1/dist/index.global.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.7.1/jquery.contextMenu.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.7.1/jquery.contextMenu.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.7.1/jquery.ui.position.js"></script>
    <script>
        var calendar = null
        var drag = null;
        var drag1 = null;
        var gerceklesentarih = null;
        var Planlar = [];
        var time;
        var inf;
        var ham, mam,isemri,stok;
        function CreateCalendar() {
            Planlar = [];
            calendar = null;
            drag = null;
            var Calendar = FullCalendar.Calendar;
            var Draggable = FullCalendar.Draggable;

            var containerEl = document.getElementById('mydraggable');
            var calendarEl = document.getElementById('calendar');

            // initialize the external events
            // -----------------------------------------------------------------

            drag = new Draggable(containerEl, {
                itemSelector: '.fc-event',
                eventData: function (eventEl) {
                    var j_selector = jQuery(eventEl);
                    return {
                        id: j_selector.data('id'),
                        title: eventEl.innerText
                    };
                }
            });
            axios.get('http://192.168.2.13:83/api/seri/planlama/'+$('select').eq(0).val()).then((response) => {
                var filtered = [];
                for (let i = 0; i < response.data.length; i++) {
                    var f = filtered.filter(x => x.MAMUL_KODU == response.data[i].MAMUL_KODU)
                    if (f.length == 0) {
                        filtered.push({ "ISEMRINO": response.data[i].ISEMRI,"MAMUL_KODU": response.data[i].MAMUL_KODU, "MAMUL_ADI": response.data[i].MAMUL_ADI, "TARIH": response.data[i].TESLIM_TARIHI, "TOPLAM_MIKTAR": response.data[i].TOPLAM_MIKTAR, "TOPLAM_MIKTAR2": response.data[i].TOPLAM_MIKTAR2, "OLCU_BR1": response.data[i].OLCU_BR1, "OLCU_BR2": response.data[i].OLCU_BR2 })
                    }
                }
                filtered.forEach((item) => {
                    if (item.ISEMRINO != null) {
                        Planlar.push({
                            id: item.MAMUL_KODU,
                            title: item.MAMUL_ADI.replace('<br>', ' ') + " " + item.TOPLAM_MIKTAR.toLocaleString('TR') + " " + item.OLCU_BR1 + " | " + item.TOPLAM_MIKTAR2.toLocaleString('TR') + " " + item.OLCU_BR2,
                            start: item.TARIH,
                            description: '',
                            inckey: '',
                            backgroundColor: ''
                        });
                    }
                    else {
                        Planlar.push({
                            id: item.MAMUL_KODU,
                            title: item.MAMUL_ADI.replace('<br>', ' ') + " " + item.TOPLAM_MIKTAR.toLocaleString('TR') + " " + item.OLCU_BR1 + " | " + item.TOPLAM_MIKTAR2.toLocaleString('TR') + " " + item.OLCU_BR2,
                            start: item.TARIH,
                            description: '',
                            inckey: '',
                            backgroundColor: 'green'
                        });
                    }
                })
                calendar = new Calendar(calendarEl, {
                    headerToolbar: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,timeGridWeek,timeGridDay,listYear'
                    },
                    locale: "tr",
                    editable: true,
                    droppable: true,
                    eventTimeFormat: {
                        hour: '2-digit',
                        minute: '2-digit',
                        meridiem: false
                    },
                    timeZone: 'UTC',
                    firstDay: 1,
                    buttonText: {
                        today: 'Bugün',
                        month: 'Ay',
                        week: 'Hafta',
                        day: 'Gün',
                        list: 'Liste',
                        listMonth: 'Aylık Liste',
                        listYear: 'Yıllık Liste',
                        listWeek: 'Haftalık Liste',
                        listDay: 'Günlük Liste'
                    },
                    initialView: 'listYear'
                })



                calendar.render();
                $('button[title="Ay view"]').eq(0).attr('title', 'Ay Görünümü');
                $('button[title="Hafta view"]').eq(0).attr('title', 'Hafta Görünümü');
                $('button[title="Gün view"]').eq(0).attr('title', 'Gün Görünümü');
                $('button[title="Liste view"]').eq(0).attr('title', 'Liste Görünümü');
                $('button[title="Previous Ay"]').eq(0).attr('title', 'Önceki Ay');
                $('button[title="Next Ay"]').eq(0).attr('title', 'Sonraki Ay');
                $('button[title="This Ay"]').eq(0).attr('title', 'Bu Ay');
                calendar.addEventSource(Planlar);
                var date = new Date().setMonth(cons)
                calendar.gotoDate(date);
                   $( "a" ).on( "contextmenu", function() {
                      alert('hi')
                   });
                var Aylar = ['OCAK', 'ŞUBAT', 'MART', 'NİSAN', 'MAYIS', 'HAZİRAN', 'TEMMUZ', 'AĞUSTOS', 'EYLÜL', 'EKİM', 'KASIM', 'ARALIK'];
                var index = "";


                $('#fc-dom-1').find('br').remove();
                $('#fc-dom-1').find('.fc-button-group').remove();
                var alltd = $("td[data-date]")
                for (let i = 0; i < alltd.length; i++) {
                    if ((new Date($("td[data-date]").eq(i).data('date')).getDate() < new Date().getDate() && new Date($("td[data-date]").eq(i).data('date')).getMonth() == new Date().getMonth() && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear()) || (new Date($("td[data-date]").eq(i).data('date')).getMonth() < new Date().getMonth()) && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear() || new Date($("td[data-date]").eq(i).data('date')).getFullYear() < new Date().getFullYear())  {
                        $("td[data-date]").eq(i).css("background-color", "#eaeaea");

                    }

                }
                $('.fc-prev-button').eq(0).click(function () {
                    var alltd = $("td[data-date]")
                    for (let i = 0; i < alltd.length; i++) {
                        if ((new Date($("td[data-date]").eq(i).data('date')).getDate() < new Date().getDate() && new Date($("td[data-date]").eq(i).data('date')).getMonth() == new Date().getMonth() && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear()) || (new Date($("td[data-date]").eq(i).data('date')).getMonth() < new Date().getMonth()) && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear() || new Date($("td[data-date]").eq(i).data('date')).getFullYear() < new Date().getFullYear()) {
                            $("td[data-date]").eq(i).css("background-color", "#eaeaea");

                        }

                    }
                }).css('background-color', '#697FC2')
                $('.fc-next-button').eq(0).click(function () {
                    var alltd = $("td[data-date]")
                    for (let i = 0; i < alltd.length; i++) {
                        if ((new Date($("td[data-date]").eq(i).data('date')).getDate() < new Date().getDate() && new Date($("td[data-date]").eq(i).data('date')).getMonth() == new Date().getMonth() && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear()) || (new Date($("td[data-date]").eq(i).data('date')).getMonth() < new Date().getMonth()) && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear() || new Date($("td[data-date]").eq(i).data('date')).getFullYear() < new Date().getFullYear()) {
                            $("td[data-date]").eq(i).css("background-color", "#eaeaea");

                        }

                    }
                }).css('background-color', '#697FC2')
                $('.fc-today-button').eq(0).click(function () {
                    var alltd = $("td[data-date]")
                    for (let i = 0; i < alltd.length; i++) {
                        if ((new Date($("td[data-date]").eq(i).data('date')).getDate() < new Date().getDate() && new Date($("td[data-date]").eq(i).data('date')).getMonth() == new Date().getMonth() && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear()) || (new Date($("td[data-date]").eq(i).data('date')).getMonth() < new Date().getMonth()) && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear() || new Date($("td[data-date]").eq(i).data('date')).getFullYear() < new Date().getFullYear()) {
                            $("td[data-date]").eq(i).css("background-color", "#eaeaea");

                        }

                    }
                }).css('background-color', '#697FC2')
                $('.fc-dayGridMonth-button').eq(0).click(function () {
                    var alltd = $("td[data-date]")
                    for (let i = 0; i < alltd.length; i++) {
                        if ((new Date($("td[data-date]").eq(i).data('date')).getDate() < new Date().getDate() && new Date($("td[data-date]").eq(i).data('date')).getMonth() == new Date().getMonth() && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear()) || (new Date($("td[data-date]").eq(i).data('date')).getMonth() < new Date().getMonth()) && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear() || new Date($("td[data-date]").eq(i).data('date')).getFullYear() < new Date().getFullYear()) {
                            $("td[data-date]").eq(i).css("background-color", "#eaeaea");

                        }

                    }
                }).css('background-color', '#697FC2')
                $('.fc-timeGridWeek-button').eq(0).click(function () {
                    var alltd = $("td[data-date]")
                    for (let i = 0; i < alltd.length; i++) {
                        if ((new Date($("td[data-date]").eq(i).data('date')).getDate() < new Date().getDate() && new Date($("td[data-date]").eq(i).data('date')).getMonth() == new Date().getMonth() && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear()) || (new Date($("td[data-date]").eq(i).data('date')).getMonth() < new Date().getMonth()) && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear() || new Date($("td[data-date]").eq(i).data('date')).getFullYear() < new Date().getFullYear()) {
                            $("td[data-date]").eq(i).css("background-color", "#eaeaea");

                        }

                    }
                }).css('background-color', '#697FC2')
                $('.fc-timeGridDay-button').eq(0).click(function () {
                    var alltd = $("td[data-date]")
                    for (let i = 0; i < alltd.length; i++) {
                        if ((new Date($("td[data-date]").eq(i).data('date')).getDate() < new Date().getDate() && new Date($("td[data-date]").eq(i).data('date')).getMonth() == new Date().getMonth() && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear()) || (new Date($("td[data-date]").eq(i).data('date')).getMonth() < new Date().getMonth()) && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear() || new Date($("td[data-date]").eq(i).data('date')).getFullYear() < new Date().getFullYear()) {
                            $("td[data-date]").eq(i).css("background-color", "#eaeaea");

                        }

                    }
                }).css('background-color', '#697FC2')
                $('.fc-listYear-button').eq(0).click(function () {
                    var alltd = $("td[data-date]")
                    for (let i = 0; i < alltd.length; i++) {
                        if ((new Date($("td[data-date]").eq(i).data('date')).getDate() < new Date().getDate() && new Date($("td[data-date]").eq(i).data('date')).getMonth() == new Date().getMonth() && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear()) || (new Date($("td[data-date]").eq(i).data('date')).getMonth() < new Date().getMonth()) && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear() || new Date($("td[data-date]").eq(i).data('date')).getFullYear() < new Date().getFullYear()) {
                            $("td[data-date]").eq(i).css("background-color", "#eaeaea");

                        }

                    }
                }).css('background-color', '#697FC2')
                $('.fc-today').eq(0).click(function () {
                    var alltd = $("td[data-date]")
                    for (let i = 0; i < alltd.length; i++) {
                        if ((new Date($("td[data-date]").eq(i).data('date')).getDate() < new Date().getDate() && new Date($("td[data-date]").eq(i).data('date')).getMonth() == new Date().getMonth() && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear()) || (new Date($("td[data-date]").eq(i).data('date')).getMonth() < new Date().getMonth()) && new Date($("td[data-date]").eq(i).data('date')).getFullYear() == new Date().getFullYear() || new Date($("td[data-date]").eq(i).data('date')).getFullYear() < new Date().getFullYear()) {
                            $("td[data-date]").eq(i).css("background-color", "#eaeaea");

                        }

                    }
                }).css('background-color', '#697FC2')
                var index='<select class="form-select mb-2" onchange= "selectChange()"><option>DL01</option><option>PB01</option><option>PB02</option><option>BK01</option><option>MH01</option><option>TP01</option><option>RF02</option><option>RF03</option></select >';
                $('#fc-dom-1').append('</br><div class="fc-button-group mt-1">' + index + '</div>')
                if (con != "") {

                    $('select').eq(0).val(con)
                } else {
                    $('select').eq(0).val('DL01').trigger('change');
                }
                /*var width = $(window).width()*/
                //if (width > 400) {
                //    for (let i = 0; i < Aylar.length; i++) {

                //        index += '<button type="button" title="' + Aylar[i] + '" aria-pressed="false" class="t fc-button fc-button-primary" style="font-size:small" onclick="changeMonth(\'' + i + '\')">' + Aylar[i] + '</button>'


                //    }
                //    $('#fc-dom-1').append('</br><div class="fc-button-group mt-1">' + index + '</div>')
                //}



            })



            // initialize the calendar
            // -----------------------------------------------------------------



        };
        var d;
        var con = "";
        var distinct;
        var cons = new Date().getMonth();
        function changeMonth(val) {
            var date = new Date().setMonth(val)
            cons = val;
            calendar.gotoDate(date)
        }
        $(document).ready(() => {


            refresh()
            $('.fc-toolbar.fc-header-toolbar').addClass('row col-lg-12');

        });
        function refresh() {
            if (drag != null) {

                drag.destroy()
            }
            $.getJSON('http://192.168.2.13:83/api/seri/planlama/' + $('select').eq(0).val(), function (data) {
               
                d = data;
                distinct = [];
                d=d.sort(function (a, b) {
                    if (a.TESLIM_TARIHI > b.TESLIM_TARIHI) { return 1 }
                    if (a.TESLIM_TARIHI < b.TESLIM_TARIHI) { return -1 }
                    return 0;
                });
                for (let i = 0; i < d.length; i++) {
                    if (!distinct.includes(d[i].MAMUL_KODU)) {
                        distinct.push(d[i].MAMUL_KODU)
                    }
                }
                var planlananlar = data.filter(x => x.ISEMRI == null);
                CreateCalendar();
               

                $(".plan").on("dblclick", function () {
                    Swal.fire({
                        title: 'Onay',
                        icon: 'question',
                        confirmButtonColor: '#3085d6',
                        denyButtonColor: '#d33',
                        text: 'Silmek istediğinizden emin misiniz?',
                        showDenyButton: true,
                        confirmButtonText: 'Evet',
                        denyButtonText: `Hayır`,
                    }).then((result) => {
                        if (result.isConfirmed) {
                            axios.post('http://192.168.2.13:83/api/seri/planlama/delete/' + $(this).attr('data-id')).then(function (response) {
                                refresh()
                            })
                        }

                    })
                });
                
            })

        }

    </script>
    <script src="https://unpkg.com/hotkeys-js/dist/hotkeys.min.js"></script>

</head>
<script>
    $('#title').html('Nova | Üretim Planı')
</script>
<div id="nova-overlay" style="position: absolute; background: #00000080; left: 0; right: 0; bottom: 0; top: 0; z-index: 9999999;display:none;justify-content:center;align-items:center;">
    <div class="heart"><img id="progress" src="~/images/novasaydam.png" width="400" /></div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-2">
            <div id='mydraggable' style="width:250px;" class="ms-2 mt-2">

                <div class="accordion mt-2">

                    <div class="accordion-item active mt-1 mb-2" style="background-color:transparent">
                        <h2 class="accordion-header " id="headingtwo1">
                        </h2>
                        <div id="flush-collapseTwo1" class="accordion-collapse collapse show" aria-labelledby="headingtwo1" data-bs-parent="#mydraggable">
                            <div id="musteri2" style="max-height:89vh;overflow-y:auto">


                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="col-8">
            <div id='calendar'></div>
        </div>
       

    </div>


        <div class="modal fade" id="HurdaModal" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="SiparisModalLabel" aria-hidden="true">

            <div class="modal-dialog modal-sm modal-dialog-scrollable" style="max-width: 20%;top:20vh">
                <div class="modal-content" style="max-height:45vh;">
                    <div class="container-fluid mt-3">
                        <div class="centercontent" id="content7" style="display:unset">
                            <div class="heart"><img id="progress7" src="/images/novasaydam.png" style="max-width:15vw;display:none" /></div>
                        </div>
                        <div class="row text-center mt-1">
                            <div class="col">
                                <label class="modal-title" id="DateLabel" style="font-weight:bold"></label>
                            </div>
                        </div>
                        <div class="row mt-2">

                            <div class="col" id="hurdamiktar2div">


                                <input class="form-control text-center" placeholder="Saat" type="time" id="saat">



                            </div>
                        </div>


                        <div class="modal-footer mt-1" style="display:flex;justify-content:center;align-items:center;">
                            <button class="btn btn-primary" id="ModalSaveButton" type="button" onclick="KaliteKayit()">KAYDET</button>
                            <button class="btn btn-danger" type="button" onclick="ModalKapat()">KAPAT</button>
                            <button class="btn btn-warning" type="button" onclick="Sil()">SİL</button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="modal fade" id="PlanModal" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="SiparisModalLabel" aria-hidden="true">

            <div class="modal-dialog modal-sm modal-dialog-scrollable" style="max-width: 20%;top:20vh">
                <div class="modal-content" style="max-height:45vh;">
                    <div class="container-fluid mt-3">
                        <div class="centercontent" id="content7" style="display:unset">
                            <div class="heart"><img id="progress7" src="/images/novasaydam.png" style="max-width:15vw;display:none" /></div>
                        </div>
                        <div class="row text-center mt-1">
                            <div class="col">
                                <label class="modal-title" id="DateLabel" style="font-weight:bold"></label>
                            </div>
                        </div>
                        <div class="row mt-2">

                            <div class="col">


                                <select class="form-select" style="text-align:center" id="stokSelect">
                                </select>



                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col">


                                <input class="form-control text-center" placeholder="MİKTAR1" type="number" id="miktar1">



                            </div>
                            <div class="col">


                                <input class="form-control text-center" placeholder="MİKTAR2" type="number" id="miktar2">



                            </div>
                        </div>


                        <div class="modal-footer mt-1" style="display:flex;justify-content:center;align-items:center;">
                            <button class="btn btn-primary" id="ModalSaveButton" type="button" onclick="PlanKayit()">KAYDET</button>
                            <button class="btn btn-danger" type="button" onclick="hidePlanModal()">KAPAT</button>
                        </div>
                    </div>
                </div>
            </div>

        </div>

    </div>
@*<div id="contextMenu" class="context-menu"
         style="display:none">
        <ul>
            <li><a href="#">Element-1</a></li>
            <li><a href="#">Element-2</a></li>
            <li><a href="#">Element-3</a></li>
            <li><a href="#">Element-4</a></li>
            <li><a href="#">Element-5</a></li>
            <li><a href="#">Element-6</a></li>
            <li><a href="#">Element-7</a></li>
        </ul>
    </div>*@
<button type="button" style="display:none" id="ambarButton" class="btn btn-outline-info" onclick="ambarGiris()">AMBAR GİRİŞ TETİKLE</button>
<script>
    var c = 0;
    hotkeys('ctrl+space', function (event, handler) {

        if (c == 0) {

            alert('Tebrikler!!')
            c = 1;
        }
        else {

            alert('VOOP!!')
            c = 0;
        }
    });

    function ModalKapat() {
        $('#HurdaModal').modal('hide')
        $('#saat').val(null).trigger('change')
        axios.get('http://192.168.2.13:83/api/seri/planlama/' + $('select').eq(0).val()).then((response) => {
            var filtered = [];
            for (let i = 0; i < response.data.length; i++) {
                var f = filtered.filter(x => x.MAMUL_KODU == response.data[i].MAMUL_KODU)
                if (f.length == 0) {
                    filtered.push({ "ISEMRINO": response.data[i].ISEMRI,"MAMUL_KODU": response.data[i].MAMUL_KODU, "MAMUL_ADI": response.data[i].MAMUL_ADI, "TARIH": response.data[i].TESLIM_TARIHI, "TOPLAM_MIKTAR": response.data[i].TOPLAM_MIKTAR, "TOPLAM_MIKTAR2": response.data[i].TOPLAM_MIKTAR2, "OLCU_BR1": response.data[i].OLCU_BR1, "OLCU_BR2": response.data[i].OLCU_BR2 })
                }
            }
            Planlar = [];
            filtered.forEach((item) => {
                if (item.ISEMRINO != null) {
                    Planlar.push({
                        id: item.MAMUL_KODU,
                        title: item.MAMUL_ADI.replace('<br>', ' ') + " " + item.TOPLAM_MIKTAR.toLocaleString('TR') + " " + item.OLCU_BR1 + " | " + item.TOPLAM_MIKTAR2.toLocaleString('TR') + " " + item.OLCU_BR2,
                        start: item.TARIH,
                        description: '',
                        inckey: '',
                        backgroundColor: ''
                    });
                }
                else {
                    Planlar.push({
                        id: item.MAMUL_KODU,
                        title: item.MAMUL_ADI.replace('<br>', ' ') + " " + item.TOPLAM_MIKTAR.toLocaleString('TR') + " " + item.OLCU_BR1 + " | " + item.TOPLAM_MIKTAR2.toLocaleString('TR') + " " + item.OLCU_BR2,
                        start: item.TARIH,
                        description: '',
                        inckey: '',
                        backgroundColor: 'green'
                    });
                }
            })
            var listEvent = calendar.getEvents();
            listEvent.forEach(event => {
                event.remove()
            });
            calendar.addEventSource(Planlar);



        })
    }
    function KaliteKayit() {
        $('#HurdaModal').modal('hide')
        var data=[];
        for (let i = 0; i < isemri.length; i++) {
            data.push({ ISEMRINO: isemri[i], TARIH: tarih, SAAT: $('#saat').val() })
        }
        if (isemri.length == 0) {
            data.push({ STOK_KODU: stok, PLANLANAN_TARIH: tarih, PLANLANAN_SAAT: $('#saat').val() })
            axios.post('http://192.168.2.13:83/api/seri/planlama/abstract/update', data).then(function (response) {
                axios.get('http://192.168.2.13:83/api/seri/planlama/' + $('select').eq(0).val()).then((response) => {
                    var filtered = [];

                    response.data = response.data.filter(x => x.ISEMRI!=null&&x.ISEMRI.substring(0, 4) == $('select').eq(0).val());
                    for (let i = 0; i < response.data.length; i++) {
                        var f = filtered.filter(x => x.MAMUL_KODU == response.data[i].MAMUL_KODU)
                        if (f.length == 0) {
                            filtered.push({ "MAMUL_KODU": response.data[i].MAMUL_KODU, "MAMUL_ADI": response.data[i].MAMUL_ADI, "TARIH": response.data[i].TESLIM_TARIHI, "TOPLAM_MIKTAR": response.data[i].TOPLAM_MIKTAR, "TOPLAM_MIKTAR2": response.data[i].TOPLAM_MIKTAR2, "OLCU_BR1": response.data[i].OLCU_BR1, "OLCU_BR2": response.data[i].OLCU_BR2 })
                        }
                    }
                    var filtered1 = [];
                    response.data = response.data.filter(x => x.ISEMRI == null);
                    for (let i = 0; i < response.data.length; i++) {
                        var f1 = filtered.filter(x => x.MAMUL_KODU == response.data[i].MAMUL_KODU)
                        if (f1.length == 0) {
                            filtered1.push({ "MAMUL_KODU": response.data[i].MAMUL_KODU, "MAMUL_ADI": response.data[i].MAMUL_ADI, "TARIH": response.data[i].TESLIM_TARIHI, "TOPLAM_MIKTAR": response.data[i].TOPLAM_MIKTAR, "TOPLAM_MIKTAR2": response.data[i].TOPLAM_MIKTAR2, "OLCU_BR1": response.data[i].OLCU_BR1, "OLCU_BR2": response.data[i].OLCU_BR2 })
                        }
                    }
                    Planlar = [];
                    filtered.forEach((item) => {
                        Planlar.push({
                            id: item.MAMUL_KODU,
                            title: item.MAMUL_ADI.replace('<br>', ' ') + " " + item.TOPLAM_MIKTAR.toLocaleString('TR') + " " + item.OLCU_BR1 + " | " + item.TOPLAM_MIKTAR2.toLocaleString('TR') + " " + item.OLCU_BR2,
                            start: item.TARIH,
                            description: '',
                            inckey: '',
                            backgroundColor: ''
                        });
                    })
                    filtered1.forEach((item) => {
                        Planlar.push({
                            id: item.MAMUL_KODU,
                            title: item.MAMUL_ADI.replace('<br>', ' ') + " " + item.TOPLAM_MIKTAR.toLocaleString('TR') + " " + item.OLCU_BR1 + " | " + item.TOPLAM_MIKTAR2.toLocaleString('TR') + " " + item.OLCU_BR2,
                            start: item.TARIH,
                            description: '',
                            inckey: '',
                            backgroundColor: ''
                        });
                    })
                    var listEvent = calendar.getEvents();
                    listEvent.forEach(event => {
                        event.remove()
                    });
                    calendar.addEventSource(Planlar);
                    updateMenu()


                })
            }).catch(function (err) {
                alert(err)
            })
        } else {
            axios.post('http://192.168.2.13:83/api/seri/planlama/Update', data).then(function (response) {
                axios.get('http://192.168.2.13:83/api/seri/planlama/' + $('select').eq(0).val()).then((response) => {
                    var filtered = [];
                    response.data = response.data.filter(x => x.ISEMRI.substring(0, 4) == $('select').eq(0).val());
                    for (let i = 0; i < response.data.length; i++) {
                        var f = filtered.filter(x => x.MAMUL_KODU == response.data[i].MAMUL_KODU)
                        if (f.length == 0) {
                            filtered.push({ "MAMUL_KODU": response.data[i].MAMUL_KODU, "MAMUL_ADI": response.data[i].MAMUL_ADI, "TARIH": response.data[i].TESLIM_TARIHI, "TOPLAM_MIKTAR": response.data[i].TOPLAM_MIKTAR, "TOPLAM_MIKTAR2": response.data[i].TOPLAM_MIKTAR2, "OLCU_BR1": response.data[i].OLCU_BR1, "OLCU_BR2": response.data[i].OLCU_BR2 })
                        }
                    }
                    Planlar = [];
                    filtered.forEach((item) => {
                        Planlar.push({
                            id: item.MAMUL_KODU,
                            title: item.MAMUL_ADI.replace('<br>', ' ') + " " + item.TOPLAM_MIKTAR.toLocaleString('TR') + " " + item.OLCU_BR1 + " | " + item.TOPLAM_MIKTAR2.toLocaleString('TR') + " " + item.OLCU_BR2,
                            start: item.TARIH,
                            description: '',
                            inckey: '',
                            backgroundColor: ''
                        });
                    })
                    var listEvent = calendar.getEvents();
                    listEvent.forEach(event => {
                        event.remove()
                    });
                    calendar.addEventSource(Planlar);
                    updateMenu()


                })
            }).catch(function (err) {
                alert(err)
            })
        }

    }

    function Sil() {
        $('#HurdaModal').modal('hide')
        var data = [];
        tarih = new Date().getFullYear()+'-12-31';
        for (let i = 0; i < isemri.length; i++) {
            data.push({ ISEMRINO: isemri[i], TARIH: tarih, SAAT: '' })
        }
        if (isemri.length == 0) {
            data.push({ STOK_KODU: stok, PLANLANAN_TARIH: tarih, PLANLANAN_SAAT: '' })
            axios.post('http://192.168.2.13:83/api/seri/planlama/abstract/Update', data).then(function (response) {
                axios.get('http://192.168.2.13:83/api/seri/planlama/' + $('select').eq(0).val()).then((response) => {
                    var filtered = [];
                    var filtered1 = [];
                    response.data = response.data.filter(x => x.ISEMRI!=null && x.ISEMRI.substring(0, 4) == $('select').eq(0).val());
                    for (let i = 0; i < response.data.length; i++) {
                        var f = filtered.filter(x => x.MAMUL_KODU == response.data[i].MAMUL_KODU)
                        if (f.length == 0) {
                            filtered.push({ "MAMUL_KODU": response.data[i].MAMUL_KODU, "MAMUL_ADI": response.data[i].MAMUL_ADI, "TARIH": response.data[i].TESLIM_TARIHI, "TOPLAM_MIKTAR": response.data[i].TOPLAM_MIKTAR, "TOPLAM_MIKTAR2": response.data[i].TOPLAM_MIKTAR2, "OLCU_BR1": response.data[i].OLCU_BR1, "OLCU_BR2": response.data[i].OLCU_BR2 })
                        }
                    }
                    response.data = response.data.filter(x => x.ISEMRI == null);
                    for (let i = 0; i < response.data.length; i++) {
                        var f1 = filtered.filter(x => x.MAMUL_KODU == response.data[i].MAMUL_KODU)
                        if (f1.length == 0) {
                            filtered1.push({ "MAMUL_KODU": response.data[i].MAMUL_KODU, "MAMUL_ADI": response.data[i].MAMUL_ADI, "TARIH": response.data[i].TESLIM_TARIHI, "TOPLAM_MIKTAR": response.data[i].TOPLAM_MIKTAR, "TOPLAM_MIKTAR2": response.data[i].TOPLAM_MIKTAR2, "OLCU_BR1": response.data[i].OLCU_BR1, "OLCU_BR2": response.data[i].OLCU_BR2 })
                        }
                    }
                    filtered1.forEach((item) => {
                        Planlar.push({
                            id: item.MAMUL_KODU,
                            title: item.MAMUL_ADI.replace('<br>', ' ') + " " + item.TOPLAM_MIKTAR.toLocaleString('TR') + " " + item.OLCU_BR1 + " | " + item.TOPLAM_MIKTAR2.toLocaleString('TR') + " " + item.OLCU_BR2,
                            start: item.TARIH,
                            description: '',
                            inckey: '',
                            backgroundColor: ''
                        });
                    })
                    var listEvent = calendar.getEvents();
                    listEvent.forEach(event => {
                        event.remove()
                    });
                    calendar.addEventSource(Planlar);
                    updateMenu()


                })
            }).catch(function (err) {
                alert(err)
            })
        } else {
            axios.post('http://192.168.2.13:83/api/seri/planlama/Update', data).then(function (response) {
                axios.get('http://192.168.2.13:83/api/seri/planlama/' + $('select').eq(0).val()).then((response) => {
                    var filtered = [];
                    var filtered1 = [];
                    response.data = response.data.filter(x => x.ISEMRI != null && x.ISEMRI.substring(0, 4) == $('select').eq(0).val());
                    for (let i = 0; i < response.data.length; i++) {
                        var f = filtered.filter(x => x.MAMUL_KODU == response.data[i].MAMUL_KODU)
                        if (f.length == 0) {
                            filtered.push({ "MAMUL_KODU": response.data[i].MAMUL_KODU, "MAMUL_ADI": response.data[i].MAMUL_ADI, "TARIH": response.data[i].TESLIM_TARIHI, "TOPLAM_MIKTAR": response.data[i].TOPLAM_MIKTAR, "TOPLAM_MIKTAR2": response.data[i].TOPLAM_MIKTAR2, "OLCU_BR1": response.data[i].OLCU_BR1, "OLCU_BR2": response.data[i].OLCU_BR2 })
                        }
                    }
                    response.data = response.data.filter(x => x.ISEMRI == null);
                    for (let i = 0; i < response.data.length; i++) {
                        var f1 = filtered.filter(x => x.MAMUL_KODU == response.data[i].MAMUL_KODU)
                        if (f1.length == 0) {
                            filtered1.push({ "MAMUL_KODU": response.data[i].MAMUL_KODU, "MAMUL_ADI": response.data[i].MAMUL_ADI, "TARIH": response.data[i].TESLIM_TARIHI, "TOPLAM_MIKTAR": response.data[i].TOPLAM_MIKTAR, "TOPLAM_MIKTAR2": response.data[i].TOPLAM_MIKTAR2, "OLCU_BR1": response.data[i].OLCU_BR1, "OLCU_BR2": response.data[i].OLCU_BR2 })
                        }
                    }
                    filtered1.forEach((item) => {
                        Planlar.push({
                            id: item.MAMUL_KODU,
                            title: item.MAMUL_ADI.replace('<br>', ' ') + " " + item.TOPLAM_MIKTAR.toLocaleString('TR') + " " + item.OLCU_BR1 + " | " + item.TOPLAM_MIKTAR2.toLocaleString('TR') + " " + item.OLCU_BR2,
                            start: item.TARIH,
                            description: '',
                            inckey: '',
                            backgroundColor: ''
                        });
                    })
                    var listEvent = calendar.getEvents();
                    listEvent.forEach(event => {
                        event.remove()
                    });
                    calendar.addEventSource(Planlar);
                    updateMenu()


                })
            }).catch(function (err) {
                alert(err)
            })
        }
        axios.post('http://192.168.2.13:83/api/seri/planlama/Update', data).then(function (response) {
            axios.get('http://192.168.2.13:83/api/seri/planlama/' + $('select').eq(0).val()).then((response) => {
                var filtered = [];
                response.data = response.data.filter(x => x.ISEMRI.substring(0, 4) == $('select').eq(0).val());
                for (let i = 0; i < response.data.length; i++) {
                    var f = filtered.filter(x => x.MAMUL_KODU == response.data[i].MAMUL_KODU)
                    if (f.length == 0) {
                        filtered.push({ "MAMUL_KODU": response.data[i].MAMUL_KODU, "MAMUL_ADI": response.data[i].MAMUL_ADI, "TARIH": response.data[i].TESLIM_TARIHI, "TOPLAM_MIKTAR": response.data[i].TOPLAM_MIKTAR, "TOPLAM_MIKTAR2": response.data[i].TOPLAM_MIKTAR2, "OLCU_BR1": response.data[i].OLCU_BR1, "OLCU_BR2": response.data[i].OLCU_BR2 })
                    }
                }
                Planlar = [];
                filtered.forEach((item) => {
                    Planlar.push({
                        id: item.MAMUL_KODU,
                        title: item.MAMUL_ADI.replace('<br>', ' ') + " " + item.TOPLAM_MIKTAR.toLocaleString('TR') + " " + item.OLCU_BR1 + " | " + item.TOPLAM_MIKTAR2.toLocaleString('TR') + " " + item.OLCU_BR2,
                        start: item.TARIH,
                        description: '',
                        inckey: '',
                        backgroundColor: ''
                    });
                })
                var listEvent = calendar.getEvents();
                listEvent.forEach(event => {
                    event.remove()
                });
                calendar.addEventSource(Planlar);
                updateMenu()


            })
        }).catch(function (err) {
            alert(err)
        })
    }

        function ShowProgress() {
            document.body.style.overflow = 'hidden';
            document.activeElement.blur();
            $('#nova-overlay').fadeIn('fast').css('display', 'flex');
        }
        function HideProgress() {
            document.body.style.overflow = 'auto';
            $('#nova-overlay').fadeOut('slow');
        }
        function myFunction() {
        var input = document.getElementById("Search");
        var filter = input.value.toLowerCase().replace('ı', 'i');
        var nodes = document.getElementsByClassName('m1');

        for (i = 0; i < nodes.length; i++) {
            if (nodes[i].innerText.toLowerCase().includes(filter)) {
                nodes[i].style.display = "block";
            } else {
                nodes[i].style.display = "none";
            }
        }
    }



//$(function() {
//        $.contextMenu({
//            selector: '.context-menu-one',
//            callback: function(key, options) {
//                var m = "clicked: " + key;
//                window.console && console.log(m) || alert(m);
//                console.log(options)
//            },
//            items: {
//                "edit": {name: "Edit", icon: "edit"},
//                "cut": {name: "Cut", icon: "cut"},
//               copy: {name: "Copy", icon: "copy"},
//                "paste": {name: "Paste", icon: "paste"},
//                "delete": {name: "Delete", icon: "delete"},
//                "sep1": "---------",
//                "quit": {name: "Quit", icon: function(){
//                    return 'context-menu-icon context-menu-icon-quit';
//                }}
//            }
//        });

//        $('.context-menu-one').on('click', function(e){
//            console.log('clicked', this);
//        })

//});
    function selectChange() {
        con=$('select').eq(0).val()
        refresh()
    }
    function updateMenu(){
        $.getJSON('http://192.168.2.13:83/api/seri/planlama/' + $('select').eq(0).val(), function (data) {
            drag.destroy();
            d = data.filter(x => x.ISEMRI!=null && x.ISEMRI.substring(0, 4) == $('select').eq(0).val());
            distinct = [];
            d = d.sort(function (a, b) {
                if (a.TESLIM_TARIHI > b.TESLIM_TARIHI) { return 1 }
                if (a.TESLIM_TARIHI < b.TESLIM_TARIHI) { return -1 }
                return 0;
            });
            for (let i = 0; i < d.length; i++) {
                if (!distinct.includes(d[i].MAMUL_KODU)) {
                    distinct.push(d[i].MAMUL_KODU)
                }
            }
            var planlananlar = data.filter(x => x.ISEMRI == null);
            CreateCalendar();
            if ($('select').eq(0).val() != 'DL01')
                $('#musteri2').html('<div style="display:flex;justify-content:center;align:center"><input class="form-control position-sticky sticky-top" type="text" id="Search" onkeyup="myFunction()" placeholder="Ara.."><button type="button" onclick="showPlanModal()" class="btn btn-success ms-1"><i class="bx bx-plus bx-xs"></i></button></div>');
            else {
                $('#musteri2').html('<input class="form-control position-sticky sticky-top" type="text" id="Search" onkeyup="myFunction()" placeholder="Ara..">');
            }
            for (let i = 0; i < planlananlar.length; i++) {
                $('#musteri2').append("<div style='border-radius:1rem;background-color:green;border-color:green !important' class='plan fc-event fc-h-event fc-daygrid-event fc-daygrid-block-event mt-1 m1' data-id='" + planlananlar[i].MAMUL_KODU + "'><div style='box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 2px;border-radius:1rem;color:white;' class='fc-event-main text-center'>" + planlananlar[i].MAMUL_ADI + " <p style='margin-top:0;margin-bottom:0;'>" + planlananlar[i].TOPLAM_MIKTAR.toLocaleString('TR') + " " + planlananlar[i].OLCU_BR1 + " | " + planlananlar[i].TOPLAM_MIKTAR2 + " " + planlananlar[i].OLCU_BR2 + "</p><p style='margin-top:0;margin-bottom:0;'>(" + moment(new Date(planlananlar[i].TESLIM_TARIHI)).locale('tr').format("DD-MM-YYYY HH:mm") + ")</p></div></div>")
            }

            $(".plan").on("dblclick", function () {
                Swal.fire({
                    title: 'Onay',
                    icon: 'question',
                    confirmButtonColor: '#3085d6',
                    denyButtonColor: '#d33',
                    text: 'Silmek istediğinizden emin misiniz?',
                    showDenyButton: true,
                    confirmButtonText: 'Evet',
                    denyButtonText: `Hayır`,
                }).then((result) => {
                    if (result.isConfirmed) {
                        axios.post('http://192.168.2.13:83/api/seri/planlama/delete/' + $(this).attr('data-id')).then(function (response) {
                            refresh()
                        })
                    }

                })
            });
            for (let i = 0; i < distinct.length; i++) {
                var color = "";
                var fontcolor = ""
                var border = ""
                if (moment(new Date(d.filter(x => x.MAMUL_KODU == distinct[i])[0].TESLIM_TARIHI)).locale('tr').format("HH:mm") == "00:00") {
                    color = "var(--fc-today-bg-color)"
                    fontcolor = "gray"
                    border = "transparent"

                } else {
                    color = "var(--fc-event-bg-color)"
                    fontcolor = "white"
                    border = "#697FC2"
                }
                $('#musteri2').append("<div style='border-radius:1rem;background-color:" + color + ";border-color:" + border + " !important' class='fc-event fc-h-event fc-daygrid-event fc-daygrid-block-event mt-1 m1' data-id='" + distinct[i] + "'><div style='box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 2px;border-radius:1rem;color:" + fontcolor + ";' class='fc-event-main text-center'>" + d.filter(x => x.MAMUL_KODU == distinct[i])[0].MAMUL_ADI + " <p style='margin-top:0;margin-bottom:0;'>" + (d.filter(x => x.MAMUL_KODU == distinct[i])[0].TOPLAM_MIKTAR).toLocaleString('TR') + " " + d.filter(x => x.MAMUL_KODU == distinct[i])[0].OLCU_BR1 + " | " + d.filter(x => x.MAMUL_KODU == distinct[i])[0].TOPLAM_MIKTAR2 + " " + d.filter(x => x.MAMUL_KODU == distinct[i])[0].OLCU_BR2 + "</p><p style='margin-top:0;margin-bottom:0;'>(" + moment(new Date(d.filter(x => x.MAMUL_KODU == distinct[i])[0].TESLIM_TARIHI)).locale('tr').format("DD-MM-YYYY HH:mm") + ")</p></div></div>")
            }
        })
    }
    function showPlanModal() {
        var url = 'http://192.168.2.13:83/api/stok/plan/' + $('select').eq(0).val();
        $('#miktar1').val(null);
        $('#miktar2').val(null);
        axios.get(url).then(function (response) {
            $('#stokSelect').html(null);
            $.each(response.data, function (i,val) {
                console.log(val.STOK_ADI)
                var option = $('<option/>');
                option.attr({ 'value': val.STOK_KODU }).text(val.STOK_ADI.replaceAll('Ý', 'İ').replaceAll('Þ', 'Ş').replaceAll('ý','ı'));
                $('#stokSelect').append(option);
            });
            $('#stokSelect').select2({ dropdownParent: $('#PlanModal') });
        })

        $('#PlanModal').modal('show');
    }
    function hidePlanModal() {
        $('#PlanModal').modal('hide');
    }
    function PlanKayit() {
        var data = [{ STOK_KODU: $('#stokSelect').val(), PLANLANAN_TARIH: new Date().getFullYear()+'1231', MIKTAR1: $('#miktar1').val(), MIKTAR2: $('#miktar2').val(), HAT_KODU: $('select').eq(0).val(), KAYIT_YAPAN_ID: @Request.Cookies["Id"].Value }]
        axios.post('http://192.168.2.13:83/api/seri/planlama/insert', data).then(function (response) {
            if (response.data = 'BAŞARILI') {
                hidePlanModal();
                refresh()
            }
        })
    }
</script>



