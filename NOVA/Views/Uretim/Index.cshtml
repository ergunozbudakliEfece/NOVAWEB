
@{
    Layout = "/Views/Shared/_Layout_isemri.cshtml";
}

@model NOVA.Models.MSIPAcik


<!DOCTYPE html>



<html>
<head>
    <title>Nova | Üretim Kayıtları</title>


    <link href="~/Content/table/placeholder-loading.min.css" rel="stylesheet" />
    <link href="~/Scripts/reorder-rows.css" rel="stylesheet" />
    <script src="~/Scripts/jqueryui-min.js"></script>
    <script src="~/Scripts/instascan.min.js"></script>
    <script src="~/assets/vendor/js/bootstrap.js"></script>

    <link href="~/assets/boxicons/css/boxicons.min.css" rel="stylesheet" />
    <script src="~/Content/pdf.min.js"></script>
    <link href="~/Content/pdf_viewer.min.css" rel="stylesheet" />
    <style>
        .swal2-html-container {
            overflow: hidden !important;
        }

        .select2-container--open {
            z-index: 99999999999999;
        }

        .tooltip-inner {
            max-width: 301px !important;
        }

        button: disabled, button[disabled] {
            border: 1px solid #999999;
            background-color: #e5e5e5e5;
            color: #bababa;
        }

        body {
            padding: 0 0 0 5rem !important;
            overflow: hidden !important;
        }



        .layout-wrapper, .layout-container {
            width: 90% !important;
            display: flex !important;
            flex: 1 1 auto !important;
            align-items: stretch !important;
        }

        #BekleyenIsEmirleriTable thead:nth-child(1) {
            display: none !important
        }

        #qr-reader1__dashboard_section {
            padding: 0 !important
        }

        #html5-qrcode-button-camera-stop {
            display: none !important;
        }

        /* .myInput {
            box-sizing: border-box;
            background-image: url('https://www.w3schools.com/howto/searchicon.png');
            background-position: 5px;
            background-repeat: no-repeat;
            font-size: 12px;
            padding: 8px 20px 7px 45px;
            border: none;
            z-index: 5;
        }*/

        .myInput:focus {
            outline: 3px solid #ddd;
        }

        .dropdown {
            position: fixed;
            display: inline-block;
        }

        .dropdown-content2 {
            position: fixed;
            background-color: #f6f6f6;
            margin-left: -100px;
            min-width: 100px;
            max-height: 300px;
            overflow: auto;
            border: 1px solid;
            display: none;
            z-index: 10;
        }

            .dropdown-content2 a {
                color: black;
                padding: 12px 16px;
                text-decoration: none;
                width: auto;
                display: none;
                cursor: pointer;
                z-index: 5;
                border-bottom: 1px solid;
            }

        .dropdown-content {
            position: relative;
            background-color: #f6f6f6;
            min-width: 130px;
            overflow: auto;
            border: 1px solid #ddd;
            z-index: 10;
        }

            .dropdown-content a {
                color: black;
                padding: 12px 16px;
                text-decoration: none;
                display: none;
                cursor: pointer;
                z-index: 5;
            }

        .dropdown a:hover {
            background-color: #ddd;
        }

        .show {
            display: flex;
        }

        .pvtAxisContainer {
            display: none;
        }

        .pvtRenderer {
            display: none;
        }

        .pvtVals {
            display: none;
        }

        #pivotoutput .pvtTotalLabel {
            display: none;
        }

        #pivotoutput .pvtTotal {
            display: none;
        }

        #pivotoutput .pvtGrandTotal {
            display: none;
        }



        @@media screen and (max-width: 800px) {
            /*#makmobile1 {
                display: flex !important;
            }

            #makmobile2 {
                display: flex !important;
            }*/

            #makineler {
                display: none !important;
            }
            /*#makineler1 {
                display: inline-flex !important;
            }

            #makineler2 {
                display: inline-flex !important;
            }

            #makineler3 {
                display: inline-flex !important;
            }*/

            #scanner {
                margin-top: 0 !important;
            }
            /*.modal {
                font-size: 10px !important;
            }*/

            .modal-dialog {
                max-width: 90% !important;
            }

            .span {
                font-size: 8px !important;
            }

            #BarkodButton {
                width: 20% !important;
            }
        }

        @@media screen and (max-width: 600px) {
            /*#makmobile1 {
                display: flex !important;
            }

            #makmobile2 {
                display: flex !important;
            }*/

            #makineler {
                display: none;
            }
            /*#makineler1 {
                display: inline-flex !important;
            }
            #makineler2 {
                display: inline-flex !important;
            }
            #makineler3 {
                display: inline-flex !important;
            }*/

            #BarkodButton {
                width: 60% !important;
            }

            .modal-content {
                margin-top: 50%
            }
        }

        #makmobile1 {
            display: none;
        }

        #makmobile2 {
            display: none;
        }

        .centercontent {
            position: absolute;
            max-width: 100%;
            height: auto;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 5;
        }

        .heart {
            animation: heartbeat 1s infinite alternate;
        }

        @@keyframes heartbeat {
            from {
                opacity: 0.3;
                transform: scale(0.32);
            }

            to {
                opacity: 1;
                transform: scale(0.40);
            }
        }



        .kare {
            width: 15px;
            height: 15px;
        }


        @@media screen and (max-height:800px) {
            #stokadlari {
                height: 540px;
            }
        }

        @@media screen and (min-height:801px) and (max-height:1180px) {
            #stokadlari {
                height: 560px;
            }
        }

        @@media screen and (min-height:1150px) {
            #stokadlari {
                height: 945px;
            }
        }

        @@media screen and (max-width:1201px) {

            .tableClass {
                max-height: 1600px !important;
            }
        }

        .th-inner {
            white-space: break-spaces !important
        }
    </style>
    <link href="~/Scripts/select2.css" rel="stylesheet" />

    <link href="~/assets/vendor/css/cssprogress.min.css" rel="stylesheet" />
    <script src="~/Scripts/select2.min.js"></script>

    <script>
        var sag = 0;
    </script>
    <style>
        .centercontent {
            position: absolute;
            max-width: 100%;
            height: auto;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 5;
        }



        .foot {
            display: none !important;
        }
    </style>
    <script>
        function ShowProgress() {
            document.body.style.overflow = 'hidden';
            document.activeElement.blur();
            $('#nova-overlay').fadeIn('fast').css('display', 'flex');
        }
        function HideProgress() {
            document.body.style.overflow = 'auto';
            $('#nova-overlay').fadeOut('slow');
        }
    </script>
    <script src="~/Content/viewer.js"></script>
    <style type="text/css">
        #pdf_container {
            background: #ccc;
            text-align: center;
            display: none;
            padding: 10px 0;
        }

        .status-bar {
            height: 35px;
            display: none;
            justify-content: end;
            align-items: center;
            padding: 0 0.25rem;
        }

        .battery-status {
            width: fit-content;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .battery-icon {
            width: 40px;
            height: 20px;
            background: linear-gradient(90deg, #a5a5a5 64%, #a5a5a5 64%);
            border-radius: 0.16rem;
            border: 2px solid #c0c0c0;
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: x-small;
        }

            .battery-icon::after {
                content: "";
                position: absolute;
                right: -5px;
                top: 3px;
                width: 3px;
                height: 10px;
                border-radius: 0 0.16rem 0.16rem 0;
                background-color: #c0c0c0;
            }

        #battery-charging, #battery-warning {
            display: none;
        }
    </style>
</head>
<body style="overflow-x:hidden;">

    <div id="nova-overlay" style="position: absolute; background: #00000080; left: 0; right: 0; bottom: 0; top: 0; z-index: 9999999;display:none;justify-content:center;align-items:center;">
        <div class="heart"><img id="progress" src="~/images/novasaydam.png" width="400" /></div>
    </div>

    <div class="container-fluid p-2">

        <div class="status-bar">
            <div class="battery-status">
                <div class="battery-icon">
                    <i id="battery-charging" class="bi bi-lightning-charge-fill"></i>
                    <i id="battery-warning" class="bi bi-exclamation-triangle-fill"></i>
                </div>
                <div class="battery-level">0%</div>
            </div>
        </div>

        <div class="row d-flex justify-content-center align-items-center gap-2">
            <div class="col-sm-auto d-flex justify-content-center">
                <div class="btn-group" role="group" aria-label="Basic radio toggle button group">
                    <input type="radio" class="btn-check" name="uretim-islem" id="uretimealrd" onclick="change(parseInt(this.value))" value="1" autocomplete="off">
                    <label class="btn btn-outline-primary openlbl" for="uretimealrd">ÜRETİME AL</label>

                    <input type="radio" class="btn-check" name="uretim-islem" id="uretimkaydird" onclick="change(parseInt(this.value))" value="0" autocomplete="off">
                    <label class="btn btn-outline-primary" for="uretimkaydird">ÜRETİM KAYDI</label>

                    <input type="radio" class="btn-check" name="uretim-islem" id="bekleyenisemirlerird" onclick="change(parseInt(this.value))" value="2" autocomplete="off">
                    <label class="btn btn-outline-primary" for="bekleyenisemirlerird">İŞ EMİRLERİ</label>

                    <input type="radio" class="btn-check" name="uretim-islem" id="uretimegirenlerrd" onclick="change(parseInt(this.value))" value="3" autocomplete="off">
                    <label class="btn btn-outline-primary" for="uretimegirenlerrd">ÜRETİME ALINANLAR</label>

                    <input type="radio" class="btn-check" name="uretim-islem" id="uretilmisbarkodlarrd" onclick="change(parseInt(this.value))" value="4" autocomplete="off">
                    <label class="btn btn-outline-primary" for="uretilmisbarkodlarrd">ÜRETİLMİŞ BARKODLAR</label>
                </div>
            </div>

        </div>

        <div class="row" style="min-height:100%;overflow-y:auto;">
            <div class="col">

                <div class="row mt-2" style="max-width:100vw">
                    <div class="col-11 d-flex justify-content-center align-items-center makineler w-100 p-1">
                        <div id="UretimKaydiMakine" style="width:100vw; display: none;"> </div>
                        <div id="BekleyenIsEmirleriMakine" style="width: 100vw; display: none;"> </div>
                        <div id="UretimeGirenlerMakine" style="width: 100vw; display: none;"> </div>
                        <div id="uretilmis-barkod-makineler" style="width: 100vw; display: none;"></div>
                    </div>
                </div>
                <div class="row  mt-2">
                    <div class="col-sm-auto">
                        <div class="btn-group iefiltre" role="group" aria-label="Basic radio toggle button group" style="display:none;">
                            <input type="radio" class="btn-check" name="makine-status-ie" id="on-ie" onclick="BekleyenIsEmriFiltrele(this.value)" value="open" autocomplete="off">
                            <label class="btn btn-outline-primary openlbl" for="on-ie">AÇIK</label>

                            <input type="radio" class="btn-check" name="makine-status-ie" id="off-ie" onclick="BekleyenIsEmriFiltrele(this.value)" value="close" autocomplete="off">
                            <label class="btn btn-outline-primary" for="off-ie">KAPALI</label>

                            <input type="radio" class="btn-check" name="makine-status-ie" id="all-ie" onclick="BekleyenIsEmriFiltrele(this.value)" value="all" autocomplete="off">
                            <label class="btn btn-outline-primary" for="all-ie">TÜMÜ</label>
                        </div>
                    </div>
                    <div class="col" id="isemirlerinikapatbtn" style="display:none;">
                        <button type="button" class="btn btn-outline-primary" onclick="SeciliIsEmirleriniKapat()">SEÇİLİ İŞ EMİRLERİNİ KAPAT</button>
                    </div>
                </div>
                <div class="row" id="makmobile1" style="max-width:100vw">
                    <div class="col">

                        <div class="btn-group" role="group" aria-label="Basic radio toggle button group" id="makineler2" style="display:none">

                        </div>

                    </div>
                </div>
                <div class="row my-3" id="makmobile2" style="max-width:100vw;">
                    <div class="col">

                        <div class="btn-group" role="group" aria-label="Basic radio toggle button group" id="makineler3" style="display:none">

                        </div>
                    </div>
                </div>
                <div class="row" style="min-height: 33%; display: none; min-height: 33%; padding-left: 0.75rem; overflow: hidden; " id="tablo">
                    <div class="col" style=" overflow-y: auto; border: 1px solid #d9dee3; padding: 13px; display: grid; grid-template-columns: repeat(auto-fill,minmax(295px, 0)); grid-template-rows: repeat(auto-fill, minmax(145px, 0)); grid-gap: 3px;" id="stokadlari">

                    </div>

                    <div class="col-sm-auto" style="padding-right: 0;">
                        <div class="tableClass" style="max-height:85vh !important">
                            <table id="UretimListeTable"
                                   class="table"
                                   data-show-refresh="false"
                                   data-show-toggle="false"
                                   data-show-fullscreen="false"
                                   data-show-columns="false"
                                   data-show-columns-toggle-all="false"
                                   data-detail-view="false"
                                   data-detail-view-by-click="false"
                                   data-show-export="false"
                                   data-click-to-select="false"
                                   data-show-pagination-switch="false"
                                   data-pagination="false"
                                   data-show-footer="false"
                                   data-mobile-responsive="false"
                                   data-locale="tr-TR"
                                   data-sticky-header="true">
                                <thead>
                                    <tr>
                                        <th data-formatter="oranFormatter4" data-field="ORAN" data-halign="center" data-align="center">GİRDİLER</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row" style="min-height:33%;display:none" id="BekleyenIsEmirleriTablo">


                    <table id="BekleyenIsEmirleriTable"
                           data-search="true"
                           data-show-refresh="false"
                           data-show-toggle="false"
                           data-show-fullscreen="false"
                           data-show-columns="false"
                           data-show-columns-toggle-all="false"
                           data-detail-view="true"
                           data-detail-view-by-click="true"
                           data-show-export="false"
                           data-click-to-select="true"
                           data-show-pagination-switch="false"
                           data-show-footer="false"
                           data-mobile-responsive="true"
                           data-detail-view-icon="false"
                           data-height="700"
                           data-row-style="rowFormatter"
                           data-fixed-number="0"
                           data-pagination-parts="['pageSize', 'pageInfo', 'pageList']"
                           data-locale="tr-TR">
                        <thead>
                            <tr>
                                <th data-width="50" data-field="TARIH" data-halign="center" data-align="center" data-sortable="true">TARİH</th>
                                <th data-width="0" data-field="HAM_SERINO" data-halign="center" data-align="center" data-sortable="true">HAMMADDE BARKOD NO</th>
                                <th data-width="0" data-field="HAM_STOK_KODU" data-halign="center" data-align="center" data-sortable="true">HAM STOK KODU</th>
                                <th data-width="0" data-field="HAM_ADI" data-halign="center" data-align="center" data-sortable="true">HAMMADE STOK ADI</th>
                                <th data-width="0" data-field="HAM_DETAY" data-halign="center" data-align="center" data-sortable="true">HAMMADE DETAY</th>
                                <th data-width="0" data-field="HAM_GENISLIK" data-halign="center" data-align="center" data-sortable="true">HAMMADE GENISLIK</th>
                                <th data-width="0" data-field="HAM_KALINLIK" data-halign="center" data-align="center" data-sortable="true">HAMMADE KALINLIK</th>
                                <th data-width="0" data-field="HAM_FIRMA_SERI" data-halign="center" data-align="center" data-sortable="true">HAMMADE FIRMA SERI</th>
                                <th data-width="0" data-field="ACIKLAMA_4" data-halign="center" data-align="center" data-sortable="true">ACIKLAMA 4</th>
                                <th data-width="0" data-field="ACIKLAMA_5" data-halign="center" data-align="center" data-sortable="true">ACIKLAMA 5</th>
                                <th data-width="0" data-field="HAM_KALITE" data-halign="center" data-align="center" data-sortable="true">HAMMADE KALITE</th>
                                <th data-width="0" data-field="HAM_KAP_KALINLIK" data-halign="center" data-align="center" data-sortable="true">HAMMADE KAP KALINLIK</th>

                                <th data-width="0" data-field="HAM_MIKTAR" data-halign="center" data-align="center" data-sortable="true">HAMMADE MIKTAR</th>

                                <th data-width="0" data-field="USTISEMRI" data-halign="center" data-align="center" data-sortable="true">USTISEMRI</th>
                                <th data-width="0" data-field="ALT_ISEMRI" data-halign="center" data-align="center" data-sortable="true">ALT ISEMRI</th>
                                <th data-width="0" data-field="SIRA" data-halign="center" data-align="center" data-sortable="true">SIRA</th>
                                <th data-width="0" data-field="URT_SERINO" data-halign="center" data-align="center" data-sortable="true">URT SERINO</th>
                                <th data-width="0" data-field="URT_STOK_KODU" data-halign="center" data-align="center" data-sortable="true">URT STOK KODU</th>
                                <th data-width="0" data-field="URT_STOK_ADI" data-halign="center" data-align="center" data-sortable="true">STOK ADI</th>
                                <th data-width="0" data-field="URT_GENISLIK" data-halign="center" data-align="center" data-sortable="true">URT GENISLIK</th>
                                <th data-width="0" data-field="IE_MIKTAR2" data-halign="center" data-align="center" data-sortable="true" data-formatter="MiktarFormatter">MİKTAR 2</th>
                                <th data-width="0" data-field="IE_MIKTAR" data-halign="center" data-align="center" data-sortable="true" data-formatter="MiktarFormatter">MİKTAR 1</th>
                                <th data-width="0" data-field="REFISEMRINO" data-halign="center" data-align="center" data-sortable="true">REFISEMRINO</th>
                                <th data-width="0" data-field="REF_STOK_KODU" data-halign="center" data-align="center" data-sortable="true">REF_STOK_KODU</th>
                                <th data-width="0" data-field="REF_STOK_ADI" data-halign="center" data-align="center" data-sortable="true">REF_STOK_ADI</th>
                                <th data-width="5" data-field="ISLEM" data-halign="center" data-align="center" data-sortable="false" data-formatter="BekleyenIslemFormatter">İŞLEM</th>
                            </tr>
                        </thead>
                    </table>


                </div>
                <div class="row" style="min-height:33%;display:none" id="UretimeGirenlerTablo">
                    <div id="UretimeGirenlerTabloToolBar">
                        <div class="row gap-0 mt-1">
                            <div class="col p-0">
                                <select id="filter" name="filterAlgorithm" style="width: 25vw !important;">
                                </select>

                            </div>
                            <div class="col p-1">
                                <button type="button" id="UretimeAlButton" onclick="UretimeAl()" class="btn btn-primary" style="height: 28px; white-space: nowrap; text-align: center; padding-top: 2px !important;">ÜRETİME AL</button>
                            </div>
                            <div class="col p-0" id="siralama">
                                <div class="class=form-check form-switch text-center">
                                    <input class="form-check-input" type="checkbox" onchange="HatGirdiSıralama()" id="HatGirdiSiralamaSwitch">
                                </div>
                                <div class="row">
                                    <label style="font-size: 10px; letter-spacing:1px">SIRALAMA</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <div class="tableClass" style="max-height:680px">
                            <table id="UretimeGirenlerTable"
                                   class="table"
                                   data-search="true"
                                   data-toolbar="#UretimeGirenlerTabloToolBar"
                                   data-show-refresh="false"
                                   data-show-toggle="false"
                                   data-show-fullscreen="false"
                                   data-show-columns="false"
                                   data-show-columns-toggle-all="false"
                                   data-detail-view="false"
                                   data-detail-view-by-click="false"
                                   data-show-export="false"
                                   data-click-to-select="true"
                                   data-show-pagination-switch="false"
                                   data-pagination="true"
                                   data-id-field="id"
                                   data-show-footer="false"
                                   data-mobile-responsive="true"
                                   data-pagination-parts="['pageSize', 'pageInfo', 'pageList']"
                                   data-locale="tr-TR"
                                   data-page-size="20"
                                   data-sticky-header="true">
                                <thead>
                                    <tr>
                                        <th data-formatter="oranFormatter3" data-width="50" data-field="ORAN" data-halign="center" data-align="center" data-card-visible="false">%</th>
                                        <th data-field="SERI_NO" data-halign="center" data-align="center">BARKOD NO</th>
                                        <th data-formatter="UnitFormatter" data-field="SERI_MIKTAR" data-halign="center" data-align="center">MİKTAR</th>
                                        <th data-formatter="UnitFormatter" data-field="URETILEN" data-halign="center" data-align="center">ÜRETİLEN</th>
                                        <th data-formatter="UnitFormatter" data-field="SERI_BAKIYE" data-halign="center" data-align="center">KALAN MİKTAR</th>
                                        <th data-formatter="oranFormatter2" data-field="ORAN" data-halign="center" data-align="center">TÜKETİM</th>
                                        <th data-halign="center" data-align="center" data-width="50" data-formatter="silFormatter">İŞLEM</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>

                </div>




                <div class="row" style="min-height:33%;display:none" id="UretilmisBarkodlar">
                    <div id="UretilmisBarkodlarToolbar" class="row">
                        <div class="col">
                            <select id="uretilmis-barkod-dizayn" class="form-select" style="width: 110px;"></select>
                        </div>
                        <div class="col">
                            <select id="uretilmis-barkod-yazici" class="form-select" style="width: 110px;" disabled></select>
                        </div>
                        <div class="col">
                            <div class="form-check form-switch h-100 position-relative">
                                <input class="form-check-input" style="width: 6rem; height: 2rem;" type="checkbox" id="yazdirSwitch" onclick="YazdirSwitch()">
                                <span id="yazdirLabel" style="position: absolute; left: 0.5rem; top: 0.7rem; font-size: 0.7rem; pointer-events: none; color: white; opacity: 0;">YAZDIR</span>
                                <span id="yazdirmaLabel" style="position: absolute; left: 2.1rem; top: 0.7rem; font-size: 0.7rem; pointer-events: none;">YAZDIRMA</span>
                            </div>
                        </div>
                        <div class="col">
                            <button id="uretilmis-barkod-yazdir" class="btn btn-primary" onclick="UretilmisEtiketleriYazdir()" disabled>ÖNİZLE</button>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <div class="tableClass" style="max-height:650px">
                            <table id="UretilmisBarkodlarTablo"
                                   class="table"
                                   data-search="true"
                                   data-toolbar="#UretilmisBarkodlarToolbar"
                                   data-show-refresh="false"
                                   data-show-toggle="false"
                                   data-show-fullscreen="false"
                                   data-show-columns="false"
                                   data-show-columns-toggle-all="false"
                                   data-detail-view="false"
                                   data-detail-view-by-click="false"
                                   data-show-export="false"
                                   data-click-to-select="true"
                                   data-show-pagination-switch="false"
                                   data-pagination="true"
                                   data-id-field="id"
                                   data-show-footer="false"
                                   data-mobile-responsive="true"
                                   data-pagination-parts="['pageSize', 'pageInfo', 'pageList']"
                                   data-locale="tr-TR"
                                   data-page-size="10"
                                   data-height="600"
                                   data-sticky-header="true">
                                <thead>
                                    <tr>
                                        <th data-field="SERI_NO" data-halign="center" data-align="center">BARKOD NO</th>
                                        <th data-field="STOK_ADI" data-halign="center" data-align="center">STOK ADI</th>
                                        <th data-field="ACIKLAMA_5" data-halign="center" data-align="center">ESKİ BOBİN NO</th>
                                        <th data-field="ACIKLAMA_4" data-halign="center" data-align="center">MENŞEİ</th>
                                        <th data-field="ACIK3" data-halign="center" data-align="center">FİRMA BOBİN NO</th>
                                        <th data-width="10" data-halign="center" data-align="center" data-formatter="UretilmisBarkodFormatter">İŞLEM</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>

                </div>


                <div class="row" style="min-height:33%;display:none" id="scanner">
                    <div id="element">
                        <audio id="giris">
                            <source src="~/Content/giris.mp3" type="audio/mpeg" />
                        </audio>
                        <audio id="onay">
                            <source src="~/Content/onay.mp3" type="audio/mpeg" />
                        </audio>
                        <audio id="hata1">
                            <source src="~/Content/hatanew.mp3" type="audio/mpeg" />
                        </audio>
                        <audio id="cikis">
                            <source src="~/Content/cıkıs.mp3" type="audio/mpeg" />
                        </audio>
                        <audio id="hata">
                            <source src="~/Content/hata.mp3" type="audio/mpeg" />
                        </audio>
                        <button style="display:none" onclick="playAudio()" type="button">Play Audio</button>

                        @*<div class="justify-content-center" style="display:flex">
                                <div id="qr-reader1" style="width:900px;"></div>
                                <div id="qr-reader-results1"></div>
                            </div>*@
                    </div>
                </div>
            </div>



        </div>
    </div>

    <style>
        #BekleyenIsEmirleriTable {
            margin-top: 0 !important;
        }

        .detail-view td {
            padding: 1px;
        }

        .makineler label {
            font-size: larger;
        }
    </style>

    <script>
        var IsEmirleri = [];
        var IsEmirleriUstBilgi = [];
        var KapatilacakIsEmirleri = [];

        function MakineListele() {
            $.getJSON("http://192.168.2.13:83/api/makine/makineler", (data) => {
                var Makineler = `<div class="btn-group" style="grid-template-columns: repeat( auto-fit, minmax(80px, 1fr) );display:grid;grid-gap: 0.25rem 0;" role="group" aria-label="Basic radio toggle button group">`;

                for (var i = 0; i < data.length; i++) {
                    var MachineType = data[i].HAT_KODU.substring(0, 2).toLowerCase();

                    if (MachineType != "sm") {
                        Makineler += `<input type="radio" class="btn-check" name="makine-ie" id="${data[i].HAT_KODU}" onclick="MakineBekleyenIsEmri(this.value)" value="${data[i].HAT_KODU}" autocomplete="off"><label class="btn btn-outline-primary" for="${data[i].HAT_KODU}">${data[i].HAT_KODU}</label>`;
                    }
                }
                Makineler += `<input type="radio" class="btn-check" name="makine-ie" id="BarkodButton" onclick="Scan()" value="BarkodButton" autocomplete="off"><label class="btn btn-outline-primary" for="BarkodButton"><i class="bi bi-qr-code-scan"></i></label>`;
                $('#BekleyenIsEmirleriMakine').html(Makineler + `</div>`);
            });
        }
        function MakineListeleUK() {
            $.getJSON("http://192.168.2.13:83/api/makine/makineler", (data) => {
                var Makineler = `<div class="btn-group" style="grid-template-columns: repeat( auto-fit, minmax(80px, 1fr) );display:grid;grid-gap: 0.25rem 0;" role="group" aria-label="Basic radio toggle button group">`;

                for (var i = 0; i < data.length; i++) {
                    var MachineType = data[i].HAT_KODU.toLowerCase();

                    if (MachineType != "sm03") {
                        Makineler += `<input type="radio" class="btn-check" name="makine-ieuk" id="${data[i].HAT_KODU}" onclick="c(this.value)" value="${data[i].HAT_KODU}" autocomplete="off"><label class="btn btn-outline-primary" for="${data[i].HAT_KODU}">${data[i].HAT_KODU}</label>`;
                    }
                }

                $('#UretimKaydiMakine').html(Makineler + `</div>`);
            });
        }
        function MakineListeleAL() {
            $.getJSON("http://192.168.2.13:83/api/makine/makineler", (data) => {
                var Makineler = `<div class="btn-group" style="grid-template-columns: repeat( auto-fit, minmax(80px, 1fr) );display:grid;grid-gap: 0.25rem 0;" role="group" aria-label="Basic radio toggle button group">`;

                for (var i = 0; i < data.length; i++) {
                    var MachineType = data[i].HAT_KODU.substring(0, 2).toLowerCase();

                    if (MachineType != "sm") {
                        if (data[i].HAT_KODU == "TP01") {
                            Makineler += `<input type="radio" class="btn-check" name="makine-ieAL" id="${data[i].HAT_KODU}" onclick="UretimAl()" value="${data[i].HAT_KODU}" autocomplete="off"><label class="btn btn-outline-primary" for="${data[i].HAT_KODU}">${data[i].HAT_KODU}</label>`;
                        } else {
                            //Makineler += `<input type="radio" disabled class="btn-check" name="makine-ieAL" id="${data[i].HAT_KODU}" onclick="c(this.value)" value="${data[i].HAT_KODU}" autocomplete="off"><label class="btn btn-outline-primary" for="${data[i].HAT_KODU}">${data[i].HAT_KODU}</label>`;
                        }
                    }
                }

                $('#UretimeAlMakine').html(Makineler + `</div>`);
            });
        }

        function MakineBekleyenIsEmri(value) {
            ShowProgress();
            $('#BekleyenIsEmirleriTablo').hide();

            $('#BekleyenIsEmirleriTable').bootstrapTable('destroy');
            $('#BekleyenIsEmirleriTable').bootstrapTable({ data: [] });

            $("input:radio[name=makine-status-ie][value='open']").prop('checked', true);

            KapatilacakIsEmirleri = [];
            $('#isemirlerinikapatbtn').hide();

            BekleyenIsEmriFiltrele($("input:radio[name=makine-status-ie]").val());

            $(".iefiltre").show();
            HideProgress();
        }

        function BekleyenIsEmriFiltrele(value) {
            ShowProgress();
            $('#BekleyenIsEmirleriTablo').hide();

            $('#BekleyenIsEmirleriTable').bootstrapTable('destroy');
            $('#BekleyenIsEmirleriTable').bootstrapTable({ data: [] });

            var Type = value === "all" ? "0" : value === "open" ? "H" : "E";
            let MakineKodu = $('input:radio[name="makine-ie"]:checked').val();

            IsEmirleri = [];
            IsEmirleriUstBilgi = [];
            KapatilacakIsEmirleri = [];

            $('#isemirlerinikapatbtn').hide();

            $.ajax({
                url: `http://192.168.2.13:83/api/ie/sp/${MakineKodu}/${Type}`,
                type: 'GET',
                success: (data) => {
                    IsEmirleri = data;
                }
            }).then(() =>
            {
                MakineKoduIleIsEmriUstBilgiDuzenle();

                $('#BekleyenIsEmirleriTable').bootstrapTable('destroy');
                $('#BekleyenIsEmirleriTable').bootstrapTable({ data: IsEmirleriUstBilgi });

                MakineKoduIleSutunFiltrele(MakineKodu);

                $('#BekleyenIsEmirleriTablo').show();
                HideProgress();
            });
        }

        $('#BekleyenIsEmirleriTable').on('expand-row.bs.table', function (e, index, row, $detail)
        {
            var Sütunlar = MakineKoduIleDetaySutunFiltrele();

            var MakineKodu = $('input:radio[name="makine-ie"]:checked').val();

            var MakineKodu = $('input:radio[name="makine-ie"]:checked').val();

            $detail.html(`<div class="card-body p-2" style="background-color:mintcream;"><div class="table-responsive"><table id="BekleyenIsEmirleri${index}DetailTable" class="table" data-search="false" data-show-refresh="false" data-show-toggle="false" data-show-fullscreen="false" data-show-columns="false" data-show-columns-toggle-all="false" data-detail-view="false" data-detail-view-by-click="false" data-show-export="false" data-click-to-select="true" data-minimum-count-columns="2" data-show-pagination-switch="false" data-pagination="false" data-id-field="id" data-show-footer="false" data-mobile-responsive="true" data-row-style="DetailSatirStili" data-response-handler="responseHandler" data-pagination-parts="['pageSize', 'pageInfo', 'pageList']" data-locale="tr-TR"><thead><tr>
                                        ${Sütunlar}
                                        </tr></thead></table></div></div><div id="parent-id-${MakineKodu == "DL01" ? row.HAM_SERINO : row.URT_STOK_KODU}" style="display:none;">${index}</div>`);

            var DetailData = [];

            DetailData = MakineKoduIleDetayTabloFiltrele(row);

            $(`#BekleyenIsEmirleri${index}DetailTable`).bootstrapTable({ data: DetailData });
        });

        function MakineKoduIleIsEmriUstBilgiDuzenle()
        {
            var MakineKodu = $('input:radio[name="makine-ie"]:checked').val();
            var IsEmirleriTMP = JSON.parse(JSON.stringify(IsEmirleri));

            if (MakineKodu === "DL01")
            {
                for (var i = 0; i < IsEmirleriTMP.length; i++)
                {
                    const index = IsEmirleriUstBilgi.map(object => object.HAM_SERINO).indexOf(IsEmirleriTMP[i].HAM_SERINO);

                    if (index > -1)
                    {
                        IsEmirleriUstBilgi[index].HAM_MIKTAR += IsEmirleriTMP[i].HAM_MIKTAR;
                    }
                    else
                    {
                        IsEmirleriUstBilgi.push(IsEmirleriTMP[i]);

                        var SonKayit = IsEmirleriUstBilgi[IsEmirleriUstBilgi.length - 1];

                        if ($('input:radio[name="makine-status-ie"]:checked').val() == "all") {
                            var AcikVarMi = IsEmirleriTMP.filter(x => x.HAM_SERINO == SonKayit.HAM_SERINO && x.KAPALI == "H").length > 0;

                            if (AcikVarMi) {
                                SonKayit.KAPALI = "H";
                            }
                        }
                    }
                }
            }
            else if (MakineKodu === "BK01" || MakineKodu === "MH01" || MakineKodu === "PB01" || MakineKodu === "PB02" || MakineKodu === "RF01" || MakineKodu === "RF02" || MakineKodu === "RF03" || MakineKodu === "TP01" || MakineKodu === "SM01" || MakineKodu === "SM02" || MakineKodu == "SM03")
            {
                for (var i = 0; i < IsEmirleriTMP.length; i++)
                {
                    const index = IsEmirleriUstBilgi.map(object => object.URT_STOK_KODU).indexOf(IsEmirleriTMP[i].URT_STOK_KODU);

                    if (index > -1)
                    {
                        IsEmirleriUstBilgi[index].IE_MIKTAR += IsEmirleriTMP[i].IE_MIKTAR;
                        IsEmirleriUstBilgi[index].IE_MIKTAR2 += IsEmirleriTMP[i].IE_MIKTAR2;
                    }
                    else
                    {
                        IsEmirleriUstBilgi.push(IsEmirleriTMP[i]);

                        var SonKayit = IsEmirleriUstBilgi[IsEmirleriUstBilgi.length - 1];

                        if ($('input:radio[name="makine-status-ie"]:checked').val() == "all")
                        {
                            var AcikVarMi = IsEmirleriTMP.filter(x => x.URT_STOK_KODU == SonKayit.URT_STOK_KODU && x.KAPALI == "H").length > 0;

                            if (AcikVarMi) {
                                SonKayit.KAPALI = "H";
                            }
                        }
                    }
                }
            }
        }

        function MakineKoduIleSutunFiltrele(MakineKodu)
        {
            switch (MakineKodu)
            {
                case "DL01":
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'TARIH');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'HAM_SERINO');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'HAM_STOK_KODU');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'HAM_ADI');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'HAM_DETAY');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'HAM_GENISLIK');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'HAM_KALINLIK');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'HAM_FIRMA_SERI');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'ACIKLAMA_4');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'ACIKLAMA_5');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'HAM_KALITE');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'HAM_KAP_KALINLIK');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'ISLEM');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'HAM_MIKTAR');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'USTISEMRI');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'ALT_ISEMRI');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'SIRA');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'URT_SERINO');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'URT_STOK_KODU');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'URT_STOK_ADI');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'URT_GENISLIK');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'IE_MIKTAR');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'IE_MIKTAR2');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'REFISEMRINO');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'REF_STOK_KODU');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'REF_STOK_ADI');
                    break;
                case "BK01":
                case "MH01":
                case "PB01":
                case "PB02":
                case "RF01":
                case "RF02":
                case "RF03":
                case "SM01":
                case "SM02":
                case "SM03":
                case "TP01":
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'TARIH');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'HAM_SERINO');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'HAM_STOK_KODU');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'HAM_ADI');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'HAM_DETAY');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'HAM_GENISLIK');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'HAM_KALINLIK');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'HAM_FIRMA_SERI');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'ACIKLAMA_4');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'ACIKLAMA_5');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'HAM_KALITE');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'HAM_KAP_KALINLIK');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'HAM_MIKTAR');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'USTISEMRI');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'ALT_ISEMRI');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'SIRA');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'URT_SERINO');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'URT_STOK_KODU');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'URT_STOK_ADI');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'URT_GENISLIK');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'IE_MIKTAR');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'IE_MIKTAR2');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'REFISEMRINO');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'REF_STOK_KODU');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('hideColumn', 'REF_STOK_ADI');
                    $('#BekleyenIsEmirleriTable').bootstrapTable('showColumn', 'ISLEM');
                    break;
            };
        }

        function MakineKoduIleDetaySutunFiltrele()
        {
            let MakineKodu = $('input:radio[name="makine-ie"]:checked').val();

            switch (MakineKodu) {
                case "DL01":
                    return `<th data-visible="false" data-width="0" data-field="TARIH" data-halign="center" data-align="center" data-sortable="true">TARİH</th>
                        <th data-visible="false" data-width="0" data-field="HAM_SERINO" data-halign="center" data-align="center" data-sortable="true">HAMMADDE BARKOD NO</th>
                        <th data-visible="false" data-width="0" data-field="HAM_STOK_KODU" data-halign="center" data-align="center" data-sortable="true">HAMMADDE STOK KODU</th>
                        <th data-visible="false" data-width="0" data-field="HAM_ADI" data-halign="center" data-align="center" data-sortable="true">HAMMADDE ADI</th>
                        <th data-visible="false" data-width="0" data-field="HAM_DETAY" data-width="150" data-halign="center" data-align="center" data-sortable="true">HAMMADDE DETAY</th>
                        <th data-visible="false" data-width="0" data-field="HAM_GENISLIK" data-halign="center" data-align="center" data-sortable="true">HAMMADDE GENİŞLİK</th>
                        <th data-visible="false" data-width="0" data-field="HAM_KALINLIK" data-halign="center" data-align="center" data-sortable="true">HAMMADDE KALINLIK</th>
                        <th data-visible="false" data-width="0" data-field="HAM_FIRMA_SERI" data-halign="center" data-align="center" data-sortable="true">HAMMADDE FİRMA SERİ</th>
                        <th data-visible="false" data-width="0" data-field="ACIKLAMA_4" data-halign="center" data-align="center" data-sortable="true">ACIKLAMA 4</th>
                        <th data-visible="false" data-width="0" data-field="ACIKLAMA_5" data-halign="center" data-align="center" data-sortable="true">ACIKLAMA 5</th>
                        <th data-visible="false" data-width="0" data-field="HAM_KALITE" data-halign="center" data-align="center" data-sortable="true">HAMMADDE KALITE</th>
                        <th data-visible="false" data-width="0" data-field="HAM_KAP_KALINLIK" data-halign="center" data-align="center" data-sortable="true">HAMMADDE KAPLAMA</th>
                        <th data-visible="false" data-width="0" data-field="HAM_MIKTAR" data-halign="center" data-align="center" data-sortable="true">HAMMADDE MIKTAR</th>
                        <th data-visible="true" data-width="0" data-field="SIRA" data-halign="center" data-align="center" data-sortable="false">SIRA</th>
                        <th data-visible="false" data-width="0" data-field="USTISEMRI" data-halign="center" data-align="center" data-sortable="true">USTISEMRI</th>
                        <th data-visible="true" data-width="0" data-field="ALT_ISEMRI" data-halign="center" data-align="center" data-sortable="true">ALT İŞEMRİ</th>
                        <th data-visible="true" data-width="0" data-field="URT_SERINO" data-halign="center" data-align="center" data-sortable="true">ÜRETİLECEK BARKOD NO</th>
                        <th data-visible="false" data-width="0" data-field="URT_STOK_KODU" data-halign="center" data-align="center" data-sortable="true">STOK KODU</th>
                        <th data-visible="true" data-width="0" data-field="URT_STOK_ADI" data-halign="center" data-align="center" data-sortable="true">STOK ADI</th>
                        <th data-visible="true" data-width="0" data-field="URT_GENISLIK" data-halign="center" data-align="center" data-sortable="true">GENİŞLİK</th>
                        <th data-visible="true" data-width="0" data-field="IE_MIKTAR2" data-halign="center" data-align="center" data-sortable="true" data-formatter="MiktarFormatter">MİKTAR 2</th>
                        <th data-visible="true" data-width="0" data-field="IE_MIKTAR" data-halign="center" data-align="center" data-sortable="true" data-formatter="MiktarFormatter">MİKTAR 1</th>
                        <th data-visible="true" data-width="0" data-field="REFISEMRINO" data-halign="center" data-align="center" data-sortable="true">REFERANS İŞEMRİ NO</th>
                        <th data-visible="false" data-width="0" data-field="REF_STOK_KODU" data-halign="center" data-align="center" data-sortable="true">REF STOK KODU</th>
                        <th data-visible="true" data-width="0" data-field="REF_STOK_ADI" data-halign="center" data-align="center" data-sortable="true">REF. İŞ EMRİ STOK ADI</th>
                        <th data-visible="true" data-width="0" data-formatter="IsEmriDetayIslemFormatter" data-halign="center" data-align="center" data-sortable="false">İŞLEM</th>`;
                case "BK01":
                case "MH01":
                case "PB01":
                case "PB02":
                case "RF01":
                case "RF02":
                case "RF03":
                case "SM01":
                case "SM02":
                case "SM03":
                case "TP01":
                    return `<th data-visible="true" data-width="0" data-field="TARIH" data-halign="center" data-align="center" data-sortable="true">TARİH</th>
                        <th data-visible="true" data-width="0" data-field="HAM_SERINO" data-halign="center" data-align="center" data-sortable="true">HAMMADDE BARKOD NO</th>
                        <th data-visible="false" data-width="0" data-field="HAM_STOK_KODU" data-halign="center" data-align="center" data-sortable="true">HAMMADDE STOK KODU</th>
                        <th data-visible="false" data-width="0" data-field="HAM_ADI" data-halign="center" data-align="center" data-sortable="true">HAMMADDE ADI</th>
                        <th data-visible="false" data-width="0" data-field="HAM_DETAY" data-width="150" data-halign="center" data-align="center" data-sortable="true">HAMMADDE DETAY</th>
                        <th data-visible="false" data-width="0" data-field="HAM_GENISLIK" data-halign="center" data-align="center" data-sortable="true">HAMMADDE GENİŞLİK</th>
                        <th data-visible="false" data-width="0" data-field="HAM_KALINLIK" data-halign="center" data-align="center" data-sortable="true">HAMMADDE KALINLIK</th>
                        <th data-visible="false" data-width="0" data-field="HAM_FIRMA_SERI" data-halign="center" data-align="center" data-sortable="true">HAMMADDE FİRMA SERİ</th>
                        <th data-visible="false" data-width="0" data-field="ACIKLAMA_4" data-halign="center" data-align="center" data-sortable="true">ACIKLAMA 4</th>
                        <th data-visible="false" data-width="0" data-field="ACIKLAMA_5" data-halign="center" data-align="center" data-sortable="true">ACIKLAMA 5</th>
                        <th data-visible="false" data-width="0" data-field="HAM_KALITE" data-halign="center" data-align="center" data-sortable="true">HAMMADDE KALITE</th>
                        <th data-visible="false" data-width="0" data-field="HAM_KAP_KALINLIK" data-halign="center" data-align="center" data-sortable="true">HAMMADDE KAPLAMA</th>
                        <th data-visible="false" data-width="0" data-field="HAM_MIKTAR" data-halign="center" data-align="center" data-sortable="true">HAMMADDE MIKTAR</th>
                        <th data-visible="false" data-width="0" data-field="SIRA" data-halign="center" data-align="center" data-sortable="false">SIRA</th>
                        <th data-visible="false" data-width="0" data-field="USTISEMRI" data-halign="center" data-align="center" data-sortable="true">USTISEMRI</th>
                        <th data-visible="true" data-width="0" data-field="ALT_ISEMRI" data-halign="center" data-align="center" data-sortable="true">ALT İŞEMRİ</th>
                        <th data-visible="false" data-width="0" data-field="URT_SERINO" data-halign="center" data-align="center" data-sortable="true">ÜRETİLECEK BARKOD NO</th>
                        <th data-visible="false" data-width="0" data-field="URT_STOK_KODU" data-halign="center" data-align="center" data-sortable="true">STOK KODU</th>
                        <th data-visible="true" data-width="0" data-field="URT_STOK_ADI" data-halign="center" data-align="center" data-sortable="true">STOK ADI</th>
                        <th data-visible="false" data-width="0" data-field="URT_GENISLIK" data-halign="center" data-align="center" data-sortable="true">GENİŞLİK</th>
                        <th data-visible="true" data-width="0" data-field="IE_MIKTAR2" data-halign="center" data-align="center" data-sortable="true" data-formatter="MiktarFormatter">MİKTAR 2</th>
                        <th data-visible="true" data-width="0" data-field="IE_MIKTAR" data-halign="center" data-align="center" data-sortable="true" data-formatter="MiktarFormatter">MİKTAR 1</th>
                        <th data-visible="false" data-width="0" data-field="REFISEMRINO" data-halign="center" data-align="center" data-sortable="true">REFERANS İŞEMRİ NO</th>
                        <th data-visible="false" data-width="0" data-field="REF_STOK_KODU" data-halign="center" data-align="center" data-sortable="true">REF STOK KODU</th>
                        <th data-visible="false" data-width="0" data-field="REF_STOK_ADI" data-halign="center" data-align="center" data-sortable="true">REF. İŞ EMRİ STOK ADI</th>
                        <th data-visible="true" data-width="0" data-formatter="IsEmriDetayIslemFormatter" data-halign="center" data-align="center" data-sortable="false">İŞLEM</th>`;
            };
        }

        function MakineKoduIleDetayTabloFiltrele(value)
        {
            var MakineKodu = $('input:radio[name="makine-ie"]:checked').val();
            var FiltrelenmisIsEmirleri = [];

            switch (MakineKodu)
            {
                case "DL01":
                    FiltrelenmisIsEmirleri = IsEmirleri.filter(x => x.HAM_SERINO == value.HAM_SERINO);
                    break;
                case "BK01":
                case "MH01":
                case "PB01":
                case "PB02":
                case "RF01":
                case "RF02":
                case "RF03":
                case "SM01":
                case "SM02":
                case "SM03":
                case "TP01":
                    FiltrelenmisIsEmirleri = IsEmirleri.filter(x => x.URT_STOK_KODU == value.URT_STOK_KODU);
                    break;
            }

            return FiltrelenmisIsEmirleri;
        }

        function DetailSatirStili(row, index) {
            var Filtre = $('input:radio[name="makine-status-ie"]:checked').val();

            if (row.KAPALI == "H") {
                return {
                    css: {
                        "background-color": '#f6f7ff'
                    }
                }
            }

            return {
                css: {
                    "background-color": '#fdf8f8'
                }
            }
        }

        function IsEmriDetayIslemFormatter(value, row, index, field)
        {
            if(row.KAPALI == "H")
            {
                var ButonSinifi = KapatilacakIsEmirleri.indexOf(row.ALT_ISEMRI) > -1 ? "bi bi-check-circle-fill ignored" : "bi bi-check-circle ignored";
                var ButonStili = KapatilacakIsEmirleri.indexOf(row.ALT_ISEMRI) > -1 ? "color:#71dd37;font-size:x-large;" : "color:red;font-size:x-large;" ;

                var IslemIkon = `<i class="${ButonSinifi}" style="${ButonStili}"></i>`;

                var MakineKodu = $('input:radio[name="makine-ie"]:checked').val();
                var Data = MakineKodu == "DL01" ? row.HAM_SERINO : row.URT_STOK_KODU;

                return `<div style="cursor:pointer" onclick="SelectValue('${row.ALT_ISEMRI}', this, '${Data}')")">${IslemIkon}</div>`;
            }
            else
            {
                return `<div><i class="bi bi-check-circle" style="color:#ff00002b;font-size:x-large;"></i></div>`;
            }
        }

        function SelectValue(Value, Button, ParentIconId) {
            event.stopPropagation();

            var Icon = Button.getElementsByTagName('i')[0];
            var ParentIconIndex = parseInt(document.getElementById(`parent-id-${ParentIconId}`).innerHTML);
            var ParentIcon = $(`#BekleyenIsEmirleriTable [data-index="${ParentIconIndex}"] td i:not(.ignored)`)[0];

            var MakineKodu = $('input:radio[name="makine-ie"]:checked').val();
            var Filter = (MakineKodu == "DL01" ? "HAM_SERINO" : "URT_STOK_KODU");

            if (ValueIsSelected(Value)) {
                KapatilacakIsEmirleri = KapatilacakIsEmirleri.filter(x => x != Value);

                Icon.style.color = 'red';
                Icon.classList.remove("bi-check-circle-fill");
                Icon.classList.add("bi-check-circle");

                ParentIcon.style.color = 'red';
                ParentIcon.classList.remove("bi-check-circle-fill");
                ParentIcon.classList.add("bi-check-circle");
            }
            else {
                KapatilacakIsEmirleri.push(Value);

                Icon.style.color = '#71dd37';
                Icon.classList.add("bi-check-circle-fill");
                Icon.classList.remove("bi-check-circle");

                if (AllValueIsSelected(ParentIconId, Filter)) {
                    ParentIcon.style.color = '#71dd37';
                    ParentIcon.classList.add("bi-check-circle-fill");
                    ParentIcon.classList.remove("bi-check-circle");
                }
            }

            if (KapatilacakIsEmirleri.length > 0) {
                $('#isemirlerinikapatbtn').show();
            }
            else {
                $('#isemirlerinikapatbtn').hide();
            }
        }

        function SeciliIsEmirleriniKapat()
        {
            if(KapatilacakIsEmirleri.length > 0)
            {
                var Liste = '<div style="overflow-y:auto;max-height:150px;font-size:smaller;margin-bottom:1rem;">';

                for (var i = 0; i < KapatilacakIsEmirleri.length; i++)
                {
                    Liste += `<b>${KapatilacakIsEmirleri[i]}<br/>`;
                }

                Swal.fire({
                    title: "UYARI",
                    html: `${Liste}</div>`,
                    icon: 'warning',
                    showCancelButton: true,
                    cancelButtonText: 'HAYIR',
                    cancelButtonColor: '#d33',
                    confirmButtonColor: '#3085d6',
                    allowEnterKey: false,
                    confirmButtonText: 'EVET',
                    allowOutsideClick: false
                }).then((result) => {
                    if (result.isConfirmed)
                    {
                        ShowProgress();
                        $('#isemirlerinikapatbtn').hide();

                        $.ajax({
                            url: '@Url.Action("IsEmirleriniKapat", "Uretim")',
                            type: 'POST',
                            data: {"isemrimod":KapatilacakIsEmirleri },
                            error: function (data) {  alert(JSON.stringify(data)); },
                            success: function (data)
                            {
                                playOnay()
                                Swal.fire('Başarılı!','Kayıt başarılı','success');

                                KapatilacakIsEmirleri = [];

                                if(KapatilacakIsEmirleri.length > 0)
                                {
                                    $('#isemirlerinikapatbtn').show();
                                }
                                else
                                {
                                    $('#isemirlerinikapatbtn').hide();
                                }
                            }
                            }).then(() => {
                                BekleyenIsEmriFiltrele($('input:radio[name="makine-status-ie"]:checked').val());
                            });

                    }
                });

           }
        }
    </script>

    <script>
        function UretimeGirenlerMakineListele() {
            $.getJSON("http://192.168.2.13:83/api/makine/makineler", (data) => {
                var Makineler = `<div class="btn-group" style="grid-template-columns: repeat( auto-fit, minmax(80px, 1fr) );display:grid;grid-gap: 0.25rem 0;" role="group" aria-label="Basic radio toggle button group">`;

                for (var i = 0; i < data.length; i++) {
                    var MachineType = data[i].HAT_KODU.substring(0, 2).toLowerCase();

                    if (MachineType != "sm") {
                        Makineler += `<input type="radio" class="btn-check" name="makine-ie" id="${data[i].HAT_KODU}" onclick="UretimeGirenler(this.value)" value="${data[i].HAT_KODU}" autocomplete="off"><label class="btn btn-outline-primary" for="${data[i].HAT_KODU}">${data[i].HAT_KODU}</label>`;
                    }
                }

                $('#UretimeGirenlerMakine').html(Makineler + `</div>`);
            });
        }
        var stokkodlari;
        function UretimeGirenler(value) {
            $.ajax({
                url: `http://192.168.2.13:83/api/ie/hatgirdidetay/${value}`,
                type: 'GET',
                success: (response) => {
                    stokkodlari = response
                    $("#filter").html('').trigger('change');
                    $('#UretimeGirenlerTable').bootstrapTable('destroy');
                    $('#UretimeGirenlerTable').bootstrapTable({ data: response });

                    $.getJSON('http://192.168.2.13:83/api/seri/manuelhat/' + value, function (data) {
                        var newOption = new Option('SEÇİNİZ', 'SEÇİNİZ', false, true);
                        newOption.disabled = true;
                        $('#filter').html('');
                        $('#filter').append(newOption)
                        for (let i = 0; i < data.length; i++) {
                            newOption = new Option(data[i].SERI_NO, data[i].SERI_NO, false, false);
                            $('#filter').append(newOption).trigger('change');
                        }

                    }).done(function () {

                        $("#filter").select2(
                            {
                                "language": {
                                    "noResults": function () {
                                        return "Sonuç bulunamadı.";
                                    }
                                },
                                escapeMarkup: function (markup) {
                                    return markup;
                                }
                            });
                    })
                    $('#UretimeGirenlerTablo').show();
                }
            });
        }

        function UnitFormatter(value, row, index) {
            return `${parseFloat(value).toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 0 })} ${row.OLCU_BR1}`;
        }

        function HatGirdiSıralama() {
            var HatGirdiSirala = $('#HatGirdiSiralamaSwitch').is(':checked');

            if (HatGirdiSirala) {

                $('#UretimeGirenlerTable').bootstrapTable('refreshOptions', {
                    search: false,
                    reorderableRows: true,
                    useRowAttrFunc: true
                });

                $('#UretimeGirenlerTable').bootstrapTable('filterBy', { URETILEN: '0.00000000' });

                $('#UretimeGirenlerTable').on('reorder-row.bs.table', (Data, DroppedData, OldPosition) => {


                    var DraggedIndex = DroppedData.findIndex((item) => item.SERI_NO === OldPosition.SERI_NO);

                    var Machine = $('input[name="makine-ie"]:checked').val();
                    var TopItem = DroppedData[DraggedIndex == 0 ? 0 : DraggedIndex - 1].SERI_NO;
                    var DraggedItem = DroppedData[DraggedIndex].SERI_NO;

                    $.ajax({
                        url: `http://192.168.2.13:83/api/ie/hatgirdisira/${Machine}/${DraggedItem}/${(DraggedItem == TopItem ? 0 : TopItem)}`,
                        type: 'GET',
                        error: (e) => { console.error(`Hat Girdi Sıralama: ${e}`); },
                        success: (response) => { }
                    }).then(() => {
                        $('#HatGirdiSiralamaSwitch').prop('checked', false);
                        HatGirdiSıralama();
                    });
                });
                $('tbody tr').hover(function () {
                    $(this).css('cursor', 'all-scroll');
                }, function () {
                    $(this).css('cursor', 'auto');
                });
            }
            else {
                var Machine = $('input[name="makine-ie"]:checked').val();
                UretimeGirenler(Machine);

                $('#UretimeGirenlerTable').bootstrapTable('refreshOptions', {
                    search: false,
                    reorderableRows: false,
                    useRowAttrFunc: false
                });

                $('#UretimeGirenlerTable').on('reorder-row.bs.table', (Data, DroppedData, OldPosition) => { });
            }
        }

        function HatGirdiSiraDegisti(Data, DroppedData, OldPosition) {
            console.log(Data);
        }

        function intFormatter(value, row, index) {
            return parseInt(value);
        }

        function oranFormatter2(value, index, row) {
            return '<p class="meter mt-1" style="height: auto;border: 1px solid #d9dee3;border-radius: 8px;"><span style="width:' + parseFloat(value) + '%;"><span class="progress custom-progress" id="progress-msip" style=" height: 1.5rem; "><span style="text-align: end; color: black;font-size: small;">' + parseFloat(value).toFixed(2) + '%</span></span></span></p>';
        }

        function oranFormatter3(value, index, row) {
            return '<p class="meter mt-1" style="width: 4.1rem;transform: rotate(270deg);margin: 0 !important;"><span style="width:' + parseFloat(value) + '%;height: 1.5rem;"><span class="progress custom-progress"  style="height: 100%;border-radius: 0 !important;    background-color: #07e655;"></span></span></p>';
        }

        function oranFormatter4(value, index, row) {
            return '<div  data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="left" data-bs-html="true" data-bs-original-title="<div class=\'row flex-nowrap\'><div class=\'col  text-center\'>ORAN</div><div class=\'col  text-center\'>TOPLAM</div><div class=\'col  text-center\'>ÜRETİLEN</div></div><div class=\'row flex-nowrap\'><div class=\'col  text-center\'>' + Math.round(parseFloat(index.ORAN)) + ' %</div><div class=\'col text-nowrap text-center\'>' + Math.round(parseFloat(index.SERI_MIKTAR)) + ' ' + index.OLCU_BR1 + '</div><div class=\'col  text-nowrap text-center\'>' + Math.round(parseFloat(index.URETILEN)) + ' ' + index.OLCU_BR1 + '</div></div>"><p class="meter" style="height: auto;position: relative; border: 1px solid #d9dee3; border-radius: 8px; margin: 0 0.25rem;"><span style="width:' + parseFloat(value) + '%;"><span class="progress custom-progress" id="progress-msip" style=" height: 1.5rem; display:flex;align-items:center;"><span style="height:auto; color: black;font-size: small;position: absolute; right: 0; left: 0; top: 0; bottom: 0;">' + index.SERI_NO + '</span></span></span></p></div>';

        }

        var UretimListeYedek = [];

        $(document).ready(() => {
            $('#UretimListeTable').bootstrapTable('destroy');
            $('#UretimListeTable').bootstrapTable({ data: [] });
        });

        function UretimListe(value) {
            $.ajax({
                url: `http://192.168.2.13:83/api/ie/hatgirdidetay/${value}`,
                type: 'GET',
                success: (response) => {
                    if (JSON.stringify(response) !== JSON.stringify(UretimListeYedek)) {
                        UretimListeYedek = response;
                    }

                    $('#UretimListeTable').bootstrapTable('destroy');
                    $('#UretimListeTable').bootstrapTable({ data: UretimListeYedek });


                }
            }).then(() => {
                var ScrollHeight = $('#UretimListeTable').find('tbody')[0].scrollHeight;

                if (ScrollHeight > 400) {
                    $('#UretimListeTable').find('tbody')[0].scrollTo(0, ScrollHeight);
                }

                $('#UretimListeTable > tbody').scrollTop(0)

                $('[data-bs-toggle="tooltip"]').tooltip({
                    container: 'body',
                    trigger: 'hover'
                });
            });
        }

        //Belirli aralık ile veri çekme işlemi
        function UretimListeCek() {
            setInterval(() => {
                UretimListe();
            }, 1000);
        }
    </script>

    <style>
        .custom-progress {
            border-radius: 6px !important;
        }

        #UretimeGirenlerTable td:nth-child(1) {
            padding: 0.1rem 0 !important;
        }

        #UretimListeTable > :not(caption) > * > * {
            padding: 0.15rem 0 !important;
        }

        #UretimListeTable {
            width: 145px;
        }

            #UretimListeTable tbody {
                display: block;
                max-height: 100vh;
                overflow-y: auto;
            }

                #UretimListeTable tbody tr, #UretimListeTable thead {
                    display: table;
                    table-layout: fixed;
                    width: 100%;
                }

            #UretimListeTable tr {
                border-top-width: 0;
                border-bottom-width: 0;
            }

                #UretimListeTable tr th {
                    border-top-width: 1px;
                }

                #UretimListeTable tr td {
                    border-width: 1px;
                    border-top-width: 0;
                    border-bottom-width: 0;
                }

                #UretimListeTable tr:last-child > td {
                    border-width: 1px;
                    border-top-width: 0;
                }

            #UretimListeTable td {
                border-width: 0;
            }
    </style>

    <script>

        var m1 = "";
        var m2 = "";
        var constant = 0;
        var genislik = 0;
        var countResults = 0;

        //$(window).on('resize', () => {
        //    change(constant);
        //});
        var html5QrcodeScanner = null;

        $(document).ready(function () {
            $("#filter").select2(
                {
                    "language": {
                        "noResults": function () {
                            return "Sonuç bulunamadı.";
                        }
                    },
                    escapeMarkup: function (markup) {
                        return markup;
                    }
                });
            $('#BekleyenIsEmirleriTable').bootstrapTable('destroy');
            $('#BekleyenIsEmirleriTable').bootstrapTable({ data: [] });
            change(0);
            $(`input:radio[name="uretim-islem"][value='0']`).prop('checked', true);
            $.getJSON('http://192.168.2.13:83/api/printers/list', function (data) {
                for (let i = 0; i < data.length; i++) {
                   opt = $("<option>").val(data[i].PRINTER_NAME).text(data[i].PRINTER_NAME);

                    $('#yazici').append(opt);
                }
            }).done(function () {
                $('#yazici').select2(
                    {
                        "language": {
                            "noResults": function () {
                                return "Sonuç bulunamadı.";
                            }
                        },
                        escapeMarkup: function (markup) {
                            return markup;
                        }
                    });

                if (localStorage.getItem("yazici") == undefined || localStorage.getItem("yazici") == null || localStorage.getItem("yazici") == 'null') {
                    localStorage.setItem("yazici", $('#yazici').val());
                }
                else {
                    $('#yazici').val(localStorage.getItem("yazici"));
                    $('#yazici').trigger('change');
                }
            })

            $(function () {
                bootstrap.Tooltip.getOrCreateInstance("#guncelleButton")
            })


            $(document).on('show.bs.modal', '.modal', function () {
                const zIndex = 1040 + 10 * $('.modal:visible').length;
                $(this).css('z-index', zIndex);
                setTimeout(() => $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack'));
            });

        });

            $("#divPartial").show();

        $('.js-example-basic-single').select2({
            tags: true,
            "language": "tr-TR"
        }
        );
        function change(value) {
            $("#btnradio1112").prop("checked", false);
            uretimControl = '';
            if (value == 0) {
                constant = 0;
                KapatilacakIsEmirleri = [];
                document.getElementById("stokadlari").replaceChildren();
                $('#isemirlerinikapatbtn').hide();
                $("#label").html("Çıktı")
                $("#tablo").show();
                $("#scanner").hide();
                $('#RefreshButton').hide();
                $('#BekleyenIsEmirleriMakine').hide();
                $('#BekleyenIsEmirleriTablo').hide();
                $('.iefiltre').hide();
                $('#UretimeGirenlerMakine').hide();
                $('#UretimeGirenlerTablo').hide();
                $("#UretimListeTable").show();
                $('#UretimeAlMakine').html(null).hide();
                MakineListeleUK();
                $('#UretimListeTable').rep
                $('#UretimKaydiMakine').show();
                $('#UretimListeTable').bootstrapTable('destroy');
                $('#UretimListeTable').bootstrapTable({ data: [] });
                $('#UretilmisBarkodlar').hide();
                $('#uretilmis-barkod-makineler').hide();
            }
            else if (value == 1) {
                KapatilacakIsEmirleri = [];
                constant = 1;

                $("#label").html("Girdi")
                $('#isemirlerinikapatbtn').hide();
                $("#tablo").hide();
                $("#makmobile1").hide();
                $("#makmobile2").hide();
                $("#makineler1").hide();
                $("#makineler2").hide();
                $("#makineler3").hide();
                $("#makineler").hide();
                $("#makineler4").show();
                $("#scanner").show();
                $('#RefreshButton').hide();
                $('#BekleyenIsEmirleriMakine').hide();
                $('#BekleyenIsEmirleriTablo').hide();
                $('#UretimeGirenlerMakine').hide();
                $('#UretimeGirenlerTablo').hide();
                $("#UretimListeTable").hide();
                $('.iefiltre').hide();
                $('#UretimKaydiMakine').html(null).hide();

                MakineListeleAL();
                $('#UretimeAlMakine').show();
                $('#UretilmisBarkodlar').hide();
                $('#uretilmis-barkod-makineler').hide();

                UretimListeYedek = [];

                ScanType = "uretime-al";
                Scan();

                $("input:radio[name=makine-ie]").prop('checked', false);

            }
            else if (value == 2) {
                KapatilacakIsEmirleri = [];
                constant = 2;
                MakineListele();
                $("#tablo").hide();
                $("#makmobile1").hide();
                $("#makmobile2").hide();
                $("#makineler1").hide();
                $("#makineler2").hide();
                $("#makineler3").hide();
                $("#makineler").hide();
                $("#scanner").hide();
                $('#RefreshButton').hide();
                $('.iefiltre').hide();
                $('#makineler4').hide();
                $('#UretimeGirenlerMakine').hide();
                $('#UretimeGirenlerTablo').hide();
                $('#UretimKaydiMakine').html(null).hide();
                $('#UretimeAlMakine').html(null).hide();
                $("#UretimListeTable").hide();

                $('#BekleyenIsEmirleriTablo').hide();
                $('#UretilmisBarkodlar').hide();
                $('#uretilmis-barkod-makineler').hide();

                $("input:radio[name=makine-status-ie][value='open']").prop('checked', true);
                $("input[type=radio][name=makine-status-ie][value='open']").prop('checked', true);

                UretimListeYedek = [];

                ScanType = "bekleyen-is-emri";

                $('#BekleyenIsEmirleriMakine').show();
            }
            else if (value == 3) {
                KapatilacakIsEmirleri = [];
                constant = 3;
                UretimeGirenlerMakineListele();
                $('#isemirlerinikapatbtn').hide();
                $("#tablo").hide();
                $("#makmobile1").hide();
                $("#makmobile2").hide();
                $("#makineler1").hide();
                $("#makineler2").hide();
                $("#makineler3").hide();
                $("#makineler").hide();
                $("#scanner").hide();
                $('#RefreshButton').hide();
                $("#UretimListeTable").hide();
                $('#UretimKaydiMakine').html(null).hide();
                $('#UretimeAlMakine').html(null).hide();
                $('#BekleyenIsEmirleriMakine').html('');
                $('#BekleyenIsEmirleriMakine').hide();
                $('#BekleyenIsEmirleriTablo').hide();
                $('.iefiltre').hide();
                $('#UretilmisBarkodlar').hide();
                $('#uretilmis-barkod-makineler').hide();

                UretimListeYedek = [];

                $('#UretimeGirenlerMakine').show();
                $('#makineler4').hide();
            }
            else if (value == 4)
            {
                constant = 4;
                $('#isemirlerinikapatbtn').hide();
                $("#tablo").hide();
                $("#makmobile1").hide();
                $("#makmobile2").hide();
                $("#makineler1").hide();
                $("#makineler2").hide();
                $("#makineler3").hide();
                $("#makineler").hide();
                $("#scanner").hide();
                $('#RefreshButton').hide();
                $("#UretimListeTable").hide();
                $('#UretimKaydiMakine').html(null).hide();
                $('#UretimeAlMakine').html(null).hide();
                $('#BekleyenIsEmirleriMakine').html('');
                $('#BekleyenIsEmirleriMakine').hide();
                $('#BekleyenIsEmirleriTablo').hide();
                $('.iefiltre').hide();
                $('#UretimeGirenlerMakine').html('');
                $('#UretimeGirenlerMakine').hide();
                $('#UretimeGirenlerTablo').hide();
                $('#makineler4').hide();
                $('#UretilmisBarkodlar').hide();
                $('#uretilmis-barkod-makineler').show();

                MakineListeleUE();
            }

            HideProgress();
        }
        var sabit = "";
        var btnid = "";
        function c(value) {
            $("#tablo").show();
            ShowProgress();
            $("#uretimkaydi").focus();
            sabit = value;
            btnid = value;
            var url1 = "http://192.168.2.13:83/api/ie/TOP/" + value;

            UretimListe(sabit);
            var data = null;
            $.getJSON(url1, function (d) {
                data = d;
            }).done(function () {
                document.getElementById("stokadlari").replaceChildren();
                if (data.length > 0) {
                    for (let i = 0; i < data.length; i++) {
                        var b = document.createElement("button");
                        b.className = "mak btn btn-outline-secondary";
                        b.style.width = "295px";
                        b.style.height = "145px";
                        b.setAttribute("data-stokkodu", data[i].STOK_KODU);
                        b.setAttribute("data-seri", data[i].SERINO);
                        b.setAttribute("data-genislik", data[i].BANT_GENISLIGI);
                        if (value == 'DL01') {
                            if (data[i].MIKTARSABITLE == "H") {
                                b.setAttribute("data-top", data[i].TOPLAM_MIKTAR);
                            } else {
                                b.setAttribute("data-top", data[i].TOPLAM_MIKTAR_REC);
                            }

                        } else {
                            b.setAttribute("data-top", data[i].TOPLAM_MIKTAR);
                        }

                        b.setAttribute("data-kul", data[i].KULL_MIKTAR);
                        b.setAttribute("data-hat", data[i].HAT_KODU);
                        b.setAttribute("data-mik2", data[i].TOPLAM_MIKTAR2);
                        b.setAttribute("data-isemri", data[i].ISEMRINO);

                        if (value == 'DL01') {
                            b.setAttribute("data-miktarsabit", data[i].MIKTARSABITLE);
                        }

                        b.setAttribute("data-kul2", data[i].KULL_MIKTAR2);
                        b.setAttribute("data-top2", data[i].TOPLAM_MIKTAR2);

                        /*b.innerHTML = "<b>" + data[i].STOK_ADI + "</b></br><span style='font-size:12px'> " + data[i].SIP_CARI_ISIM + "</span></br><span style='font-size:12px'> " + data[i].KULL_MIKTAR.toLocaleString() + " " + data[i].OLCU_BR1 + " / " + data[i].TOPLAM_MIKTAR.toLocaleString() + " " + data[i].OLCU_BR1 + " || " + data[i].KULL_MIKTAR2.toLocaleString() + " " + data[i].OLCU_BR2 + " / " + data[i].TOPLAM_MIKTAR2.toLocaleString() + " " + data[i].OLCU_BR2 + "</span>";*/
                        if (value == 'DL01') {
                            b.innerHTML = "<b>" + data[i].STOK_ADI + "</b></br><b>" + (data[i].SERINO != null ? data[i].SERINO : '-') + "</b></br><span style='font-size:12px'> " + data[i].KULL_MIKTAR.toLocaleString() + " " + data[i].OLCU_BR1 + " / " + data[i].TOPLAM_MIKTAR.toLocaleString() + " " + data[i].OLCU_BR1 + " || " + data[i].KULL_MIKTAR2.toLocaleString() + " " + data[i].OLCU_BR2 + " / " + data[i].TOPLAM_MIKTAR2.toLocaleString() + " " + data[i].OLCU_BR2 + "</span>";
                        } else {
                            b.innerHTML = "<b>" + data[i].STOK_ADI + "</b></br><b>" + (data[i].SERINO != null ? data[i].SERINO : '-') + "</b></br><span style='font-size:12px'> " + data[i].KULL_MIKTAR.toLocaleString() + " " + data[i].OLCU_BR1 + " / " + data[i].TOPLAM_MIKTAR.toLocaleString() + " " + data[i].OLCU_BR1 + " || " + data[i].KULL_MIKTAR2.toLocaleString() + " " + data[i].OLCU_BR2 + " / " + data[i].TOPLAM_MIKTAR2.toLocaleString() + " " + data[i].OLCU_BR2 + "</span>";
                        }
                        if (data[i].URETILEBILIR == 'H') {
                            b.setAttribute("disabled", "disabled");

                            if (value == 'DL01') {
                                b.innerHTML = "<b>" + data[i].STOK_ADI + "</b></br>" + (data[i].SERINO != null ? data[i].SERINO : '-') + "</br><span style='font-size:12px'> " + data[i].KULL_MIKTAR.toLocaleString() + " " + data[i].OLCU_BR1 + " / " + data[i].TOPLAM_MIKTAR.toLocaleString() + " " + data[i].OLCU_BR1 + " || " + data[i].KULL_MIKTAR2.toLocaleString() + " " + data[i].OLCU_BR2 + " / " + data[i].TOPLAM_MIKTAR2.toLocaleString() + " " + data[i].OLCU_BR2 + "</span>";
                            } else {
                                b.innerHTML = "<b>" + data[i].STOK_ADI + "</b></br>" + (data[i].SERINO != null ? data[i].SERINO : '-') + "</br><span style='font-size:12px'> " + data[i].KULL_MIKTAR.toLocaleString() + " " + data[i].OLCU_BR1 + " / " + data[i].TOPLAM_MIKTAR.toLocaleString() + " " + data[i].OLCU_BR1 + " || " + data[i].KULL_MIKTAR2.toLocaleString() + " " + data[i].OLCU_BR2 + " / " + data[i].TOPLAM_MIKTAR2.toLocaleString() + " " + data[i].OLCU_BR2 + "</span>";
                            }
                        }


                        b.setAttribute("onclick", "showmodal(this)");
                        var p = document.createElement("p");
                        p.className = "meter mt-1";
                        p.style = "height:auto";
                        var span1 = document.createElement("span");
                        span1.style = "width:" + data[i].ORAN + "%";
                        var span2 = document.createElement("span");
                        span2.className = "progress";
                        span2.id = "progress-msip";
                        var span3 = document.createElement("span");
                        span3.style = "margin-bottom:10px;text-align:end;color:black";
                        span3.innerHTML = data[i].ORAN + "%";
                        span2.appendChild(span3);
                        span1.appendChild(span2);
                        p.appendChild(span1);
                        b.appendChild(p);

                        $('#stokadlari').css('display', 'grid');

                        document.getElementById("stokadlari").appendChild(b);
                    }
                } else {
                    $('#stokadlari').css('display', 'flex');
                    $('#stokadlari').html(`<div class="w-100 h-100 d-flex justify-content-center align-items-center text-center"><span class="text-center">

    Seçili makinede iş emri yok.


    </span></div>`);
                }
                HideProgress();
                $("#UretimListeTable").show();
            })





        }
        function d(value) {

            sabit = value.innerHTML;


        }
        function keyblur() {
            if (hat == "DL01") {

                var olculer = $("#SiparisModalLabel2").html();

                m1 = $("#miktar11").val();
                m2 = $("#miktar22").val();
                if (parseInt(m1) + (m2 - (m1 % m2)) > max) {
                    $("#miktar11").val(parseInt(m1) - (m1 % m2))

                } else {

                    if ((m1 % m2) != 0) {

                        $("#miktar11").val(parseInt(m1) + (m2 - (m1 % m2)))
                    }


                }
                if (m1 != $("#miktar11").val()) {
                    Toast.fire({
                        icon: 'info',
                        title: 'Miktar ' + $("#miktar11").val() + ' olarak güncellendi!'
                    });

                }
                m1 = $("#miktar11").val();
                m2 = $("#miktar22").val();
                $("#ModalSaveButton").prop("disabled", false);
                if (m1 != 0) {
                    var olcu1 = olculer.split("||")[0].split(" ")[3];
                    var olcu2 = olculer.split("||")[1].split(" ")[2];
                    $("#BirimMik").html(m1/m2.toLocaleString(undefined, {
                        maximumFractionDigits: 2
                    }) + " " + olcu1 + " / " + olcu2);
                } else {
                    $('#BirimMik').html('-')
                }
            }

        }
        function keychange1() {

            m1 = $("#miktar11").val();
            m2 = $("#miktar22").val();

            if (m1.length > 0) {
                if (hat != "DL01") {

                    $("#miktar22").prop("disabled", false);
                }

            } else {
                if (hat != "DL01") {
                    $("#miktar22").val(null);
                }
                $("#miktar22").prop("disabled", true);
                $("#ikincimik1").prop("disabled", true);
                $("#hurdamik").prop("disabled", true);
                $("#ikincimik2").val(null);
                $("#ikincimik1").val(null);
                $("#hurdamik").val(null);
                $("#ModalSaveButton").prop("disabled", true);
            }
            m1 = $("#miktar11").val();
            if (m1 > max) {
                $("#miktar11").val(max)

                const Toast = Swal.mixin({
                    toast: true,
                    position: 'center',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })
                if (bant) {
                    Toast.fire({
                        icon: 'info',
                        title: '<div style="display:flex" class="justify-content-center">Dikkat!</div>',
                        text: 'Makineye takılan girdi miktarı kalanı ' + max + ' olduğundan ' + max + ' olarak güncellenmiştir.'
                    });
                } else {
                    Toast.fire({
                        icon: 'info',
                        title: '<div style="display:flex" class="justify-content-center">Dikkat!</div>',
                        text: 'İş emrindeki üretilebilir miktar ' + max + ' olduğundan ' + max + ' olarak güncellenmiştir.'
                    });
                }


            }
            m1 = $("#miktar11").val()
            if (m1 == 0) {
                $("#miktar11").val(null);
                if (hat != "DL01") {
                    $("#miktar22").val(null);
                }
                $("#miktar22").prop("disabled", true);
                $("#ModalSaveButton").prop("disabled", true);
            }
            if (hat != "DL01") {
                keychangeikinci()
                keychange2()
            } else {
                if (m1 != 0) {
                    var olculer = $("#SiparisModalLabel2").html();
                    var olcu1 = olculer.split("||")[0].split(" ")[3];
                    var olcu2 = olculer.split("||")[1].split(" ")[2];
                    $("#BirimMik").html((parseInt(m1) / m2).toLocaleString(undefined, {
                        maximumFractionDigits: 2
                    }) + " " + olcu1 + " / " + olcu2);
                }
            }
        }
        function keychange2() {

            m1 = $("#miktar11").val();
            m2 = $("#miktar22").val();
            var olculer = $("#SiparisModalLabel2").html();
            if (m1.length == 0) {
                $("#miktar22").val(null);
                m1 = null;
            }
            if (m2 > max2) {
                $("#miktar22").val(max2)

            }
            if (m2.length > 0 && m1.length > 0) {
                    if (m1 % m2 != 0) {
                        if (hat == "DL01") {
                            if (parseInt(m1) + (m2 - (m1 % m2)) > max) {
                                $("#miktar11").val(parseInt(m1) - (m1 % m2))
                                $("#ModalSaveButton").prop("disabled", false);
                            } else {
                                $("#miktar11").val(parseInt(m1) + (m2 - (m1 % m2)))
                                $("#ModalSaveButton").prop("disabled", false);
                            }
                        }
                        if (m2 == 0) {
                            $("#miktar22").val(null)
                            $("#ModalSaveButton").prop("disabled", true)
                        } else {
                            $("#ModalSaveButton").prop("disabled", false);
                        }
                    } else {
                        $("#ModalSaveButton").prop("disabled", false);
                    }
                $("#ikincimik2").prop("disabled", false);
                $("#hurdamik").prop("disabled", false);
                m1 = $("#miktar11").val();
                m2 = $("#miktar22").val();
                if (hat != 'PB01' && hat != 'PB02') {
                    var olcu1 = olculer.split("||")[0].split(" ")[3];
                    var olcu2 = olculer.split("||")[1].split(" ")[2];
                    $("#BirimMik").html((parseInt(m1) / m2).toLocaleString(undefined, {
                        maximumFractionDigits: 2
                    }) + " " + olcu1 + " / " + olcu2);
                } else {
                    $("#BirimMik").html((m1 / m2).toLocaleString(undefined, {
                        maximumFractionDigits: 2
                    }))
                }

            } else {
                $("#ModalSaveButton").prop("disabled", true)
                $("#ikincimik1").prop("disabled", true);
                $("#hurdamik").prop("disabled", true);
                $("#ikincimik2").val(null);
                $("#ikincimik1").val(null);
                $("#hurdamik").val(null);
                $("#BirimMik").html(" - ")
            }
            keychangeikinci()
        }
        var max = 0;
        var max2 = 0;
        var bant = false;
        var listIsemri = null;
        var isemri = "";
        var count = 0;
         function stokadichange(value) {
            max = parseInt(value.dataset.top) - parseInt(value.dataset.kul)
            var stokkodu = value.dataset.stokkodu;
            var hat = value.dataset.hat;
            var genislik = value.dataset.genislik;
            var url = "http://192.168.2.13:83/api/ie/All/" + hat + "/" + stokkodu + "/" + (genislik == "null" ? "0" : genislik);
            $.getJSON("http://192.168.2.13:83/api/ie/bakiye/"+hat, function (d) {
                if (max < parseFloat(d[0].MAK_KULLANILABILIR)) {
                    max = d[0].MAK_KULLANILABILIR;
                    bant = true;
                } else {
                    bant = false;
                }
            }).done(function () {
                $.getJSON(url, function (data) {
    listIsemri = data;
})
 Swal.fire({
     title: value.innerHTML.split("<br>")[0] + '<i onclick="openother()" class="bi bi-file-earmark-text-fill float-end" style="color:#17a2b8;font-size:x-large;"></i>' + "<br>" + value.innerHTML.split("<br>")[1].split("<p")[0] + "<br>",
    html: '<table id="tab1" class="table table-borderless inp"><tr><th>Miktar1</th><th>Miktar2</th></tr><tr><td><input onfocus="inputclick()" onkeyup="keychange1()" class="form-control text-center"  type="number"  id="miktar11" max="' + max + '" placeholder="Maksimum: ' + max.toLocaleString() + '"></td>' +
        '<td><input disabled class="form-control text-center" onfocus="inputclick()" onkeyup="keychange2()" type="number" id="miktar22  max="' + max2 + '" placeholder="Maksimum: ' + max2.toLocaleString() + '"></td></tr></table>',
    showCancelButton: true,
    confirmButtonColor: '#3085d6',
    cancelButtonColor: '#d33',
    confirmButtonText: 'Kaydet',
    cancelButtonText: 'İptal',
    showClass: {
        popup: 'pop2 animate__animated animate__zoomIn'
    },
    hideClass: {
        popup: 'pop2 animate__animated animate__zoomOut'
    }
}).then((result) => {
    ShowProgress();
    if (result.isConfirmed) {
        count++;
        alert(count)
        if (m1 != null) {
            var stokkodu = value.dataset.stokkodu;
            var hat = value.dataset.hat;
            var genislik = value.dataset.genislik;
            $.ajax({
                url: '@Url.Action("UretimSonuKaydı", "Uretim")',
                type: 'POST',
                data: { "hatkodu": hat, "stokkodu": stokkodu, "genislik": (genislik == "null" ? null : genislik.toString().trim()), "mik1": m1.toString().trim(), "mik2": m2.toString().trim() },
                error: function (data) {
                    alert(JSON.stringify(data));
                    HideProgress();
                },
                success: function (data) {
                    HideProgress();
                    if (data.substring(0, 4) == "Hata") {
                        playHata1()
                        Swal.fire(
                            'Başarısız!',
                            data,
                            'success'
                        )
                    } else {
                        playOnay()
                        Swal.fire(
                            'Başarılı!',
                            'Kayıt başarılı',
                            'success'
                        )
                    }

                    document.getElementById(btnid).onclick();
                }
            })
        } else {
            playHata1()
            Swal.fire(
                'Başarısız!',
                'Eksik bileşen',
                'warning'
            )
        }




    } else {
        HideProgress();
        constant = 0;
        $('body').trigger('click');
    }
})
            })


        }
    </script>

    <script>
        function clickfunc() {
            HideProgress();
             $.ajax({
                  url: '@Url.Action("IsEmirleriniKapat", "Uretim")',
                 type: 'POST',
                 data: { "isemrimod": listIsemri },
                 error: function (data) {
                     playHata1()
                                Swal.fire(
                                    'Başarısız!',
                                    'Kapatılamadı',
                                    'warning'
                                )
                                HideProgress();
                            },
                            success: function (data) {
                                HideProgress();
                                playOnay()
                                Swal.fire(
                                    'Başarılı!',
                                    'Kayıt başarılı',
                                    'success'
                                )
                                document.getElementById(btnid).onclick();
                            }
                        })

        }
        function cb(o) {
            console.log(o.ip)
        }
    </script>


    <script>
        var x = document.getElementById("giris");
        var y = document.getElementById("cikis");
        var z = document.getElementById("hata");
        var q = document.getElementById("hata1");
        var b = document.getElementById("onay");
        function playGiris() {
            x.play();
        }
        function playCikis() {
            y.play();
        }
        function playHata() {
            z.play();
        }
        function playOnay() {
            b.play();
        }
        function playHata1() {
            q.play();
        }

        //function docReady(fn) {
        //    // see if DOM is already available
        //    if (document.readyState === "complete"
        //        || document.readyState === "interactive") {
        //        // call on next available tick
        //        setTimeout(fn, 1);
        //    } else {
        //        document.addEventListener("DOMContentLoaded", fn);
        //    }

        //}

        function inputclick() {
            constant = 2;
        }
        Array.from(document.getElementsByClassName('showmodal')).forEach((e) => {
            e.addEventListener('click', function (element) {
                element.preventDefault();
                if (e.hasAttribute('data-show-modal')) {
                    showModal(e.getAttribute('data-show-modal'));
                }
            });
        });
        function showModal(modal) {
            const mid = document.getElementById(modal);
            let myModal = new bootstrap.Modal(mid);
            myModal.show();

            if (localStorage.getItem("yazici") == undefined || localStorage.getItem("yazici") == null || localStorage.getItem("yazici") == 'null') {
                localStorage.setItem("yazici", $('#yazici').val());
            }
            else {
                $('#yazici').val(localStorage.getItem("yazici"));
                $('#yazici').trigger('change');
            }
        }
        function showhurdamodal(value) {
            hat = value.dataset.hat;
            stok = value.dataset.stokkodu;
            $("#HurdaLabel").html(value.dataset.tip);
            if (value.dataset.tip == 'HURDA') {

                $("#hurdamiktar2div").hide();
            } else {
                $("#hurdamiktar2div").show();
            }
            $("#hurdamiktar1").val(null);
            $("#hurdamiktar2").val(null);
            $('#HurdaModal').modal('show');
        }
        var mik2 = 0;
        var sabit = '';
        var seri;
        var maxrulo = 0;
        function showmodal(value) {
            sabit=value.dataset.miktarsabit;
            hat = value.dataset.hat;
            stok = value.dataset.stokkodu;
            genislik = value.dataset.genislik;
            isemri = value.dataset.isemri;
            seri = value.dataset.seri
            max = parseInt(value.dataset.top) - parseInt(value.dataset.kul)
            max2 = parseInt(value.dataset.mik2)
            if (hat == 'DL01') {

                maxrulo = parseInt(UretimListeYedek.filter(x => x.SERI_NO == seri)[0].SERI_MIKTAR);
            }
            $.getJSON("http://192.168.2.13:83/api/ie/bakiye/" + hat, function (d) {
                
                if (max > parseFloat(d[0].MAK_KULLANILABILIR)) {
                    max = d[0].MAK_KULLANILABILIR;
                    bant = true;
                } else {
                    bant = false;
                }
            }).done(function () {
                mik2 = parseInt(value.dataset.mik2)
                var seri = value.dataset.isemri;
                $("#miktar11").val(null);
                $("#miktar22").val(null);
                $("#hurdamik").val(null);
                $("#ikincimik1").val(null);
                $("#ikincimik2").val(null);
                $("#BirimMik").html(" - ");
                $("#BirimMik2").html(" - ");
                $("#miktar22").prop("disabled", true);
                $("#miktar11").prop("disabled", false);
                $("#SiparisModal").modal('show');
                $('#yazici').next(".select2-container").show();
                $("#ModalSaveButton").prop("disabled", true)
                $("#kontrol").prop('checked', true);
                $("#etiketyazdir").prop('checked', true);
                $("#ikincimik2").prop("disabled", true);
                $("#hurdamik").prop("disabled", true);
                $("#ikincimik1").prop("disabled", true);
                $('#miktar22').attr('onkeyup', 'keychange2()');
                $('#ModalSaveButton').attr('onclick', 'ModalKaydet()')
                $("#etiketyazdir").change(() => {
                    var EtiketYazdir = $('#etiketyazdir').is(':checked');

                    $("#etiket-onizleme").prop('disabled', !EtiketYazdir);

                    if (EtiketYazdir == false) {
                        $("#etiket-onizleme").prop('checked', false);
                    }
                });

                $("#etiket-onizleme").prop('checked', false);
                $("#etiket-onizleme").prop('disabled', false);
                $('#normal').prop('checked', true);
                $("#ikincimik2").prop('disabled', true);
                $("#hurdamik1").prop('disabled', true);
                $("#hurdamik1").val(null);
                $("#hurdaMHdiv").hide();
                $("#hurdaMHdiv1").hide();
                if (hat == 'DL01') {
                    $("#kontrolcol").show();
                    $("#kontrol").prop('disabled', false);
                    $('#ikinciDiv').hide();
                    $("#hurdamik").hide();
                    $("#ikincimik1").hide();
                    $("#ikincimik2").hide();
                    $("#ikincimik2").attr('onkeyup', 'keychangeikinci()');
                    $("#hurdamik").attr('onkeyup', '');
                    $("#BirimMik").show();
                    $("#hurdaMHdiv").hide();
                    $("#BirimMik2").hide();
                    if(sabit=='E'){
                        $("#kontrol").prop('checked', true);
                        $("#kontrol").prop('disabled', true);
                    }else{
                        $("#kontrol").prop('checked', false);
                        $("#kontrol").prop('disabled', false);
                    }
                    $("#miktar22").prop("disabled", true);
                    $("#miktar11").attr('onblur', 'keyblur()');
                    $("#miktar22").val(mik2)
                } else if (hat == 'MH01') {
                    $("#kontrolcol").show();
                    $("#miktar11").val(max);
                    $("#miktar22").val(mik2);
                    $('#miktar22').attr('onkeyup', 'ikinciKaliteKeyUp()')
                    $("#miktar11").prop("disabled", true);
                    $("#miktar22").prop("disabled", true);
                    $("#kontrol").prop('checked', true);
                    $("#kontrol").prop('disabled', true);
                    $("#ModalSaveButton").prop("disabled", false)
                    $("#hurdamik").prop("disabled", false)
                    $('#ikinciDiv').hide();
                    $("#hurdamik").show();
                    $("#ikincimik1").show();
                    $("#ikincimik2").show();
                    $("#ikincimik2").prop('disabled', false);
                    $("#ikincimik2").attr('onkeyup', 'MHKeyChange2()');
                    $("#hurdaMHdiv").show();
                    $("#hurdaMHdiv1").show();
                    $("#hurdamik1").attr('onkeyup', 'HurdaChange2()');
                    $("#hurdamik").attr('onkeyup', 'HurdaChange3()');
                    $("#BirimMik").show();
                    $("#BirimMik2").show();
                } else if (hat == 'PB01' || hat == 'PB02'){
                    $("#miktar11").prop("disabled", false);
                    $("#miktar22").prop("disabled", true);
                    $("#kontrolcol").show();
                    $("#kontrol").prop('checked', false);
                    $("#kontrol").prop('disabled', true);
                    $('#ikinciDiv').hide();
                    $("#hurdamik").show();
                    $("#ikincimik1").show();
                    $("#ikincimik2").show();
                    $("#BirimMik").show();
                    $("#BirimMik2").show();
                    $("#hurdaMHdiv").hide();
                    $("#ikincimik2").attr('onkeyup', 'keychangeikinci()');
                    $("#hurdamik").attr('onkeyup', '');
                }
                else if (hat.substring(0,2) == 'RF') {
                    $("#miktar11").prop("disabled", false);
                    $("#miktar22").prop("disabled", true);
                    $("#kontrolcol").show();
                    $("#kontrol").prop('checked', false);
                    $("#kontrol").prop('disabled', false);
                    $('#ikinciDiv').hide();
                    $("#hurdamik").show();
                    $("#ikincimik1").show();
                    $("#ikincimik2").show();
                    $("#BirimMik").show();
                    $("#BirimMik2").show();
                    $("#ikincimik2").attr('onkeyup', 'keychangeikinci()');
                    $("#hurdamik").attr('onkeyup', '');
                    $("#hurdaMHdiv").hide();
                }
                else {
                    $("#miktar11").prop("disabled", false);
                    $("#miktar22").prop("disabled", true);
                    $("#kontrolcol").show();
                    $("#kontrol").prop('checked', true);
                    $("#kontrol").prop('disabled', true);
                    $('#ikinciDiv').hide();
                    $("#hurdamik").show();
                    $("#ikincimik1").show();
                    $("#ikincimik2").show();
                    $("#BirimMik").show();
                    $("#BirimMik2").show();
                    $("#ikincimik2").attr('onkeyup', 'keychangeikinci()');
                    $("#hurdamik").attr('onkeyup', '');
                    $("#hurdaMHdiv").hide();
                }
                $("#SiparisModalLabel").html(value.innerHTML.split("<br>")[0] + "<br>" + value.innerHTML.split("<br>")[1].split("<p")[0]);
                $("#SiparisModalLabel2").html(value.innerHTML.split("<br>")[2].split("<p")[0]);
                document.getElementById("modalicon").setAttribute("data-hat", hat);
                document.getElementById("modalicon").setAttribute("data-stok", stok);
                document.getElementById("modalicon").setAttribute("data-genislik", genislik);
                if (hat == "MH01") {
                    var olculer = $("#SiparisModalLabel2").html();
                    var olcu1 = olculer.split("||")[0].split(" ")[3];
                    var olcu2 = olculer.split("||")[1].split(" ")[2]
                    $("#BirimMik").html((max / mik2).toFixed(2) + " " + olcu1 + " / " + olcu2)
                }

                constant = 0;
            })



        }
        var hat = "";
        var stok = "";
        var genislik = "";

        function MHKeyChange2() {

            var oran = (max / mik2);
            var m2 = $('#ikincimik2').val();
            var olculer = $("#SiparisModalLabel2").html();
            var olcu1 = olculer.split("||")[0].split(" ")[3];
            var olcu2 = olculer.split("||")[1].split(" ")[2]
            if (m2.length > 0) {
                if (m2 < mik2) {
                    $('#miktar22').val(mik2 - m2);
                    $('#miktar11').val(Math.round(oran * (mik2 - m2)));
                    if ($('#hurdamik1').val().length > 0) {
                        $('#miktar11').val($('#miktar11').val() - $('#hurdamik1').val());
                        $('#miktar22').val(mik2 - m2 - $('#hurdamik').val());
                    }

                    $("#BirimMik2").html(oran.toFixed(2) + " " + olcu1 + " / " + olcu2)
                    if (m2.length > 0) {
                        $('#ikincimik1').val(Math.round(m2 * oran));
                    } else {
                        $('#ikincimik1').val(null);
                        $('#hurdamik1').val(null);
                        $("#BirimMik2").html(" - ");
                        $('#miktar11').val(max)
                        $('#miktar22').val(mik2)
                    }
                } else {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'center',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'info',
                        title: 'Toplam miktarı aşamazsınız.'
                    });
                    $('#ikincimik2').val(null).trigger("keyup");
                    $("#BirimMik2").html(" - ");
                }
            } else {
                if ($('#hurdamik1').val().length > 0) {
                    $('#miktar11').val(max - $('#hurdamik1').val());
                    $('#ikincimik1').val(null);
                    $('#miktar22').val(mik2 - $('#hurdamik').val())
                } else {
                    $('#ikincimik1').val(null);
                    $('#hurdamik1').val(null);
                    $("#BirimMik2").html(" - ");
                    $('#miktar11').val(max)
                    $('#miktar22').val(mik2)
                }

            }



        }
        const Toast = Swal.mixin({
            toast: true,
            position: 'center',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })
        function HurdaChange2() {
            if ($('#hurdamik1').val().length > 0) {
                var m = parseInt($('#hurdamik1').val())

                if (m < max) {

                    MHKeyChange2()
                } else {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'center',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'info',
                        title: 'Toplam miktarı aşamazsınız.'
                    });
                    $('#hurdamik1').val(null)
                    $('#hurdamik1').val(null)
                    MHKeyChange2()
                }
            } else {
                MHKeyChange2()
            }

        }
        function HurdaChange3() {
            var oran = (max / mik2);
            if ($('#hurdamik').val().length > 0) {
                $('#hurdamik1').val(Math.round($('#hurdamik').val() * oran)).trigger("keyup")
            } else {
                $('#hurdamik1').val(null).trigger("keyup")
            }

        }
        function showmodal2(value) {


            hat = value.dataset.hat;
            stok = value.dataset.stok;
            genislik = value.dataset.genislik;
            $("#SiparisModal2").modal('show');
            $('#TUMU_BUTTON').prop("checked", false)
            $('#ACIK_BUTTON').prop("checked",true)
            $('#KAPALI_BUTTON').prop("checked", false)

            ACIKSecim(hat,stok,genislik);
            constant = 0;
        }
        function showHesapla() {


            hat = document.getElementById('modalicon').dataset.hat;
            stok = document.getElementById('modalicon').dataset.stok;
            genislik = document.getElementById('modalicon').dataset.genislik;
            $('#hesapInput').val(null);
            $("#HesaplaModal").modal('show');
            constant = 0;
        }
        function ModalKapat() {
            $("#SiparisModal").modal('hide');
            constant = 0;


        }
        function HurdaModalKapat() {
            $("#HurdaModal").modal('hide');
            constant = 0;


        }
        function ModalKapat2() {
            $("#SiparisModal2").modal('hide');
            constant = 0;


        }
        function ModalKapat4() {
            $("#HesaplaModal").modal('hide');
            constant = 0;


        }
        function ACIKSecim(value, value1, value2) {
            if (value2 == "null") {
                value2 = "0";
            }

            $("#table").bootstrapTable("destroy").bootstrapTable({
                url: "http://192.168.2.13:83/api/ie/all/" + value + "/" + value1 + "/" + value2 +"/H",
                buttons: { // 👈

                    btnAllSelect: { // 👈  button 1
                        text: 'Tümünü Seç',
                        icon: 'bi bi-check-circle',
                        class: "test",
                        attributes: {
                            style: 'color:red;font-size:large',
                            title: 'Tümünü Seç'
                        },
                        event: function () {
                            if (document.getElementsByName("btnAllSelect")[0].getElementsByTagName("i")[0].className != "bi bi-check-circle-fill") {
                                document.getElementsByName("btnAllSelect")[0].getElementsByTagName("i")[0].className = "bi bi-check-circle-fill";
                                document.getElementsByName("btnAllSelect")[0].getElementsByTagName("i")[0].style = "color:#71dd37;font-size:large;";
                                var l = document.getElementById("table").getElementsByTagName("i").length;
                                for (let i = 0; i < l; i++) {
                                    document.getElementById("table").getElementsByTagName("i")[i].className = "bi bi-check-circle-fill";
                                    document.getElementById("table").getElementsByTagName("i")[i].style = "color:#71dd37;font-size:x-large;"
                                }
                                $("#ModalSaveButton2").prop("disabled", false);
                            } else {
                                document.getElementsByName("btnAllSelect")[0].getElementsByTagName("i")[0].className = "bi bi-check-circle";
                                document.getElementsByName("btnAllSelect")[0].getElementsByTagName("i")[0].style = "color:red;font-size:large;";
                                var l = document.getElementById("table").getElementsByTagName("i").length;
                                for (let i = 0; i < l; i++) {
                                    document.getElementById("table").getElementsByTagName("i")[i].className = "bi bi-check-circle";
                                    document.getElementById("table").getElementsByTagName("i")[i].style = "color:red;font-size:x-large;"
                                }
                                if (document.getElementsByClassName("bi bi-check-circle-fill").length > 0) {
                                    $("#ModalSaveButton2").prop("disabled", false);
                                } else {
                                    $("#ModalSaveButton2").prop("disabled", true);
                                }
                            }
                        }
                    }
                }

            });
            $('#ModalSaveButton2').show();
            $('#ModalSaveButton2').attr("onclick", "VerileriGonder()");
            $('#ModalSaveButton2').html("Seçili İş Emirlerini Kapat");

                $("#ModalSaveButton2").prop("disabled", true);

        }
        function TUMUSecim(value,value1,value2) {
            if (value2 == "null") {
                value2 = "0";
            }
            $("#table").bootstrapTable("destroy").bootstrapTable({
                url: "http://192.168.2.13:83/api/ie/all/"+value+"/"+value1+"/"+value2+"/null"

            });
            $("#table").bootstrapTable('hideColumn', 'ISLEM');
            $('#ModalSaveButton2').hide();

        }
        function KAPALISecim(value, value1, value2) {
            if (value2 == "null") {
                value2 = "0";
            }
            $("#ModalSaveButton2").prop("disabled", true);
            $("#table").bootstrapTable("destroy").bootstrapTable({
                url: "http://192.168.2.13:83/api/ie/all/" + value + "/" + value1 + "/" + value2 +"/E",
                buttons: { // 👈

                    btnAllSelect: { // 👈  button 1
                        text: 'Tümünü Seç',
                        icon: 'bi bi-check-circle',
                        class: "test",
                        attributes: {
                            style: 'color:red;font-size:large',
                            title: 'Tümünü Seç'
                        },
                        event: function () {
                            if (document.getElementsByName("btnAllSelect")[0].getElementsByTagName("i")[0].className != "bi bi-check-circle-fill") {
                                document.getElementsByName("btnAllSelect")[0].getElementsByTagName("i")[0].className = "bi bi-check-circle-fill";
                                document.getElementsByName("btnAllSelect")[0].getElementsByTagName("i")[0].style = "color:#71dd37;font-size:large;";
                                var l = document.getElementById("table").getElementsByTagName("i").length;
                                for (let i = 0; i < l; i++) {
                                    document.getElementById("table").getElementsByTagName("i")[i].className = "bi bi-check-circle-fill";
                                    document.getElementById("table").getElementsByTagName("i")[i].style ="color:#71dd37;font-size:x-large;"
                                }
                                $("#ModalSaveButton2").prop("disabled", false);
                            } else {
                                document.getElementsByName("btnAllSelect")[0].getElementsByTagName("i")[0].className = "bi bi-check-circle";
                                document.getElementsByName("btnAllSelect")[0].getElementsByTagName("i")[0].style = "color:red;font-size:large;";
                                var l = document.getElementById("table").getElementsByTagName("i").length;
                                for (let i = 0; i < l; i++) {
                                    document.getElementById("table").getElementsByTagName("i")[i].className = "bi bi-check-circle";
                                    document.getElementById("table").getElementsByTagName("i")[i].style = "color:red;font-size:x-large;"
                                }
                                if (document.getElementsByClassName("bi bi-check-circle-fill").length > 0) {
                                    $("#ModalSaveButton2").prop("disabled", false);
                                } else {
                                    $("#ModalSaveButton2").prop("disabled", true);
                                }
                            }
                        }
                    }
                }

            });
            $('#ModalSaveButton2').show();
            $('#ModalSaveButton2').attr("onclick", "VerileriGonderAc()");
            $('#ModalSaveButton2').html("Seçili İş Emirlerini Aç");
        }
        function oranFormatter(value, index, row) {

            return '<p class="meter mt-1" style="height: auto;"><span style="width:' + (value * 100) + '%;"><span class="progress" id="progress-msip"><span style="margin-bottom: 10px; text-align: end; color: black;">' + (value * 100).toFixed(2) + '%</span></span></span></p>';
        }
        function mikFormatter(value, index, row) {

            return value.toLocaleString();
        }
        function rowFormatter(item, row) {
            var value = item.KAPALI;
            if (value) {
                if (value === 'H') {
                    return {
                        css: {
                            background: '#E9EBFF'
                        }
                    }
                } else {
                    return {
                        css: {
                            background: '#FAEAEA'
                        }
                    }
                }
            }
        }
        function islemFormatter(value,index,row) {

            return '<div style="cursor:pointer" onclick="Select(this)"><i class="bi bi-check-circle" data-isemri="'+index.ISEMRINO+'" style="color:red;font-size:x-large;"></i></div>';
        }
        function BekleyenIslemFormatter(value, index, row) {

            var MakineKodu = $('input:radio[name="makine-ie"]:checked').val();

            switch (MakineKodu) {
                case "DL01":
                    return `<div style="cursor:pointer" onclick="SelectAll('${index.HAM_SERINO}', 'HAM_SERINO', this, ${row})"><i class="bi bi-check-circle" style="color:red;font-size:x-large;"></i></div>`;
                    break;
                case "BK01":
                case "MH01":
                case "PB01":
                case "PB02":
                case "RF01":
                case "RF02":
                case "RF03":
                case "SM01":
                case "SM02":
                case "SM03":
                case "TP01":
                    return `<div style="cursor:pointer" onclick="SelectAll('${index.URT_STOK_KODU}', 'URT_STOK_KODU', this, ${row})"><i class="bi bi-check-circle" style="color:red;font-size:x-large;"></i></div>`;
                    break;
            }

        }
        function Select(value) {
            if (value.getElementsByTagName("i")[0].className != "bi bi-check-circle-fill") {
                value.getElementsByTagName("i")[0].className = "bi bi-check-circle-fill";
                value.getElementsByTagName("i")[0].style = "color:#71dd37;font-size:x-large;";
                $("#ModalSaveButton2").prop("disabled", false);
            } else {
                value.getElementsByTagName("i")[0].className = "bi bi-check-circle";
                value.getElementsByTagName("i")[0].style = "color:red;font-size:x-large;";
                if (document.getElementsByClassName("bi bi-check-circle-fill").length > 0) {
                    $("#ModalSaveButton2").prop("disabled", false);
                } else {
                    $("#ModalSaveButton2").prop("disabled", true);
                }
            }

        }
        function SelectAll(Value, Filter, Button, Id) {
            event.stopPropagation();

            var Icon = Button.getElementsByTagName('i')[0];

            FiltrelenmisIsEmirleri = IsEmirleri.filter(x => x[Filter] == Value);


            if (AllValueIsSelected(Value, Filter)) {
                var MappedData = FiltrelenmisIsEmirleri.map((item) => { return item.ALT_ISEMRI });
                KapatilacakIsEmirleri = KapatilacakIsEmirleri.filter(x => !MappedData.includes(x));

                Icon.style.color = 'red';
                Icon.classList.remove("bi-check-circle-fill");
                Icon.classList.add("bi-check-circle");
            }
            else {
                FiltrelenmisIsEmirleri?.forEach((item) => {
                    if (!ValueIsSelected(item.ALT_ISEMRI)) {
                        KapatilacakIsEmirleri.push(item.ALT_ISEMRI);
                    }
                });

                Icon.style.color = '#71dd37';
                Icon.classList.add("bi-check-circle-fill");
                Icon.classList.remove("bi-check-circle");
            }

            $(`#BekleyenIsEmirleri${Id}DetailTable`).bootstrapTable('toggleView');
            $(`#BekleyenIsEmirleri${Id}DetailTable`).bootstrapTable('toggleView');

            if (KapatilacakIsEmirleri.length > 0) {
                $('#isemirlerinikapatbtn').show();
            }
            else {
                $('#isemirlerinikapatbtn').hide();
            }

        }
        function AllValueIsSelected(Value, Filter)
        {
            FiltrelenmisIsEmirleri = IsEmirleri.filter(x => x[Filter] == Value);

            for (var i = 0; i < FiltrelenmisIsEmirleri.length; i++) {
                if (!(KapatilacakIsEmirleri.includes(FiltrelenmisIsEmirleri[i].ALT_ISEMRI))) {
                    return false;
                }
            }

            return true;
        }
        function ValueIsSelected(Value) {
            return KapatilacakIsEmirleri.includes(Value);
        }
        function VerileriGonder() {
            ShowProgress();
            var l = document.getElementById("table").getElementsByClassName("bi bi-check-circle-fill").length;
            var list = [];
            for (let i = 0; i < l; i++) {
                list.push({ "ISEMRINO": document.getElementById("table").getElementsByClassName("bi bi-check-circle-fill")[i].getAttribute("data-isemri") });
            }
                        $.ajax({
                            url: '@Url.Action("IsEmirleriniKapat", "Uretim")',
                            type: 'POST',
                            data: {"isemrimod":list },
                            error: function (data) {
                                alert(JSON.stringify(data));
                                HideProgress();
                            },
                            success: function (data) {
                                HideProgress();
                                playOnay()
                                Swal.fire(
                                    'Başarılı!',
                                    'Kayıt başarılı',
                                    'success'
                                )
                                ACIKSecim(hat, stok, genislik)
                                document.getElementById(btnid).onclick();
                            }
                        })
        }
        function VerileriGonderAc() {
            ShowProgress();
            var l = document.getElementById("table").getElementsByClassName("bi bi-check-circle-fill").length;
            var list = [];
            for (let i = 0; i < l; i++) {
                list.push({ "ISEMRINO": document.getElementById("table").getElementsByClassName("bi bi-check-circle-fill")[i].getAttribute("data-isemri") });
            }
                        $.ajax({
                            url: '@Url.Action("IsEmirleriniAc", "Uretim")',
                            type: 'POST',
                            data: {"isemrimod":list },
                            error: function (data) {
                                alert(JSON.stringify(data));
                                HideProgress();
                            },
                            success: function (data) {
                                HideProgress();
                                playOnay()
                                Swal.fire(
                                    'Başarılı!',
                                    'Kayıt başarılı',
                                    'success'
                                )
                                KAPALISecim(hat, stok, genislik)
                                document.getElementById(btnid).onclick();
                            }
                        })
        }
        var toplam = 0;
        var oldSipNo = null;
        var loadDongu=0;
        function load(url) {
            var kontrol = $("#kontrol").is(':checked');
            $.getJSON(url, function (data) {
                var d = data;

                var hurdamik = $("#hurdamik").val();
                var ikincimik1 = $("#ikincimik1").val();
                var ikincimik2 = $("#ikincimik2").val();
                if (ikincimik1 == null || ikincimik1 == "") {
                    ikincimik1 = "0";
                    ikincimik2 = "0";
                }

                if (hat == 'MH01') {
                    hurdamik = $("#hurdamik1").val();
                }
                if (hurdamik == null || hurdamik == "") {
                    hurdamik = "0";
                }
                if (hat != "BK01" && hat!="MH01") {
                    $.ajax({
                        url: '@Url.Action("TrpzUretim", "Uretim")',
                        type: 'POST',
                        data: { "stokkodu": stok, "ISEMRINO": d[0].ISEMRINO, "SERI_NO": d[0].SERI_NO, "KULL_MIKTAR": d[0].KULL_MIKTAR, "mik2": d[0].KULL_MIKTAR2, "kontrol": kontrol, "hurdamik": hurdamik, "ikincimik1": ikincimik1, "ikincimik2": ikincimik2, "dongu": loadDongu,"sonMu":false },
                        error: function (data) {
                            console.log(data);
                            HideProgress();
                            $("#SiparisModal").modal('hide');
                            playHata1()
                            Swal.fire('Başarısız!', 'Kayıt başarısız,tekrar deneyin', 'error');
                        },
                        success: function (data) {
                            console.log(data);
                            if (d[0].ISEMRINO.substring(0, 2) != 'MH' && d[0].ISEMRINO.substring(0, 2) != 'BK') {
                                if (d[0].KULL_MIKTAR != 0) {
                                    if (data.substring(0, 4) != 'Hata') {
                                        loadDongu++;
                                        load(url);
                                    } else {
                                        HideProgress();
                                        $("#SiparisModal").modal('hide');
                                        playHata1()
                                        Swal.fire('Başarısız!', data, 'error');
                                        document.getElementById(btnid).onclick();
                                    }
                                } else {
                                    HideProgress();
                                    $("#SiparisModal").modal('hide');
                                    playOnay()
                                    Swal.fire('Başarılı!', 'Kayıt başarılı', 'success');
                                    document.getElementById(btnid).onclick();
                                    loadDongu = 0;
                                    if ($("#etiketyazdir").is(':checked')) {
                                        TrpzBarkod(data);
                                    }
                                }
                            } else {
                                HideProgress();
                                $("#SiparisModal").modal('hide');
                                playOnay()
                                Swal.fire('Başarılı!', 'Kayıt başarılı', 'success');
                                document.getElementById(btnid).onclick();
                                loadDongu = 0;
                            }
                        }
                    });

                } else {
                    $.ajax({
                        url: '@Url.Action("BKUretim", "Uretim")',
                        type: 'POST',
                        data: { "stokkodu": stok, "ISEMRINO": d[0].ISEMRINO, "SERI_NO": d[0].SERI_NO, "KULL_MIKTAR": d[0].KULL_MIKTAR, "mik2": d[0].KULL_MIKTAR2, "kontrol": kontrol, "hurdamik": hurdamik, "ikincimik1": ikincimik1, "ikincimik2": ikincimik2, "dongu": loadDongu },
                        error: function (data) {
                            console.log(data);
                            HideProgress();
                            $("#SiparisModal").modal('hide');
                            playHata1()
                            Swal.fire('Başarısız!', 'Kayıt başarısız,tekrar deneyin', 'error');
                            loadDongu = 0;
                        },
                        success: function (data) {

                                HideProgress();
                                $("#SiparisModal").modal('hide');
                            if (data.substring(0, 4) == "Hata") {
                                playHata1()
                                Swal.fire(
                                    'Başarısız!',
                                    data,
                                    'error'
                                )
                            } else {
                                playOnay()
                                Swal.fire(
                                    'Başarılı!',
                                    'Kayıt başarılı',
                                    'success'
                                )
                            }
                            document.getElementById(btnid).onclick();
                            loadDongu = 0;
                            if ($("#etiketyazdir").is(':checked')) {
                                TrpzBarkod(data);
                            }
                        }
                    });

                }

            });
        }
        function TrpzBarkod(BarkodNo)
        {
            if (printKontrol) {
                printKontrol = false;
                var etiketYazdir = $("#etiketyazdir").is(':checked');
                var etiketOnizleme = $("#etiket-onizleme").is(':checked');

                var yazici = $('#yazici :selected').val();

                if (etiketYazdir) {
                    $.ajax({
                        url: '@Url.Action("UretilmisEtiketleriYazdir", "Uretim")',
                        type: 'POST',
                        data: {
                            "BarkodListesi": [BarkodNo],
                            "EtiketDizayn": "Uretim",
                            "Yazici": yazici,
                            "DirektYazdir": etiketYazdir,
                            "Onizle": etiketOnizleme
                        },
                        error: (e) => { console.log(JSON.stringify(e)); printKontrol = true; },
                        success: (response) => {
                            if (response.trim().length > 0 && etiketOnizleme && etiketYazdir) {
                                UretilmisEtiketOnizle(response);
                            }
                            printKontrol = true;
                        }
                    });
                }

            }

        }
        var modalKaydetKontrol = true;
        function ModalKaydet() {
            if (modalKaydetKontrol) {
                modalKaydetKontrol = false;
                if (m1 != null) {
                    ShowProgress();
                    var kontrol = $("#kontrol").is(':checked');
                    var etiket = $("#etiketyazdir").is(':checked');
                    var etiketOnizleme = $("#etiket-onizleme").is(':checked');
                    var yazici = $("#yazici").val();
                    if (hat.substring(0, 2) != "BK" && hat.substring(0, 2) != "MH") {
                        if (hat.substring(0, 2) != "TP" && hat.substring(0, 2) != "PB" && hat.substring(0, 2) != "RF") {
                            $.ajax({
                                url: '@Url.Action("UretimSonuKaydi", "Uretim")',
                                type: 'POST',
                                data: { "hatkodu": hat, "stokkodu": stok, "genislik": (genislik == "null" ? null : genislik.toString().trim()), "mik1": $("#miktar11").val().toString().trim(), "mik2": $("#miktar22").val().toString().trim(), "kontrol": kontrol, "etiket": etiket, "onizleme": etiketOnizleme, "YAZICI": yazici },
                                error: function (data) {
                                    modalKaydetKontrol = true;
                                    console.log(data);
                                    HideProgress();
                                    $("#SiparisModal").modal('hide');
                                    Swal.fire(
                                        'Başarısız!',
                                        data,
                                        'error'
                                    )
                                    document.getElementById(btnid).onclick();
                                },
                                success: function (data) {
                                    modalKaydetKontrol = true;
                                    HideProgress();

                                    $("#SiparisModal").modal('hide');

                                    if (data.substring(0, 4) == "Hata") {
                                        playHata1();

                                        Swal.fire('Başarısız!', data, 'error');
                                    }
                                    else {
                                        playOnay();

                                        Swal.fire('Başarılı!', 'Kayıt başarılı', 'success');

                                        $.ajax({
                                            url: '@Url.Action("UretilmisEtiketleriYazdir", "Uretim")',
                                            type: 'POST',
                                            data: {
                                                "BarkodListesi": JSON.parse(data),
                                                "EtiketDizayn": "Uretim",
                                                "Yazici": yazici,
                                                "DirektYazdir": etiket,
                                                "Onizle": etiketOnizleme
                                            },
                                            error: (e) => { console.log(JSON.stringify(e)); },
                                            success: (response) => {
                                                if (response.trim().length > 0 && etiketOnizleme && etiket) {
                                                    UretilmisEtiketOnizle(response);
                                                }

                                                if (response.substring(0, 4) == "HATA") {
                                                    playHata1();

                                                    Swal.fire('Yazdırma başarısız, üretilmiş barkodlar alanından tekrar deneyiniz!', response, 'error');
                                                }
                                            }
                                        });

                                    }

                                    document.getElementById(btnid).onclick();
                                }
                            })
                        } else {
                            var mik1 = $("#miktar11").val();
                            var ikincimik1 = $("#ikincimik1").val();
                            var mik2 = $("#miktar22").val();
                            var ikincimik2 = $("#ikincimik2").val();
                            var hurdamik = $("#hurdamik").val();
                            var top1 = parseFloat(mik1);
                            var top2 = parseFloat(mik2);
                            if (ikincimik1 != "" && ikincimik1 != null) {
                                top1 = top1 + parseFloat(ikincimik1);
                                top2 = top2 + parseFloat(ikincimik2);
                            }
                            if (hurdamik != "" && hurdamik != null) {
                                top1 = top1 + parseFloat(hurdamik);
                            }
                            if (mik1 <= max) {



                                loadPB(hat, stok, mik1.toString().trim(), mik2.toString().trim())


                            } else {
                                HideProgress();
                                const Toast = Swal.mixin({
                                    toast: true,
                                    position: 'center',
                                    showConfirmButton: false,
                                    timer: 3000,
                                    timerProgressBar: true,
                                    didOpen: (toast) => {
                                        toast.addEventListener('mouseenter', Swal.stopTimer)
                                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                                    }
                                })

                                Toast.fire({
                                    icon: 'info',
                                    title: 'Toplam miktarı aşamazsınız.'
                                });
                            }


                        }
                    } else {
                        var mik1 = $("#miktar11").val();
                        var ikincimik1 = $("#ikincimik1").val();
                        var mik2 = $("#miktar22").val();
                        var ikincimik2 = $("#ikincimik2").val();
                        var hurdamik = $("#hurdamik").val();
                        var top1 = parseFloat(mik1);
                        var top2 = parseFloat(mik2);
                        if (ikincimik1 != "" && ikincimik1 != null) {
                            top1 = top1 + parseFloat(ikincimik1);
                            top2 = top2 + parseFloat(ikincimik2);
                        }
                        if (hat == 'MH01') {
                            hurdamik = $("#hurdamik1").val();
                        }
                        if (hurdamik != "" && hurdamik != null) {

                            top1 = top1 + parseFloat(hurdamik);
                        }
                        var url = "//192.168.2.13:83/api/ie/USK/" + hat + "/" + stok + "/" + isemri + "/" + top1.toString().trim() + "/" + top2.toString().trim() + "/0";
                        if (top1 <= max) {
                            load(url);
                        } else {
                            HideProgress();
                            const Toast = Swal.mixin({
                                toast: true,
                                position: 'center',
                                showConfirmButton: false,
                                timer: 3000,
                                timerProgressBar: true,
                                didOpen: (toast) => {
                                    toast.addEventListener('mouseenter', Swal.stopTimer)
                                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                                }
                            })

                            Toast.fire({
                                icon: 'info',
                                title: 'Toplam miktarı aşamazsınız.'
                            });
                        }

                    }
                } else {
                    playHata1()
                    Swal.fire(
                        'Başarısız!',
                        'Eksik bileşen',
                        'warning'
                    )
                }

            }



        }

        var type = 'fa'
        var Pbsayac = 0;
        var sonMu = false;
        var ek = 0;
        var printKontrol = true;
        function loadPB(hat,stok,miktar1,miktar2) {

            var ikincimik1 = $("#ikincimik1").val();
            var ikincimik2 = $("#ikincimik2").val();
            var hurdamik = $("#hurdamik").val();
            if (hurdamik == "" || hurdamik == null) {
                hurdamik = "0";
            }
            if (ikincimik1 == "" || ikincimik1 == null) {
                ikincimik1 = "0";
                ikincimik2 = "0";
            }
            var etiket = $("#etiketyazdir").is(':checked');
            var etiketOnizleme = $("#etiket-onizleme").is(':checked');
            var k = $("#kontrol").is(':checked');


                 var etiket = $("#etiketyazdir").is(':checked');
                 var etiketOnizleme = $("#etiket-onizleme").is(':checked');
            var k = $("#kontrol").is(':checked');
            var isorhat = "";
            if (hat == 'TP01') {
                isorhat = isemri;
            } else {
                isorhat = hat;
            }
            $.ajax({
                url: '@Url.Action("TrpzUretim", "Uretim")',
                type: 'POST',
                data: { "stokkodu": stok, "ISEMRINO": isorhat, "SERI_NO": "", "KULL_MIKTAR":miktar1, "mik2":miktar2, "kontrol": k, "hurdamik": hurdamik, "ikincimik1": ikincimik1, "ikincimik2": ikincimik2, "dongu": 0, "sonMu": sonMu },
                error: function (data1) {
                    modalKaydetKontrol = true;
                        console.log(data1);
                        HideProgress();
                        $("#SiparisModal").modal('hide');
                        playHata1()
                        Swal.fire('Başarısız!', 'Kayıt başarısız,tekrar deneyin', 'error');
                    },
                    success: function (data1) {
                        modalKaydetKontrol = true;
                        if (data1.substring(0, 4) != 'Hata') {


                                HideProgress();
                                $("#SiparisModal").modal('hide');
                                playOnay()
                                Swal.fire('Başarılı!', 'Başarılı!!', 'success');

                                if ($("#etiketyazdir").is(':checked')) {
                                    TrpzBarkod(data1);
                                }
                                document.getElementById(btnid).onclick();


                        } else {
                            HideProgress();
                            $("#SiparisModal").modal('hide');
                            playHata1()
                            Swal.fire('Başarısız!', data1, 'error');
                            document.getElementById(btnid).onclick();

                        }

                    }
                });



        }
        function loadingTemplate(message) {
            if (type === 'fa') {
                return '<div class="heart"><img id="progress5" src="/images/novasaydam.png" style="max-width:15vw" /></div>'
            }
            if (type === 'pl') {
                return '<div class="ph-item"><div class="ph-picture"></div></div>'
            }
        }
        function modalclick() {
            $("#uretimkaydi").focus();
        }
    </script>

    <div class="modal fade" id="SiparisModal" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="SiparisModalLabel" aria-hidden="true" onclick="modalclick()">

        <div class="modal-dialog modal-sm modal-dialog-scrollable" style="max-width: 50%;top:20vh">
            <div class="modal-content">
                <div class="container-fluid mt-3">
                    <div class="centercontent" id="content2" style="display:unset">
                        <div class="heart"><img id="progress2" src="~/images/novasaydam.png" style="max-width:15vw;display:none" /></div>
                    </div>
                    <div class="row float-end">
                        <div class="col d-flex">
                            <div class="btn-group me-2" role="group" aria-label="Basic radio toggle button group" id="ikinciDiv">
                                <input type="radio" class="btn-check" name="normal" id="normal" checked="checked" onclick="uretimGroupChange(this.value)" value="0" autocomplete="off">
                                <label class="btn btn-outline-primary openlbl" for="normal">NORMAL</label>

                                <input type="radio" class="btn-check" name="normal" id="ikincikalite" value="1" onclick="uretimGroupChange(this.value)" autocomplete="off">
                                <label class="btn btn-outline-primary" for="ikincikalite">İKİNCİ KALİTE</label>

                                <input type="radio" class="btn-check" name="normal" id="hurda" value="2" onclick="uretimGroupChange(this.value)" autocomplete="off">
                                <label class="btn btn-outline-primary" for="hurda">HURDA</label>

                            </div>
                            <i onclick="showHesapla()" id="modaliconhesapla" class="bi bi-calculator float-end" style="color:#17a2b8; font-size: x-large; cursor: pointer" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-html="true" title="Hesapla"></i>
                            <i onclick="showmodal2(this)" id="modalicon" class="bi bi-file-earmark-text-fill float-end" style="color:#17a2b8; font-size: x-large; cursor: pointer" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-html="true" title="İş Emirleri"></i>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div id="kontrolcol" style="display:none" class="form-check form-switch mb-2">
                                <input id="kontrol" checked="checked" class="form-check-input" type="checkbox">
                                <label class="form-check-label" for="kontrol">İş Emirleri Otomatik Kapansın</label>
                            </div>
                            <div class="row mt-1">
                                <div class="col-sm-3">
                                    <div class="form-check form-switch mb-2">
                                        <input id="etiketyazdir" class="form-check-input" onchange="yazdirchange()" type="checkbox">
                                        <label class="form-check-label" for="etiketyazdir">Etiket Yazdır</label>
                                    </div>
                                </div>
                                <div class="col">
                                    <select id="yazici" class="form-select" style="width:250px" onchange="YaziciOnChange()">
                                    </select>
                                </div>

                            </div>

                            <div class="form-check form-switch">
                                <input id="etiket-onizleme" class="form-check-input" type="checkbox">
                                <label class="form-check-label" for="etiket-onizleme">Etiket Önizle</label>
                            </div>
                        </div>


                    </div>

                    <div class="row text-center mt-1">
                        <div class="col">
                            <label class="modal-title" id="SiparisModalLabel" style="font-weight:bold;font-size:larger">SATICI SİPARİŞ RAPORU</label>
                        </div>
                    </div>
                    <div class="row text-center mt-1">
                        <div class="col">
                            <label class="modal-title" id="SiparisModalLabel2" style="font-size: large">SATICI SİPARİŞ RAPORU</label>

                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col">

                            <input onfocus="inputclick()" onkeyup="keychange1()" placeholder="Miktar 1" class="form-control text-center" type="number" id="miktar11">


                        </div>
                        <div class="col-2 text-center">
                            <label class="modal-title" id="BirimMik" style=" font-size: 14px"> - </label>
                        </div>
                        <div class="col">


                            <input disabled class="form-control text-center" placeholder="Miktar 2" onfocus="inputclick()" onkeyup="keychange2()" type="number" id="miktar22">

                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col">

                            <input placeholder="İKİNCİ KALİTE MİKTAR1" class="form-control text-center" type="number" onkeyup="keychangeikinci1()" id="ikincimik1">


                        </div>
                        <div class="col-2 text-center">
                            <label class="modal-title" id="BirimMik2" style=" font-size: 14px"> - </label>
                        </div>
                        <div class="col">


                            <input class="form-control text-center" onkeyup="keychangeikinci()" placeholder="İKİNCİ KALİTE MİKTAR2" type="number" id="ikincimik2">

                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col" id="hurdaMHdiv" style="display:none">


                            <input class="form-control text-center" placeholder="HURDA KG" type="number" id="hurdamik1">

                        </div>
                        <div class="col-2 text-center" id="hurdaMHdiv1" style="display:none">




                        </div>
                        <div class="col">


                            <input class="form-control text-center" placeholder="HURDA ADET" type="number" id="hurdamik">

                        </div>


                    </div>


                    <div class="modal-footer mt-1" style="display:flex;justify-content:center;align-items:center;">
                        <button class="btn btn-primary" id="ModalSaveButton" type="button" onclick="ModalKaydet()" disabled>KAYDET</button>
                        <button class="btn btn-danger" type="button" onclick="ModalKapat()">KAPAT</button>
                        @*<button class="btn btn-danger" type="button" onclick="TrpzBarkod('EFC200000000013')">Test</button>*@
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="modal fade" id="SiparisModal2" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="SiparisModalLabel" aria-hidden="true" onclick="modalclick()">
        <div class="modal-dialog modal-sm modal-dialog-scrollable" style="max-width: 80% !important;top:10vh">
            <div class="modal-content" style="max-height:70vh;">
                <div class="modal-header">
                    <div class="row w-100">
                        <div class="col-sm-2">
                            <div class="btn-group" role="group" aria-label="Basic radio toggle button group">
                                <input type="radio" class="btn-check" onclick="ACIKSecim(hat, stok, genislik);" name="DocumentStateRadio" id="ACIK_BUTTON" value="false" autocomplete="off" checked="">
                                <label class="btn btn-outline-primary" for="ACIK_BUTTON">AÇIK</label>
                                <input type="radio" class="btn-check" onclick="KAPALISecim(hat, stok, genislik);" name="DocumentStateRadio" id="KAPALI_BUTTON" value="all" autocomplete="off">
                                <label class="btn btn-outline-primary" for="KAPALI_BUTTON">KAPALI</label>
                                <input type="radio" class="btn-check" onclick="TUMUSecim(hat, stok, genislik);" name="DocumentStateRadio" id="TUMU_BUTTON" value="true" autocomplete="off">
                                <label class="btn btn-outline-primary" for="TUMU_BUTTON">TÜMÜ</label>
                            </div>
                        </div>
                        <div class="col-sm" style="margin-left:26%">
                            <h3>
                                İş Emri Aç/Kapat
                            </h3>
                        </div>
                    </div>




                </div>

                <div class="modal-body">
                    <div class="centercontent" id="content1" style="display:unset">
                        <div class="heart"><img id="progress1" src="~/images/novasaydam.png" style="max-width:15vw;display:none" /></div>
                    </div>
                    <div id="toolbar1" style="display:inline-block">
                        <div class="kare mt-3" style="background: #E9EBFF; float: left "></div><div class="mt-3" style="float: left;margin-left:5px;font-size:11px "><label>AÇIK</label></div>
                        <div class="kare mt-3" style="background: #FAEAEA; float: left; margin-left: 5px "></div><div class="mt-3" style="float: left; margin-left: 5px;font-size:11px "><label>KAPALI</label></div>
                    </div>

                    <table id="table"
                           class="table"
                           data-buttons-order="['filterTable','columns']"
                           data-toggle="table"
                           data-export-types="['excel']"
                           data-pagination="true"
                           data-page-size="100"
                           data-search="true"
                           data-locale="tr-TR"
                           data-filter-control="true"
                           data-toolbar="#toolbar1"
                           data-filter-control-multiple-search="true"
                           data-mobile-responsive="true"
                           data-show-footer="false"
                           data-height="400"
                           data-group-by-field="CARI_ISIM" style="overflow:auto !important"
                           data-row-style="rowFormatter"
                           data-loading-template="loadingTemplate">
                        <thead>
                            <tr>
                                <th data-field="ISEMRINO" data-halign="center" data-align="center" data-sortable="true">İş Emri No</th>
                                <th data-field="MIKTAR" data-halign="center" data-align="center" data-sortable="true" data-formatter="mikFormatter">Miktar</th>
                                <th data-field="URETILEN_MIKTAR" data-halign="center" data-align="center" data-sortable="true" data-formatter="mikFormatter">Üretilen Miktar</th>
                                <th data-field="ORAN" data-halign="center" data-align="center" data-sortable="true" data-formatter="oranFormatter">Oran</th>
                                <th data-field="ISLEM" data-halign="center" data-align="center" data-sortable="true" data-formatter="islemFormatter" id="tableIslem">İşlem</th>
                            </tr>
                        </thead>
                    </table>


                </div>

                <div class="modal-footer" style="display:flex;justify-content:center;align-items:center;">
                    <button class="btn btn-primary" id="ModalSaveButton2" type="button" onclick="VerileriGonder()" disabled>KAYDET</button>
                    <button class="btn btn-danger" type="button" onclick="ModalKapat2()">KAPAT</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="HesaplaModal" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="SiparisModalLabel" aria-hidden="true" onclick="modalclick()">
        <div class="modal-dialog modal-sm modal-dialog-scrollable">
            <div class="modal-content" style="max-height:70vh;">
                <div class="modal-header">
                    <div class="row w-100">
                        <div class="col text-center">
                            <h3>
                                HESAPLA
                            </h3>
                        </div>

                    </div>




                </div>

                <div class="modal-body">
                    <div class="centercontent" id="content1" style="display:unset">
                        <div class="heart"><img id="progress1" src="~/images/novasaydam.png" style="max-width:15vw;display:none" /></div>
                    </div>
                    <div class="row w-100">
                        <div class="col text-center">
                            <input placeholder="Dağıtılacak Miktar" class="form-control text-center" type="number" id="hesapInput" onkeyup="hesaplaKeyUp(this.value)">
                        </div>

                    </div>



                </div>

                <div class="modal-footer" style="display:flex;justify-content:center;align-items:center;">
                    <button class="btn btn-primary" id="ModalSaveButton2" type="button" onclick="Hesapla()">HESAPLA</button>
                    <button class="btn btn-danger" type="button" onclick="ModalKapat4()">KAPAT</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="HurdaModal" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="SiparisModalLabel" aria-hidden="true" ">

        <div class="modal-dialog modal-sm modal-dialog-scrollable" style="max-width: 50%;top:20vh">
            <div class="modal-content" style="max-height:45vh;">
                <div class="container-fluid mt-3">
                    <div class="centercontent" id="content7" style="display:unset">
                        <div class="heart"><img id="progress7" src="/images/novasaydam.png" style="max-width:15vw;display:none" /></div>
                    </div>
                    <div class="row text-center mt-1">
                        <div class="col">
                            <label class="modal-title" id="HurdaLabel" style="font-weight:bold">HURDA</label>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col">

                            <input placeholder="Miktar 1" class="form-control text-center" type="number" id="hurdamiktar1">


                        </div>
                        <div class="col" id="hurdamiktar2div">


                            <input class="form-control text-center" placeholder="Miktar 2" type="number" id="hurdamiktar2">

                        </div>
                    </div>


                    <div class="modal-footer mt-1" style="display:flex;justify-content:center;align-items:center;">
                        <button class="btn btn-primary" id="ModalSaveButton" type="button" onclick="HurdaKaliteKayit()">KAYDET</button>
                        <button class="btn btn-danger" type="button" onclick="HurdaModalKapat()">KAPAT</button>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="modal fade" id="PDFModal" aria-labelledby="PDFModal" data-bs-backdrop="static" aria-hidden="true" onclick="modalclick()">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content" style="min-height:70vh;max-height:70vh;">
                <div class="modal-body" id="PDFModalContent">
                    <div id="pdf_container"></div>
                </div>

                <div class="modal-footer mt-1" style="display:flex;justify-content:space-between;align-items:center;">
                    <select id="etiket-onizle-yazici" class="form-select" style="width: 50%;"></select>
                    <div>
                        <button class="btn btn-primary" id="etiket-onizle-yazdir" type="button" onclick="EtiketYazdir()">YAZDIR</button>
                        <button class="btn btn-danger" type="button" onclick="OnizlemeKapat()">KAPAT</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="QRModal" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="SiparisModalLabel" style="height: max-content;" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" style="max-width: 90% !important">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="BarkodModalLabel">BARKOD OKUYUCU</h5>
                    <button disabled type="button" id="qrClose" class="btn-close" onclick="qrmodalclose()" aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex justify-content-center align-items-center overflow-hidden">
                    <div class="vidparticipant">
                        <select class="form-select mb-1" id="cameras1" style="width:200px;display:none"></select>
                        <video id="qr-readerr" class="object-fit-fill">
                        </video>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="IsEmirleri" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="SiparisModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-scrollable" style="max-width: 80% !important;top:10vh">
            <div class="modal-content" style="max-height:80vh;">
                <div class="modal-header">
                    <div class="row w-100 text-center">

                        <div class="col-sm">
                            <h3 id="sarfTitle">
                                İş Emirleri
                            </h3>
                        </div>
                    </div>
                </div>

                <div class="modal-body">
                    <div class="centercontent" id="content5" style="display:unset">
                        <div class="heart"><img id="progress55" src="~/images/novasaydam.png" style="max-width:15vw;display:none" /></div>
                    </div>
                    <div id="toolbar">
                        <div class="row">
                            <div class="col-sm">
                                <label class="text-nowrap"><b>HAMMADDE TOPLAM MİKTAR: </b><span id="topmik"></span></label>
                            </div>
                            <div class="col-sm-4">
                                <input onfocus="inputclick()" onkeyup="eksikChange(this)" placeholder="HAMMADDE KALAN MIKTAR" class="form-control text-center" type="number" style="width:300px" id="eksikmiktar1">
                            </div>
                            <div class="col-sm">
                                <button type="button" id="guncelleButton" class="btn btn-primary ms-5" onclick="eksikguncelle(this)" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-html="true" title="Kalan hammadde miktarından hesaplanan </br> hammadde sarf miktarına göre iş emri sarf miktarlarının güncellenmesini sağlar.">GÜNCELLE</button>
                            </div>
                        </div>

                    </div>
                    <table id="isemriTable"
                           class="table"
                           data-buttons-order="['filterTable','columns']"
                           data-toggle="table"
                           data-export-types="['excel']"
                           data-pagination="true"
                           data-toolbar="#toolbar"
                           data-page-size="100"
                           data-search="true"
                           data-locale="tr-TR"
                           data-filter-control="true"
                           data-filter-control-multiple-search="true"
                           data-mobile-responsive="true"
                           data-show-footer="false"
                           data-loading-template="loadingTemplate">
                        <thead>
                            <tr>
                                <th data-field="ISEMRINO" data-halign="center" data-align="center" data-sortable="true">İş Emri No</th>
                                <th data-field="SERINO" data-halign="center" data-align="center" data-sortable="true">Seri No</th>
                                <th data-field="SERINO2" data-halign="center" data-align="center" data-sortable="true">Seri No 2</th>
                                <th data-field="REFISEMRINO" data-halign="center" data-align="center" data-sortable="true">Ref No</th>
                                <th data-field="HAM_SARF" data-halign="center" data-align="center" data-sortable="true">Ham Sarf</th>
                            </tr>
                        </thead>
                    </table>


                </div>
                <div class="modal-footer" style="display:flex;justify-content:center;align-items:center;">
                    <button class="btn btn-danger" type="button" onclick="ModalKapat3()">KAPAT</button>
                </div>
            </div>
        </div>
    </div>
    <script>
        function qrmodalclose() {
            $("#QRModal").modal("hide");
            $("#qrClose").prop('disabled', true);
            scanner.stop();
            change(2);
        }
        var lastResult1 = 0;
        function eksikguncelle(value) {
            var seri = value.dataset.seri;
            var miktar = value.dataset.eksik;
            var sum = 0;
            var s = 0;
            $.getJSON("http://192.168.2.13:83/api/ie/SARF/" + seri + "/" + miktar, function (data) {
                for (let i = 0; i < data.length; i++) {
                    sum = sum + data[i].SARF;
                }
                s=(data[0].HES_SARF-sum)+parseInt(miktar)
            }).done(function () {
                Swal.fire({
                    title: '',
                    icon:'warning',
                    html: 'Sarf miktarları ondalıklı olamayacağından hammadde kalan miktarı <b>' + s + ' KG</b> olarak güncellenecektir</br> İş emirleri sarf miktarları toplam miktar <b>' + sum + ' KG</b> olacak şekilde güncellenecektir. Devam etmek istiyormusunuz?',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Devam',
                cancelButtonText: 'İptal',
                showClass: {
                    popup: 'pop2 animate__animated animate__zoomIn'
                },
                hideClass: {
                    popup: 'pop2 animate__animated animate__zoomOut'
                }
            }).then((result) => {

                if (result.isConfirmed) {
            document.getElementById("progress55").removeAttribute("style");
            document.getElementById("progress55").setAttribute("style", "max-width:15vw;display:unset");


                $.ajax({
                            url: '@Url.Action("EksikGuncelle", "Uretim")',
                            type: 'POST',
                            data: { "seri":seri,"miktar":parseInt(miktar)},
                            error: function (data) {
                                alert(JSON.stringify(data));
                                document.getElementById("progress55").removeAttribute("style");
                                document.getElementById("progress55").setAttribute("style", "max-width:15vw;display:none");
                            },
                            success: function (data) {
                                document.getElementById("progress55").removeAttribute("style");
                                document.getElementById("progress55").setAttribute("style", "max-width:15vw;display:none");
                                $.getJSON("http://192.168.2.13:83/api/ie/SARFHESAP/" + seri, function (data) {
                                    var yuvarlanan = data[0].YUVARLANAN;
                                    var sarf = data[0].SARF;
                                    Swal.fire(
                                        'Başarılı!',
                                        'Sarf miktarları ondalıklı olamayacağından hammadde kalan miktarı <b>' + yuvarlanan + ' KG</b> olarak güncellendi.</br> İş emirleri sarf miktarları toplam miktar <b>' + sarf + ' KG</b> olacak şekilde güncellendi.',
                                        'success'
                                    )
                                })
                                $("#isemriTable").bootstrapTable("destroy").bootstrapTable({
                                    url: "http://192.168.2.13:83/api/ie/isemrileri/" +seri
                                })
                                $("#eksikmiktar1").val(null);
                                document.getElementById(btnid).onclick();
                            }
                        })
                }
            })
            })




        }
        function MiktarFormatter(value, index, row) {
            return value.toLocaleString();
        }
        function eksikChange(e) {
            $("#guncelleButton").attr("data-eksik", e.value);
            if (e.value > parseFloat(e.dataset.max)) {
                e.value = e.dataset.max
            }
        }
        var html5QrcodeScanner1 = null;
        var scanner = null;
        function BarkodModal() {
            $('#BekleyenIsEmirleriTablo').hide();
            $('.iefiltre').hide();

            $("#QRModal").modal("show");
            scanner= new Instascan.Scanner({ video: document.getElementById('qr-readerr'), mirror: false, refractoryPeriod: 2000 });
            scanner.addListener('scan', function (decodedText)  {
                $("#isemriTable").bootstrapTable("destroy").bootstrapTable({
                    url: "http://192.168.2.13:83/api/ie/isemrileri/" + decodedText
                })

                $("#QRModal").modal("hide");
                scanner.stop();
                $("#IsEmirleri").modal("show");
                $("#sarfTitle").html(decodedText + " Barkodlu Hammaddeye Bağlı İş Emirleri")
                $.getJSON("http://192.168.2.13:83/api/ie/top/isemrileri/" + decodedText, function (data) {
                    $("#topmik").html(data[0].SERI_BAKIYE.toLocaleString() + " " + data[0].OLCU_BR1)
                    var eksik = data[0].SERI_BAKIYE;
                    $("#eksikmiktar1").attr("data-max", eksik)
                })

                $("#guncelleButton").attr("data-seri", decodedText);
            })
            Instascan.Camera.getCameras().then(function (cameras, image) {
                //PC'de ki tüm kameraları algılayarak bizlere getirecektir.
                $('#cameras1').html('');
                $('#cameras1').css('display', cameras.length > 1 ? 'block' : 'none');

                for (let i = 0; i < cameras.length; i++) {
                    let cameraList = document.getElementById("cameras1");
                    let option = document.createElement("option");
                    if (i == 0) {

                        option.text = "Ön Kamera";
                        option.value = cameras[i].id;
                    } else {
                        option.text = "Arka Kamera";
                        option.value = cameras[i].id;
                    }
                    cameraList.add(option);
                }
                if (cameras.length > 0) {
                    scanner.start(cameras[0]).then(function () {
                        $("#qrClose").prop('disabled', false);
                    })
                }

            })

            $('#BekleyenIsEmirleriTable').bootstrapTable('destroy');
            $('#BekleyenIsEmirleriTable').bootstrapTable({ data: [] });
        }
        function ModalKapat3() {

            $("#IsEmirleri").modal('hide');


            constant = 0;

        }
        function uretimGroupChange(value) {
            switch (value) {
                case '0':
                    $("#miktar11").val(null);
                    $("#miktar22").val(null);
                    $('#miktar11').prop('disabled', false);
                    $('#miktar22').prop('disabled', true);
                    $('#miktar22').attr('onkeyup', 'keychange2()');
                    $('#ModalSaveButton').attr('onclick', 'ModalKaydet()')
                    $("#etiketyazdir").prop('disabled', false);
                    $("#etiket-onizleme").prop('disabled', false);
                    $("#etiket-onizleme").prop('checked', false);
                    break;
                case '1':
                    $("#miktar11").val(null);
                    $("#miktar22").val(null);
                    $('#miktar11').prop('disabled', true);
                    $('#miktar22').prop('disabled', false);
                    $('#miktar22').removeAttr('onkeyup');
                    $('#miktar22').attr('onkeyup', 'ikinciKaliteKeyUp()')
                    $('#ModalSaveButton').attr('onclick', 'ikinciKaliteKaydet(\'ikinci\')')
                    $("#etiketyazdir").prop('disabled', true);
                    $("#etiketyazdir").prop('checked', true);
                    $("#etiket-onizleme").prop('disabled', true);
                    $("#etiket-onizleme").prop('checked', false);
                    break;
                case '2':
                    $("#miktar11").val(null);
                    $("#miktar22").val(null);
                    $('#miktar11').prop('disabled', true);
                    $('#miktar22').prop('disabled', false);
                    $('#miktar22').removeAttr('onkeyup');
                    $('#miktar22').attr('onkeyup', 'ikinciKaliteKeyUp()')
                    $('#ModalSaveButton').attr('onclick', 'ikinciKaliteKaydet(\'hurda\')')
                    $("#etiketyazdir").prop('disabled', true);
                    $("#etiketyazdir").prop('checked', true);
                    $("#etiket-onizleme").prop('disabled', true);
                    $("#etiket-onizleme").prop('checked', false);
                    break;
            }
        }
        function ikinciKaliteKeyUp() {
            var m2 = $('#miktar22').val();
            if (m2 != null && m2 != '') {
                $.getJSON("http://192.168.2.13:83/api/ie/ikinci/" + hat + "/" + stok + "/0/" + m2 + "/0", function (data) {
                    if (data.length<2) {
                        $('#miktar11').val(data[0].KULL_MIKTAR)
                    } else {
                        var sum = 0;
                        for (let i = 0; i < data.length; i++) {
                            sum += data[i].KULL_MIKTAR
                        }
                        $('#miktar11').val(sum)
                    }
                    $('#ModalSaveButton').prop("disabled", false);
                })
            } else {
                $('#miktar11').val(null)
                $('#ModalSaveButton').prop("disabled", true);
            }

        }
        function ikinciKaliteKaydet(e) {
            ShowProgress();
            var stokadi = $('#SiparisModalLabel').html().substring(3, $('#SiparisModalLabel').html().length - 4);
            $.ajax({
     url: '@Url.Action("IkinciKalite", "Uretim")',
     type: 'POST',
                data: { "hatkodu": hat, "stokkodu": stok, "genislik": (genislik == "null" ? null : genislik.toString().trim()), "mik1": $("#miktar11").val().toString().trim(), "mik2": $("#miktar22").val().toString().trim(), "stokadi": stokadi, "tip": e,"uretimSonuKaydindanMi":false},
     error: function (data) {
         console.log(data);
         HideProgress();
         $("#SiparisModal").modal('hide');
     },
     success: function (data) {
         HideProgress();
         $("#SiparisModal").modal('hide');
         playOnay()
         Swal.fire('Başarılı!', 'Kayıt başarılı', 'success');
         document.getElementById(btnid).onclick();
     }
 })
        }
        function ResetControl() {
            uretimControl = "";
            $("#TP01").prop("checked", false);
        }


        function HurdaLoop(miktar) {
            var Tip = $('input[name="btnradio btn-makineler"]:checked').val();
            $.getJSON("http://192.168.2.13:83/api/uretim/" + Tip, function (data) {
                if (data.length > 0) {
                    var m = data[0].MIKTAR
                    if (miktar <= m) {
                        $.ajax({
                            url: '@Url.Action("Hurda", "Uretim")',
                            type: 'POST',
                            data: { "hatkodu": Tip, "mik1": miktar, "stokkodu": data[0].STOK_KODU },
                            error: function (data) {
                                console.log(data);
                                HideProgress();
                                $("#SiparisModal").modal('hide');
                            },
                            success: function (data) {
                                if (data == "BAŞARILI") {
                                    HideProgress();
                                    $("#SiparisModal").modal('hide');
                                    playOnay()
                                    Swal.fire('Başarılı!', 'Kayıt başarılı', 'success');
                                    document.getElementById(btnid).onclick();
                                    HurdaModalKapat()
                                } else {
                                    HideProgress();
                                    $("#SiparisModal").modal('hide');
                                    playHata1()
                                    Swal.fire('Başarısız!', data, 'error');
                                    document.getElementById(btnid).onclick();
                                    HurdaModalKapat()
                                }

                            }
                        })
                    } else {
                        $.getJSON("http://192.168.2.13:83/api/uretim/" + Tip, function (data) {
                            if (data.length > 0) {
                                var m = data[0].MIKTAR
                                if (miktar <= m) {
                                    $.ajax({
                                        url: '@Url.Action("Hurda", "Uretim")',
                                        type: 'POST',
                                        data: { "hatkodu": Tip, "mik1": m, "stokkodu": data[0].STOK_KODU },
                                        error: function (data) {
                                            console.log(data);
                                            HideProgress();
                                            $("#SiparisModal").modal('hide');
                                        },
                                        success: function (data) {
                                            miktar = miktar - m
                                            if (miktar > 0) {
                                                HurdaLoop(miktar);
                                            } else {
                                                HideProgress();
                                                $("#SiparisModal").modal('hide');
                                                playOnay()
                                                Swal.fire('Başarılı!', 'Kayıt başarılı', 'success');
                                                document.getElementById(btnid).onclick();
                                                HurdaModalKapat()
                                            }
                                        }
                                    })

                                }

                            }

                        })
                    }

                }

            })
        }

        function HurdaKaliteKayit() {
            var miktar = $('#hurdamiktar1').val();

            if (miktar.length > 0) {
                ShowProgress();
                var url = "";

                var mak = $('input[name="btnradio btn-makineler"]:checked').val();
                var Tip = $('#HurdaLabel').html();
                var is = "";
                if (Tip == "HURDA") {
                    url = "//192.168.2.13:83/api/ie/USK/"+mak+"/HURDA/"+mak+"23000001001/" + miktar + "/0/0";
                    is = mak+'23000001001'
                } else {
                    url = "//192.168.2.13:83/api/ie/USK/"+mak+"/IKINCIKALITE/"+mak+"23000001002/" + miktar + "/0/0";
                    is = mak+'23000001002'
                }
                $.getJSON(url, function (data) {
                    var d = data;

                    $.ajax({
                        url: '@Url.Action("TrpzUretim", "Uretim")',
                        type: 'POST',
                        data: { "stokkodu": mak, "ISEMRINO": is, "SERI_NO": d[0].SERI_NO, "KULL_MIKTAR": d[0].KULL_MIKTAR, "mik2": d[0].KULL_MIKTAR2, "kontrol": false },
                        error: function (data) {

                            HideProgress();
                            $("#SiparisModal").modal('hide');
                            playHata1()
                            Swal.fire('Başarısız!', 'Kayıt başarısız,tekrar deneyin', 'error');
                        },
                        success: function (data) {
                            if (d[0].KULL_MIKTAR != 0) {
                                HurdaKaliteKayit();
                            }
                            else {
                                HideProgress();
                                $("#HurdaModal").modal('hide');
                                if (data.substring(0, 4) != 'Hata') {
                                    playOnay()
                                    Swal.fire('Başarılı!', 'Kayıt başarılı', 'success');
                                } else {
                                    playHata1()
                                    Swal.fire('Başarısız!', data, 'error');
                                }


                                document.getElementById(btnid).onclick();
                            }
                        }
                    });
                });



            } else {
                Swal.fire('Uyarı!', 'Miktar girilmedi!', 'warning');
            }

        }
        function keychangeikinci() {
            var m1 = $("#miktar11").val();
            var m2 = $("#miktar22").val();

            var ikinci2 = $("#ikincimik2").val();
            if (ikinci2.length > 0) {
                $("#ikincimik1").val(Math.round((m1 / m2) * ikinci2)).prop("disabled",false);

            } else {
                $("#ikincimik1").val(null).prop("disabled",true);
            }
            keychangeikinci1();

        }
        function keychangeikinci1() {
            var m1 = $("#ikincimik1").val();
            var m2 = $("#ikincimik2").val();
            var olculer = $("#SiparisModalLabel2").html();

            if (m2.length > 0) {
                if (hat != 'PB01' && hat != 'PB02') {
                    var olcu1 = olculer.split("||")[0].split(" ")[3];
                    var olcu2 = olculer.split("||")[1].split(" ")[2];
                    $("#BirimMik2").html((m1 / m2).toLocaleString(undefined, {
                        maximumFractionDigits: 2
                    }) + " " + olcu1 + " / " + olcu2)
                } else {
                    $("#BirimMik2").html((m1 / m2).toLocaleString(undefined, {
                        maximumFractionDigits: 2
                    }))
                }
            } else { $("#BirimMik2").html(" - ") }



            }


        //function pdfOpen(d) {
        //    let byteCharacters = atob(d);0
        //    let byteNumbers = new Array(byteCharacters.length);
        //    for (let i = 0; i < byteCharacters.length; i++) {
        //        byteNumbers[i] = byteCharacters.charCodeAt(i);
        //    }
        //    let byteArray = new Uint8Array(byteNumbers);
        //    let file = new Blob([byteArray], { type: 'application/pdf;base64' });
        //    let fileURL = URL.createObjectURL(file);
        //    window.open(fileURL);
        //}


        function UretimeAl() {
            var hat = $('input[name="makine-ie"]:checked').val();
            var seri = $('#filter').val();

            if (seri != null) {
                Swal.fire({
                    title: "UYARI",
                    html: seri + ' nolu hammaddenin girişini yapmak istediğinizden emin misiniz?',
                    icon: 'warning',
                    showCancelButton: true,
                    cancelButtonText: 'HAYIR',
                    cancelButtonColor: '#d33',
                    confirmButtonColor: '#3085d6',
                    allowEnterKey: false,
                    confirmButtonText: 'EVET',
                    allowOutsideClick: false
                }).then((result) => {
                    if (result.isConfirmed) {
                        ShowProgress();
                        $('#isemirlerinikapatbtn').hide();
                        var serino = $('#filter').val();
                        $.ajax({
                            url: 'http://192.168.2.13:83/api/seri/manuelgir/' + hat + '/' + seri + '/' +@Request.Cookies["Id"].Value,
                            type: 'GET',
                            data: {},
                            error: function (data) { alert(JSON.stringify(data)); },
                            success: function (data) {
                                if (data == "Başarılı") {
                                    playOnay()
                                    Swal.fire('Başarılı!', 'Kayıt başarılı', 'success');
                                } else {
                                    playHata1()
                                    Swal.fire('Başarısız!', data, 'error');
                                }
                                HideProgress();

                                $('input[name="makine-ie"]:checked').trigger('click');
                            }
                        })

                    }
                });

            } else {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'center',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'info',
                    title: 'Seri seçmediniz.'
                });
            }


        }
        function silFormatter(value, index, row) {
            if (index.ORAN == 0) {
                return '<div style="display: flex; justify-content: center; align-items: center;"><button type="button" id="SilButton" onclick="Sil(\'' + index.SERI_NO + '\')" class="btn btn-danger" style="height:28px;width: 85.77px; display: flex; justify-content: center; align-items: center;margin-right:5px">SİL</button></div>';
            } else {
                return '<div style="display: flex; justify-content: center; align-items: center;"><button type="button" id="aktarButton" onclick="Onay(\'' + index.SERI_NO + '\',\'' + index.SERI_BAKIYE + '\')" class="btn btn-warning" style="height:28px;width: auto; display: ' + (index.ORAN == 100 || index.ORAN == 0 ? 'none' : 'flex') + '; justify-content: center; align-items: center;margin-right:5px">HURDA</button><button type="button" id="testButton" onclick="Ambar(\'' + index.SERI_NO + '\',\'' + index.SERI_BAKIYE + '\')" class="btn btn-info" style="height:28px;width: auto; display: ' + (index.ORAN == 100 || index.ORAN == 0 ? 'none' : 'flex') +'; justify-content: center; align-items: center;margin-right:5px">AMBAR</button></div>';
            }

        }
        function Sil(value) {
            Swal.fire({
                title: "UYARI",
                html: value + ' nolu hammaddeyi silmek istediğinize emin misiniz?',
                icon: 'warning',
                showCancelButton: true,
                cancelButtonText: 'HAYIR',
                cancelButtonColor: '#d33',
                confirmButtonColor: '#3085d6',
                allowEnterKey: false,
                confirmButtonText: 'EVET',
                allowOutsideClick: false
            }).then((result) => {
                if (result.isConfirmed) {
                    ShowProgress();
                    $('#isemirlerinikapatbtn').hide();
                    var serino = $('#filter').val();
                    $.ajax({
                        url: 'http://192.168.2.13:83/api/seri/manuelsil/'+value,
                        type: 'GET',
                        data: {},
                        error: function (data) { alert(JSON.stringify(data)); },
                        success: function (data) {
                            if (data == "Başarılı") {
                                playOnay()
                                Swal.fire('Başarılı!', 'Silme işlemi tamamlandı', 'success');
                            } else {
                                playHata1()
                                Swal.fire('Başarısız!', data, 'error');
                            }
                            HideProgress();

                            $('input[name="makine-ie"]:checked').trigger('click');
                        }
                    })

                }
            });

        }
    </script>



    <!--Üretime Al-->
    <div class="modal fade" id="uretime-al-QRModal" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="SiparisModalLabel" style="height: max-content;" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" style="max-width: 90% !important;">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="BarkodModalLabel">BARKOD OKUYUCU</h5>

                    <input type="checkbox" class="btn-check" id="TP01-uretim-barkod" autocomplete="off">
                    <label class="btn btn-outline-primary mx-3" for="TP01-uretim-barkod">TP01</label>

                    <button type="button" class="btn-close" id="QrScannerClose" onclick="UretimeAlQrScannerClose()" disabled aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex justify-content-center align-items-center overflow-hidden pt-0">

                    <div class="vidparticipant">
                        <span id="uretime-al-bildirim" style="display: none;justify-content: center;align-items: center;width: 100%;height: 100%;">.</span>
                        <select class="form-select mb-1" id="cameras" style="width:200px;display:none"></select>
                        <video id="qr-reader1" class="object-fit-fill">
                        </video>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <style>
        .vidparticipant {
            height: 600px;
            max-width: 100%;
            overflow: hidden;
        }

        video {
            height: 100%;
            width: 100%;
        }

            video.object-fit-fill {
                object-fit: cover;
            }
    </style>

    <script>
        var uretimControl = '';

        $("#TP01-uretim-barkod").change(function () {
            if ($(this).is(':checked')) {
                uretimControl = 'TP01';
            }
            else {
                uretimControl = '';
            }
        });

        function UretimeAlQrScanner() {
            $('#uretime-al-QRModal').modal('show');

        }

        function UretimeAlQrScannerClose() {
            $('#uretime-al-QRModal').modal('hide');
            html5QrcodeScanner.stop();

            $('#QrScannerClose').prop('disabled', true);

            if (html5QrcodeScanner1 != null) {
                html5QrcodeScanner1.clear();
                html5QrcodeScanner1 = null;
            }
        }


        function yazdirchange() {
            var check = $('#etiketyazdir:checked').val()
            if (check) {
                if (localStorage.getItem("yazici") == undefined || localStorage.getItem("yazici") == null || localStorage.getItem("yazici") == 'null') {
                    localStorage.setItem("yazici", $('#yazici').val());
                }
                else {
                    $('#yazici').val(localStorage.getItem("yazici"));
                    $('#yazici').trigger('change');
                }
                $('#yazici').next(".select2-container").show();
            } else {

                $('#yazici').next(".select2-container").hide();
            }
        }

        function YaziciOnChange() {
            localStorage.setItem("yazici", $('#yazici').val());
        }
    </script>

    <!--Üretime Al Son-->
    <!--Üretilmis Barkodlar-->
    <script>
        function hesaplaKeyUp(value) {
            if (value > maxrulo) {
                $('#hesapInput').val(maxrulo);
            }
        }
    var UretilmisBarkodlar = [];
    var SecilenBarkodlar = [];
    var SecilenBarkodLimiti = 50;

    $(document).ready(() =>
    {


        $('#pageName').html('<div class="dot"></div> Üretim Kayıtları')
        $('#uretilmis-barkod-dizayn').select2({ language: 'tr' });
    });

    function MakineListeleUE() {
        $.getJSON("http://192.168.2.13:83/api/makine/makineler", (data) => {
            var Makineler = `<div class="btn-group" style="grid-template-columns: repeat( auto-fit, minmax(80px, 1fr) );display:grid;grid-gap: 0.25rem 0;" role="group" aria-label="Basic radio toggle button group">`;

            for (var i = 0; i < data.length; i++) {
                var MachineType = data[i].HAT_KODU.substring(0, 2).toLowerCase();

                if (MachineType != "sm") {
                    Makineler += `<input type="radio" class="btn-check" name="makine-ie-uretilmis" id="${data[i].HAT_KODU}" onclick="UretilmisEtiketleriGetir(this.value)" value="${data[i].HAT_KODU}" autocomplete="off"><label class="btn btn-outline-primary" for="${data[i].HAT_KODU}">${data[i].HAT_KODU}</label>`;
                }
            }

            Makineler += `<input type="radio" class="btn-check" name="makine-ie-uretilmis" checked id="uretilmis-barkod-all" onclick="UretilmisEtiketleriGetir(this.value)" value="all" autocomplete="off"><label class="btn btn-outline-primary" for="uretilmis-barkod-all">TÜMÜ</label>`;
            UretilmisEtiketleriGetir("all");

            $('#uretilmis-barkod-makineler').html(Makineler + `</div>`);
        });
    }

    function UretilmisEtiketleriGetir(Makine)
    {
        $('#uretilmis-barkod-dizayn').html('');
        $('#uretilmis-barkod-dizayn').append(new Option('Üretim', 'Uretim'));
        $('#uretilmis-barkod-dizayn').append(new Option('Sevkiyat', 'Sevkiyat'));
        $('#uretilmis-barkod-dizayn').append(new Option('DL01 Üretim', 'DL01Uretim'));

        $.ajax({
            url: 'http://192.168.2.13:83/api/seri/serirehbertumu',
            type: 'GET',
            error: () => { console.log(`Üretilmiş Barkod Getir: Hata oluştu.`); },
            success: (Response) =>
            {
                UretilmisBarkodlar = Response ?? [];

                if (Response.length > 0) {
                    var Data = (Makine == "all") ? Response : Response.filter(x => x.MAKINE == Makine);

                    $('#UretilmisBarkodlarTablo').bootstrapTable("destroy");
                    $('#UretilmisBarkodlarTablo').bootstrapTable({ data: Data })
                }
            }
        });

        $.ajax({
            url: 'http://192.168.2.13:83/api/printers/list',
            type: 'GET',
            error: (e) => { console.error(`Yazıcı Listesi Hata: ${e}`); },
            success: (response) => {
                $('#uretilmis-barkod-yazici').select2({ language: "tr", minimumResultsForSearch: 50 });

                $('#uretilmis-barkod-yazici').html('');

                response?.forEach((item) => {
                    $('#uretilmis-barkod-yazici').append(new Option(item.PRINTER_NAME, item.PRINTER_NAME));
                });
            },
        }).then(() => {
            $('#UretilmisBarkodlar').show();
        });
    }

    function UretilmisBarkodFormatter(value, row, index) {

        if (SecilenBarkodlar.includes(row.SERI_NO))
        {
            return `<div onclick="UretilmisBarkodSec('${row.SERI_NO}', this)"><i class="bi bi-check-circle-fill"  style="cursor:pointer;color:#71dd37;font-size:x-large;"></i></div>`;
        }
        else
        {
            return `<div onclick="UretilmisBarkodSec('${row.SERI_NO}', this)"><i class="bi bi-check-circle"  style="cursor:pointer;color:red;font-size:x-large;"></i></div>`;
        }
    }

    function UretilmisBarkodSec(BarkodNo, Button)
    {
        var Ikon = Button.getElementsByTagName('i')[0];

        if (SecilenBarkodlar.includes(BarkodNo))
        {
            SecilenBarkodlar = SecilenBarkodlar.filter(item => item !== BarkodNo);

            Ikon.style.color = 'red';
            Ikon.classList.remove("bi-check-circle-fill");
            Ikon.classList.add("bi-check-circle");
        }
        else
        {
            if (SecilenBarkodlar.length < SecilenBarkodLimiti)
            {
                SecilenBarkodlar.push(BarkodNo);

                Ikon.style.color = '#71dd37';
                Ikon.classList.add("bi-check-circle-fill");
                Ikon.classList.remove("bi-check-circle");
            }
            else
            {
                Swal.fire('Uyarı!', `En fazla ${SecilenBarkodLimiti} adet barkod seçebilirsiniz.`, 'warning');
            }
        }

        $('#uretilmis-barkod-yazdir').prop('disabled', SecilenBarkodlar.length < 1 ? true : false);
    }


    function UretilmisEtiketleriYazdir()
{
    if (SecilenBarkodlar.length > 0)
    {
        ShowProgress();

        document.body.style.pointerEvents = 'none';

        var EtiketDizayn = $('#uretilmis-barkod-dizayn').val();
        var Yazici = $("#uretilmis-barkod-yazici").val();
        var DirektYazdir = $('#yazdirSwitch').is(':checked');

        var Data = { "BarkodListesi": SecilenBarkodlar.sort(), "EtiketDizayn": EtiketDizayn, "DirektYazdir": DirektYazdir, "Yazici": Yazici, "Onizle": !DirektYazdir };

        $.ajax({
            url: '@Url.Action("UretilmisEtiketleriYazdir", "Uretim")',
            type: 'POST',
            data: Data,
            error: (e) => {console.log(`Üretilmiş Barkod Yazdır: Hata oluştu.`); },
            success: (Response) =>
            {
                if (!DirektYazdir) {
                    UretilmisEtiketOnizle(Response);
                }



                if (Response.substring(0, 4) == "HATA") {
                    playHata1();

                    Swal.fire('Yazdırma başarısız, üretilmiş barkodlar alanından tekrar deneyiniz!', Response, 'error');
                }
            }
        }).then(() => {
            document.body.style.pointerEvents = 'auto';
            HideProgress();
        });

        $('#uretilmis-barkod-yazdir').prop('disabled', SecilenBarkodlar.length < 1 ? true : false);

        $('#UretilmisBarkodlarTablo').bootstrapTable('toggleView');
        $('#UretilmisBarkodlarTablo').bootstrapTable('toggleView');
    }
}

    function UretilmisEtiketOnizle(data)
    {
        var EtiketDizayn = $('#uretilmis-barkod-dizayn').val();

        $('#pdf_container').html('');
        LoadPdfFromUrl(`/Outputs/Labels/${EtiketDizayn == "Uretim" ? "Production" : "Shipment"}/${data}`);

        $.ajax({
            url: 'http://192.168.2.13:83/api/printers/list',
            type: 'GET',
            error: (e) => { console.error(`Yazıcı Listesi Hata: ${e}`); },
            success: (response) => {
                $('#etiket-onizle-yazici').select2({ language: "tr", minimumResultsForSearch: 50 });

                $('#etiket-onizle-yazici').html('');

                response?.forEach((item) => {
                    $('#etiket-onizle-yazici').append(new Option(item.PRINTER_NAME, item.PRINTER_NAME));
                });
            },
        }).then(() => {
            $('#PDFModal').modal('show');
            HideProgress();
        });
        }

    function OnizlemeKapat() {
        SecilenBarkodlar = [];
        document.body.style.pointerEvents = 'auto';
        $('#PDFModal').modal('hide');
        $('#UretilmisBarkodlarTablo').bootstrapTable('toggleView');
        $('#UretilmisBarkodlarTablo').bootstrapTable('toggleView');
    }

    function EtiketYazdir() {
        ShowProgress();

        var EtiketDizayn = $('#uretilmis-barkod-dizayn').val();
        $.ajax({
            url: '@Url.Action("UretilmisEtiketleriYazdir", "Uretim")',
            type: 'POST',
            data: {
                "BarkodListesi": SecilenBarkodlar,
                "EtiketDizayn": EtiketDizayn,
                "Yazici": $('#etiket-onizle-yazici').val(),
                "DirektYazdir": true,
                "Onizle": false
            },
            error: (e) => { console.log(JSON.stringify(e)); },
            success: (response) => {


                if (response.substring(0, 4) == "HATA") {
                    playHata1();

                    Swal.fire('Yazdırma başarısız, üretilmiş barkodlar alanından tekrar deneyiniz!', response, 'error');
                }
            }
        }).then(() => {
            SecilenBarkodlar = [];
            document.body.style.pointerEvents = 'auto';
            $('#PDFModal').modal('hide');
            $('#UretilmisBarkodlarTablo').bootstrapTable('toggleView');
            $('#UretilmisBarkodlarTablo').bootstrapTable('toggleView');
            HideProgress();
        });
    }

    function isBase64(str) {
        if (str === '' || str.trim() === '') { return false; }
        try {
            return btoa(atob(str)) == str;
        } catch (err) {
            return false;
        }
    }

    function YazdirSwitch() {
        Yazdir = $('#yazdirSwitch').is(':checked');

        $("#uretilmis-barkod-yazici").prop("disabled", !Yazdir);

        $('#uretilmis-barkod-yazdir').text(Yazdir ? "YAZDIR" : "ÖNİZLE");

        if (!Yazdir) {
            $('#yazdirLabel').removeClass('fadeInAnimasyon');
            $('#yazdirmaLabel').removeClass('fadeOutAnimasyon');

            $('#yazdirLabel').addClass('fadeOutAnimasyon');
            $('#yazdirmaLabel').addClass('fadeInAnimasyon');
        }
        else {
            $('#yazdirLabel').removeClass('fadeOutAnimasyon');
            $('#yazdirmaLabel').removeClass('fadeInAnimasyon');

            $('#yazdirLabel').addClass('fadeInAnimasyon');
            $('#yazdirmaLabel').addClass('fadeOutAnimasyon');
        }
    }
    </script>

    <style>
        @@-webkit-keyframes FadeIn {
            from {
                opacity: 0;
            }

            to {
                opacity: 1;
            }
        }

        @@-webkit-keyframes FadeOut {
            from {
                opacity: 1;
            }

            to {
                opacity: 0;
            }
        }

        .fadeInAnimasyon {
            animation: FadeIn 0.2s ease 0s 1 normal forwards;
        }

        .fadeOutAnimasyon {
            animation: FadeOut 0.2s ease 0s 1 normal forwards;
        }

        @@media (max-width: 562px) {
            #yazdirmaLabel, #yazdirLabel {
                top: 30% !important;
            }
        }
    </style>
    <!--Üretilmis Barkodlar Son-->
    <!-- Deneysel Scanner -->
    <div class="qr-scanner-area">
        <video id="qr-scanner"></video>
        <div class="qr-controls">
            <div class="d-flex justify-content-center align-items-center gap-2">
                <select class="qr-camera-select"></select>
                <button id="TP01ModeButton" onclick="ToggleTP01Mode()">TP01</button>
            </div>
            <i class='bx bx-x qr-scanner-exit' onclick="Close()"></i>

            <span id="qr-box-information">TP01 MODU AKTİF</span>
        </div>
        <div class="qr-scanner-loader" style="position: absolute; background: #00000080; left: 0; right: 0; bottom: 0; top: 0; z-index: 9999999;display:flex; justify-content: center; align-items: center; flex-direction: column;">
            <div class="heart"><img id="progress" src="~/images/novasaydam.png" width="400" /></div>
        </div>
    </div>


    <style>
        .qr-scanner-area {
            display: none;
            position: relative;
            width: 100%;
            height: 100%;
        }

        #qr-scanner {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .qr-controls {
            position: absolute;
            top: 0;
            right: 0;
            left: 0;
            bottom: 0;
            display: flex;
            justify-content: space-between;
            align-items: start;
            padding: 2rem;
            background: linear-gradient(180deg, rgba(0,0,0,0.7819502801120448) 0%, rgba(0,0,0,0) 35%);
        }

        #qr-box-information {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            display: none;
            justify-content: center;
            align-items: center;
            padding: 1rem 0;
            font-size: xx-large;
            color: white;
        }

        .qr-camera-select {
            width: 250px !important;
            height: 3rem;
            background-color: #00000036;
            border: 1px solid #ffffff52;
            border-radius: 0.375rem;
            color: #ffffffff;
            font-size: large;
            padding: 0 0.25rem;
            backdrop-filter: blur(10px);
            cursor: pointer;
        }

            .qr-camera-select option {
                font-size: xx-large;
                cursor: pointer;
            }

        #TP01ModeButton {
            background-color: transparent;
            border: 1px solid white;
            color: white;
            height: 3rem;
            width: 65px;
            border-radius: 0.375rem;
        }

        .TP01Active {
            background-color: white !important;
            color: black !important;
        }

        .qr-scanner-exit {
            font-size: xxx-large;
            color: white;
            filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.562));
            cursor: pointer;
        }
    </style>

    <script>
        var Scanner;
        var TP01Mode = false;
        var ScanType = "";

        function Scan() {
            Scanner = new Instascan.Scanner({ video: document.getElementById('qr-scanner'), mirror: false, refractoryPeriod: 2000 });

            $('#TP01ModeButton').css('display', (ScanType == "uretime-al") ? 'block' : 'none');

            SetFullscreen(document.getElementsByClassName('qr-scanner-area')[0]);
            document.getElementsByClassName('qr-scanner-area')[0].style.display = "block";

            Scanner.addListener('scan', function (content) {
                switch (ScanType) {
                    case "uretime-al":
                        UretimeAlScan(content);
                        break;
                    case "bekleyen-is-emri":
                        BekleyenIsEmirleriScan(content);
                        break;
                }
            });

            let Cameras = [];

            Instascan.Camera.getCameras()
                .then(function (cameras, image) {

                    this.Cameras = cameras;

                    let MultipleCamera = cameras.length > 1;

                    document.getElementsByClassName('qr-camera-select')[0].innerHTML = '';

                    for (let i = 0; i < cameras.length; i++) {
                        var CameraName = (i == 0 ? "Ön Kamera" : (i == 1 ? "Arka Kamera" : cameras[i].name));
                        var CameraOption = new Option(CameraName, cameras[i].id);
                        document.getElementsByClassName('qr-camera-select')[0].add(CameraOption);
                    }

                    if (MultipleCamera) {
                        document.getElementsByClassName('qr-camera-select')[0].value = cameras[1].id;
                    }

                    Scanner.start(MultipleCamera ? cameras[1] : cameras[0]).then(() => { $('.qr-scanner-loader').fadeOut(); });

                    document.getElementsByClassName('qr-camera-select')[0].addEventListener("change", event => {
                        Scanner.start(this.Cameras.find(c => c.id == event.target.value));
                    });

                })
                .catch((e) => {
                    console.error(e)
                });
        }

        function Close() {
            document.getElementsByClassName('qr-scanner-area')[0].style.display = "none";

            TP01Mode = false;
            $('#TP01ModeButton').removeClass('TP01Active');
            $('#qr-box-information').fadeOut('fast');
            ScanType = "";

            Scanner
                .stop()
                .then(() => {
                    Scanner = null;
                    document.exitFullscreen();
                    $('.qr-scanner-loader').fadeIn().css('display', 'flex');
                    $('#uretimkaydird').trigger('click');
                });
        }

        function ToggleTP01Mode() {
            TP01Mode = !TP01Mode;

            $('#TP01ModeButton').toggleClass('TP01Active');

            uretimControl = TP01Mode ? 'TP01' : '';

            TP01Mode ? $('#qr-box-information').fadeIn('fast').css('display', 'flex') : $('#qr-box-information').fadeOut('fast');
        }

        document.addEventListener("fullscreenchange", FullscreenChanged);

        function FullscreenChanged(event) {
            if (!document.fullscreenElement) {
                document.getElementsByClassName('qr-scanner-area')[0].style.display = "none";

                TP01Mode = false;
                $('#TP01ModeButton').removeClass('TP01Active');
                $('#qr-box-information').fadeOut('fast');
                ScanType = "";

                if (Scanner != null) {
                    Scanner
                        .stop()
                        .then(() => {
                            Scanner = null;
                        });
                }
            }
        }

        function SetFullscreen(Item) {
            if (Item.requestFullscreen) {
                Item.requestFullscreen();
            }
            else if (Item.webkitRequestFullscreen) {
                Item.webkitRequestFullscreen();
            }
            else if (Item.msRequestFullscreen) {
                Item.msRequestFullscreen();
            }
        }
    </script>

    <script>
        function UretimeAlScan(decodedText) {
            var userid =@Request.Cookies["UserId"].Value;
            var u = "";
            var u2 = "http://192.168.2.13:83/api/ie/control/" + decodedText;
            if (uretimControl == '') {
                        $.getJSON(u2, function (data) {
                            if (data.length > 0 && data[0].HG_CONTROL == 'True') {
                                playGiris()
                                Swal.fire({
                                    text: data[0].SERI_NO + " seri numaralı ürünü " + data[0].HATKODU + " kodlu makinede üretime almayı onaylıyor musunuz?",
                                    showCancelButton: true,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'Evet',
                                    cancelButtonText: "Hayır",
                                    target: document.getElementsByClassName("qr-controls")[0],
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        u = "http://192.168.2.13:83/api/ie/hat/" + data[0].HATKODU + "/" + decodedText + "/" + userid;
                                        $.getJSON(u, function () {

                                        }).done(function () {
                                            playGiris()
                                            swal.fire({
                                                title: "Başarılı!",
                                                text: "Kayıt başarılı",
                                                type: "success",
                                                icon: 'success',
                                                target: document.getElementsByClassName("qr-controls")[0],
                                            });
                                        });

                                        uretimControl = '';
                                    }
                                });

                            } else {
                                playHata();

                                swal.fire({
                                    title: "Karekodunu okutmuş olduğunuz ürün için iş emri kaydı bulunmamaktadır!",
                                    text: "Ürünü TP01 için üretime almak istiyorsanız, lütfen yukarıdaki butonlardan TP\'yi seçiniz.",
                                    type: "error",
                                    icon: 'error',
                                    target: document.getElementsByClassName("qr-controls")[0],
                                });

                                uretimControl = '';
                            }
                        })
                    } else {
                        u = "http://192.168.2.13:83/api/ie/tpcontrol/" + decodedText
                        $.getJSON(u, function (data) {

                            if (data.length != 0 && data[0].HG_CONTROL == 'True') {
                                playGiris()
                                Swal.fire({
                                    text: decodedText + " seri numaralı ürünü TP01 kodlu makinede üretime almayı onaylıyor musunuz?",
                                    showCancelButton: true,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'Evet',
                                    cancelButtonText: "Hayır",
                                    target: document.getElementsByClassName("qr-controls")[0],
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        u = "http://192.168.2.13:83/api/ie/hat/TP01/" + decodedText + "/" + userid;
                                        $.getJSON(u, function () {

                                        }).done(function () {
                                            playOnay()
                                            swal.fire({
                                                title: "Başarılı!",
                                                text: "Kayıt başarılı",
                                                type: "success",
                                                icon: 'success',
                                                target: document.getElementsByClassName("qr-controls")[0],
                                            });
                                        })

                                    }
                                })
                            } else {
                                playHata1();

                                swal.fire({
                                    title: "Başarısız!",
                                    text: "Okutmuş olduğunuz barkod numarası bulunamamaktadır!",
                                    type: "warning",
                                    icon: 'warning',
                                    target: document.getElementsByClassName("qr-controls")[0],
                                });
                            }
                        })
                    }
        }

        function BekleyenIsEmirleriScan(decodedText) {
            $("#isemriTable").bootstrapTable("destroy").bootstrapTable({
                url: "http://192.168.2.13:83/api/ie/isemrileri/" + decodedText
            });

            Close();

            $("#IsEmirleri").modal("show");
            $("#sarfTitle").html(decodedText + " Barkodlu Hammaddeye Bağlı İş Emirleri")
            $.getJSON("http://192.168.2.13:83/api/ie/top/isemrileri/" + decodedText, function (data) {
                $("#topmik").html(data[0].SERI_BAKIYE.toLocaleString() + " " + data[0].OLCU_BR1)
                var eksik = data[0].SERI_BAKIYE;
                $("#eksikmiktar1").attr("data-max", eksik)
            })

            $("#guncelleButton").attr("data-seri", decodedText);
        }
        function Onay(value, mik) {
            Swal.fire({
                title: "UYARI",
                html: value + ' seri nolu üründen ' + parseInt(mik)+' miktar hurda transferini onaylıyor musunuz?',
                icon: 'warning',
                showCancelButton: true,
                cancelButtonText: 'HAYIR',
                cancelButtonColor: '#d33',
                confirmButtonColor: '#3085d6',
                allowEnterKey: false,
                confirmButtonText: 'EVET',
                allowOutsideClick: false
            }).then((result) => {
                if (result.isConfirmed) {
                    Aktar(value, parseInt(mik))
                }
            });

        }
        function Aktar(value, mik) {
            ShowProgress();
            var stokkodu = stokkodlari.filter(x => x.SERI_NO == value)[0].STOK_KODU;
            $.ajax({
                url: '@Url.Action("DepoTransfer", "Uretim")',
                type: 'POST',
                data: { "seri": value, "stokkodu": stokkodu, "miktar": mik.toString(), "depo": '60' },
                error: function (data) {
                    alert(JSON.stringify(data));
                    HideProgress()
                },
                success: function (data) {
                    if (data == 'Başarılı') {
                        playOnay()
                        Swal.fire('Başarılı!', 'Kayıt başarılı', 'success');
                    } else {
                        playHata1()
                        Swal.fire('Başarısız!', data, 'error');
                    }
                    HideProgress()
                    $('input[name="makine-ie"]:checked').trigger('click');
                }
            })


        }
        function Ambar(value, mik) {
            Swal.fire({
                title: "UYARI",
                html: value + ' seri nolu üründen ' + parseInt(mik) + ' miktar ambar giriş/çıkış yapılmasını onaylıyor musunuz?<br><div style="margin-top:10px;display:flex;justify-content:center;align:center"><select id="yazici1" class="form-select" style="width:250px"></select><div>',
                icon: 'warning',
                showCancelButton: true,
                cancelButtonText: 'HAYIR',
                cancelButtonColor: '#d33',
                confirmButtonColor: '#3085d6',
                allowEnterKey: false,
                confirmButtonText: 'EVET',
                allowOutsideClick: false,
                didOpen: function () {
                    $.getJSON('http://192.168.2.13:83/api/printers/list', function (data) {

                        for (let i = 0; i < data.length; i++) {
                           var opt = $("<option>").val(data[i].PRINTER_NAME).text(data[i].PRINTER_NAME);

                            $('#yazici1').append(opt);
                        }
                    }).done(function () {
                        $('#yazici1').select2(
                            {
                                "language": {
                                    "noResults": function () {
                                        return "Sonuç bulunamadı.";
                                    }
                                },
                                escapeMarkup: function (markup) {
                                    return markup;
                                }
                            });
                    })
                }
            }).then((result) => {

                if (result.isConfirmed) {
                    AmbarGirCik(value, parseInt(mik))
                }
            });
        }
        function AmbarGirCik(value, mik) {
            ShowProgress();
            var stokkodu = stokkodlari.filter(x => x.SERI_NO == value)[0].STOK_KODU;
            var yazici = $('#yazici1').val();
            $.ajax({
                url: '@Url.Action("AmbarGirCik", "Uretim")',
                type: 'POST',
                data: { "seri":value,"stokkodu": stokkodu, "miktar": mik.toString() ,"YAZICI":yazici},
                error: function (data) {
                    alert(JSON.stringify(data));
                    HideProgress()
                },
                success: function (data) {
                    if (data.substring(0,4) != 'HATA') {
                        playOnay()
                        Swal.fire('Başarılı!', 'Kayıt başarılı', 'success');
                    } else {
                        playHata1()
                        Swal.fire('Başarısız!', data, 'error');
                    }
                    HideProgress()
                    $('input[name="makine-ie"]:checked').trigger('click');
                }
            })



        }
        function Hesapla() {
            var deger = $('#hesapInput').val();
            $.getJSON('http://192.168.2.13:83/api/seri/hesapla/' + seri + '/' + deger, function (data) {

                var d = data.filter(x=>x.GENISLIK == genislik.toString())
                ModalKapat4()
                $('#miktar11').val(d[0].TOPLAM_MIKTAR).trigger('keyup').trigger('blur');
            })
        }
    </script>
    <script type="text/javascript">
        var pdfjsLib = window['pdfjs-dist/build/pdf'];
        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.worker.min.js';
        var pdfDoc = null;
        var scale = 1; //Set Scale for Zoom.
        var resolution = IsMobile() ? 1.5 : 1; //Set Resolution as per Desktop and Mobile.
        function LoadPdfFromUrl(url) {
            //Read PDF from URL.
            pdfjsLib.getDocument(url).promise.then(function (pdfDoc_) {
                pdfDoc = pdfDoc_;

                //Reference the Container DIV.
                var pdf_container = document.getElementById("pdf_container");
                pdf_container.style.display = "block";

                //Loop and render all pages.
                for (var i = 1; i <= pdfDoc.numPages; i++) {
                    RenderPage(pdf_container, i);
                }
            });
        };
        function RenderPage(pdf_container, num) {
            pdfDoc.getPage(num).then(function (page) {
                //Create Canvas element and append to the Container DIV.
                var canvas = document.createElement('canvas');
                canvas.id = 'pdf-' + num;
                ctx = canvas.getContext('2d');
                pdf_container.appendChild(canvas);

                //Create and add empty DIV to add SPACE between pages.
                var spacer = document.createElement("div");
                spacer.style.height = "20px";
                pdf_container.appendChild(spacer);

                //Set the Canvas dimensions using ViewPort and Scale.
                var viewport = page.getViewport({ scale: scale });
                canvas.height = resolution * viewport.height * 1.25;
                canvas.width = resolution * viewport.width * 1.25;

                //Render the PDF page.
                var renderContext = {
                    canvasContext: ctx,
                    viewport: viewport,
                    transform: [resolution * 1.25, 0, 0, resolution * 1.25, 0, 0]
                };

                page.render(renderContext);
            });
        };

        function IsMobile() {
            var r = new RegExp("Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini");
            return r.test(navigator.userAgent);
        }
    </script>
    <!-- Deneysel Scanner Son-->

    <script>
        var BatteryIsCharging = false;
        var BatteryLevel = 0;

        $(document).ready(() => {
            BatteryStatus();
        });

        function BatteryStatus() {
            if (typeof navigator === 'undefined' || !window.navigator.getBattery) return;

            window.navigator.getBattery().then((Battery) => {
                BatteryLevel = Battery.level * 100;
                BatteryIsCharging = Battery.charging;

                BatteryListener();

                Battery.addEventListener('levelchange', () => {
                    BatteryLevel = Battery.level * 100;

                    BatteryListener();
                });
                Battery.addEventListener("chargingchange", () => {
                    BatteryIsCharging = Battery.charging;

                    BatteryListener();
                });

                $('.status-bar').css('display', 'flex');
            });
        }

        function BatteryListener() {
            var BatteryColor = BatteryLevel > 30 ? "#56d11c" : BatteryLevel > 10 ? "#f7a224" : "#ff4b4b";

            $('.battery-level').html(`${parseInt(BatteryLevel)}%`);
            $('.battery-icon').css('background', `linear-gradient(90deg, ${BatteryColor} ${BatteryLevel}%, #a5a5a5 ${BatteryLevel}%)`);

            if (BatteryIsCharging) {
                $('#battery-charging').show();
                $('#battery-warning').hide();
            }
            else if (!BatteryIsCharging && BatteryLevel <= 25) {
                $('#battery-charging').hide();
                $('#battery-warning').show();
            }
            else {
                $('#battery-charging').hide();
                $('#battery-warning').hide();
            }
        }
    </script>
</body>

</html>