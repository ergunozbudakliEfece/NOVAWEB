@{
    Layout = "~/Views/Shared/_Layout_yonetim.cshtml";
}

@model Tuple<NOVA.Models.User, NOVA.Models.Mail>

<link href="https://unpkg.com/bootstrap-table@1.21.1/dist/bootstrap-table.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
<link href="https://unpkg.com/placeholder-loading/dist/css/placeholder-loading.min.css" rel="stylesheet">

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>

<style>
    .vertical-center {
        min-height: 95%; /* Fallback for browsers do NOT support vh unit */
        min-height: 95vh; /* These two lines are counted as one :-)       */

        display: flex;
        align-items: center;
    }
    .search {
        width: 90%;
        position: relative;
        float:right;
    }
    .select2-container {
        position: relative;
        float: right;
    }
    .table td {
        text-align: center;
    }
    .table th {
        text-align: center;
    }
    #table img:hover {
        opacity: 0.4;
    }
    .heart {
        animation: heartbeat 1s infinite alternate;
    }

    @@keyframes heartbeat {
        from {
            opacity: 0.3;
            transform: scale(0.32);
        }

        to {
            opacity: 1;
            transform: scale(0.40);
        }
    }
    .menu2{
        display:none;
    }
    @@media screen and (max-width: 600px) {
        .menu1 {
            display: none;
        }

        .menu2 {
            display: inline-flex;
        }
    }
</style>
<div class="jumbotron vertical-center" style="overflow-y:hidden">
    <div class="modal fade" id="modalCenter" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalCenterTitle">Yeni Kullanıcı Ekleme Formu</h5>
                    <button type="button"
                            class="btn-close"
                            data-bs-dismiss="modal"
                            aria-label="Close"></button>
                </div>
                @{

                    using (Html.BeginForm("AddUser", "YonetimPaneli", FormMethod.Post, new { @id = "myFormAdd" }))
                    {
                        <div class="modal-body">
                            <div class="form-group">
                                <label>USER NAME:</label>
                                @Html.TextBoxFor(Model => Model.Item1.USER_NAME, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>USER ROLE:</label>

                                @Html.DropDownListFor(Model => Model.Item1.USER_ROLE, (SelectList)ViewBag.Roles, htmlAttributes: new { @class = "form-select dropdown-toggle" })
                            </div>
                            <div class="form-group">
                                <label>USER FIRST NAME:</label>
                                @Html.TextBoxFor(Model => Model.Item1.USER_FIRSTNAME, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>USER LAST NAME:</label>
                                @Html.TextBoxFor(Model => Model.Item1.USER_LASTNAME, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>USER MAIL:</label>
                                @Html.TextBoxFor(Model => Model.Item1.USER_MAIL, new { @class = "form-control" })
                            </div>

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="ekle btn btn-outline-info" onclick="myEkleFunction()" data-bs-dismiss="modal">EKLE</button>
                            <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">KAPAT</button>
                        </div>
                    }
                }


            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col">
                <div class="layout-menu-toggle navbar-nav align-items-xl-center me-3 me-xl-0 d-xl-none">
                    <a class="nav-item nav-link px-0 me-xl-4" href="javascript:void(0)">
                        <i class="bx bx-menu bx-sm"></i>
                    </a>
                </div>
            </div>
            <div class="col">
                <div class="avatar avatar-online float-end mb-0" data-bs-toggle="dropdown">
                    @{
                        string s = Request.Cookies["Id"].Value + ".png?" + DateTime.Now.Ticks.ToString();
                    }
                    <object data="/assets/img/avatars/@s" type="image/png" class="w-px-40 h-auto rounded-circle">
                        <img src="/assets/img/avatars/7.png" class="w-px-40 h-auto rounded-circle">
                    </object>
                </div>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li>
                        <a class="dropdown-item" href='@Url.Action("Index", "Profil")'>
                            <div class="d-flex">
                                <div class="flex-shrink-0 me-3">
                                    <div class="avatar avatar-online">
                                        <object data="/assets/img/avatars/@s" type="image/png" class="w-px-40 h-auto rounded-circle">
                                            <img src="/assets/img/avatars/7.png" class="w-px-40 h-auto rounded-circle">
                                        </object>
                                    </div>
                                </div>
                                <div class="flex-grow-1">
                                    @if (@Request.Cookies["Name"] != null)
                                    {
                                        <span class="fw-semibold d-block">@Request.Cookies["Name"].Value</span>
                                        <small class="text-muted">Yetki: @Request.Cookies["RoleName"].Value</small>
                                    }
                                    else
                                    {
                                        <span class="fw-semibold d-block">Test</span>
                                        <small class="text-muted">Yetki: Test</small>
                                    }

                                </div>
                            </div>
                        </a>
                    </li>

                    <li>
                        <a href="javascript:void(0);" class="dropdown-item" data-bs-toggle="modal"
                           data-bs-target="#cikis">
                            <i class="bx bx-power-off me-2"></i>
                            <span class="align-middle">Oturumu Kapat</span>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="btn-group menu1" role="group" aria-label="Basic radio toggle button group">
            <input type="radio" class="btn-check" onclick="changetable(1)" name="btnradio" id="btnradio1" checked="" autocomplete="off">
            <label class="btn btn-outline-secondary" for="btnradio1">KULLANICI</label>
            <input type="radio" class="btn-check" onclick="changetable(2)" name="btnradio" id="btnradio2" autocomplete="off">
            <label class="btn btn-outline-secondary" for="btnradio2">YETKİLER</label>
            <input type="radio" class="btn-check" onclick="changetable(4)" name="btnradio" id="btnradio4" autocomplete="off">
            <label class="btn btn-outline-secondary" for="btnradio4">YETKİLER(ROL)</label>
            <input type="radio" class="btn-check" onclick="changetable(3)" name="btnradio" id="btnradio3" autocomplete="off">
            <label class="btn btn-outline-secondary" for="btnradio3">MODÜLLER</label>
            <input type="radio" class="btn-check" onclick="changetable(5)" name="btnradio" id="btnradio5" autocomplete="off">
            <label class="btn btn-outline-secondary" for="btnradio5">KULLANICI AKTİVİTESİ</label>
        </div>
        <div class="btn-group menu2">
            <button type="button" class="btn btn-primary btn-icon rounded-pill dropdown-toggle hide-arrow" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bx bx-dots-vertical-rounded"></i>
            </button>
            <ul class="dropdown-menu dropdown-menu-end" style="">
                <li><a class="dropdown-item" onclick="changetable(1)">KULLANICI</a></li>
                <li>
                    <hr class="dropdown-divider">
                </li>
                <li><a class="dropdown-item" onclick="changetable(2)">YETKİLER</a></li>
                <li>
                    <hr class="dropdown-divider">
                </li>
                <li><a class="dropdown-item" onclick="changetable(4)">YETKİLER(ROL)</a></li>
                <li>
                    <hr class="dropdown-divider">
                </li>
                <li><a class="dropdown-item" onclick="changetable(3)">MODÜLLER</a></li>
                <li>
                    <hr class="dropdown-divider">
                </li>
                <li><a class="dropdown-item" onclick="changetable(5)">KULLANICI AKTİVİTESİ</a></li>
            </ul>
        </div>
        <div id="employeeTableWrapper" class="tableWrapper">

            <div class="mt-2" id="toolbar" style="width:100%">


                <button data-bs-toggle="tooltip" name="mail" data-bs-offset="0,4" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<i class='bx bxs-info-circle bx-xs' ></i> <span>Tüm Kullanıcılara Bilgi Gönderimi Yapar</span>" class="btn btn-secondary bx bx-mail-send" onclick="location.href='@Url.Action("MailFormuToplu","YonetimPaneli")'">
                </button>


                <span data-bs-toggle="modal" data-bs-target="#modalCenter">
                    <button data-bs-toggle="tooltip" data-bs-offset="0,4" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<i class='bx bxs-info-circle bx-xs' ></i> <span>Yeni Kullanıcı Ekleme Formunu Açar</span>" class="btn btn-secondary bx bxs-user-plus">
                    </button>
                </span>
                <select id="filter" multiple="multiple" name="filterAlgorithm">
                </select>
                <select id="filter2" multiple="multiple" name="filterAlgorithm2">
                </select>
            </div>
            <div class="buttons-toolbar mt-2 mb-2">
            </div>


            <table id="table"
                   class="table table-striped"
                   data-show-fullscreen="true"
                   data-buttons-order="['mail','fullscreen','columns']"
                   data-toggle="table"
                   data-buttons-toolbar=".buttons-toolbar"
                   data-show-export="false"
                   data-export-data-type="all"
                   data-export-types="['excel']"
                   data-pagination="false"
                   data-search="true"
                   data-show-columns="true"
                   data-show-columns-toggle-all="true"
                   data-locale="tr-TR"
                   data-height="700"
                   data-filter-control="true"
                   data-filter-control-multiple-search="true"
                   data-loading-template="loadingTemplate"
                   data-mobile-responsive="true">
                <thead>
                    <tr id="trid">
                        <th data-field="USER_NAME" data-halign="center" data-width="150" data-width-unit="px" data-align="center">USERNAME</th>
                        <th data-field="USER_PASSWORD" data-halign="center" data-align="center" data-formatter="Formatter" data-width="200" data-width-unit="px">PASSWORD</th>
                        <th data-field="USER_ROLE" data-halign="center" data-align="center" data-width="150" data-width-unit="px" data-formatter="RoleFormatter">ROLE</th>
                        <th data-field="USER_FIRSTNAME" data-halign="center" data-align="center" data-width="150" data-width-unit="px" data-formatter="Formatter">FIRST NAME</th>
                        <th data-field="USER_LASTNAME" data-halign="center" data-align="center" data-width="150" data-width-unit="px" data-formatter="Formatter">LAST NAME</th>
                        <th data-field="USER_MAIL" data-halign="center" data-align="center" data-width="200" data-width-unit="px" data-formatter="Formatter">MAIL</th>
                        <th data-field="ACTIVE" data-halign="center" data-align="center" data-width="100" data-formatter="ActiveFormatter">ACTIVE</th>
                    </tr>
                </thead>
            </table>

            <script>
                function Formatter(value, index, row) {
                    return "<input class='form-control text-center' type='text' style='background:transparent' onkeyup='changeinp(this)' value='" + value + "'></input>"
                }
                function FormatterModule(value, index, row) {
                    if (value=="1") {
                        return '<input class="form-check-input" type="checkbox" value="" onchange="changemod()" checked="">';
                    } else {
                        return '<input class="form-check-input" type="checkbox" onchange="changemod()" value="" id="modulecheck">';
                    }
                    
                }
                function ActiveFormatter(value, index, row) {
                    if (value) {
                        return '<input class="form-check-input" type="checkbox" value="" onchange="change(this)" checked="">';
                    } else {
                        return '<input class="form-check-input" type="checkbox" onchange="change(this)" value=""';
                    }

                }
                function keyupmodule(value) {
                    var row = document.getElementById("table").getElementsByTagName("tbody")[0].getElementsByTagName("tr")[event.currentTarget.parentNode.parentNode.rowIndex -1];
                    var active = row.getElementsByTagName("input")[0].value;
                    var inc = row.getElementsByTagName("td")[0].innerHTML;
                    var json = { INCKEY: inc, ACTIVE: active };
                    $.ajax({
                        url: '@Url.Action("ModuleActiveUpdate", "YonetimPaneli")',
                        type: 'POST',
                        data: JSON.stringify(json),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        error: function (xhr) {
                            alert('Error: ' + xhr.statusText);
                        },
                        success: function (result) {

                        },
                        async: true,
                        processData: false
                    });
                }
                function keyup(value) {
                    var row = document.getElementById("table").getElementsByTagName("tbody")[0].getElementsByTagName("tr")[event.currentTarget.parentNode.parentNode.rowIndex -1];
                    var username = row.getElementsByTagName("td")[0].innerHTML;
                    var pw = row.getElementsByTagName("input")[0].value;
                    var fn = row.getElementsByTagName("input")[2].value;
                    var ln = row.getElementsByTagName("input")[3].value;
                    var mail = row.getElementsByTagName("input")[4].value;
                    var active = row.getElementsByTagName("input")[5].checked;
                    var role = row.getElementsByTagName("input")[1].value;
                    var json = { USER_NAME: username, USER_PASSWORD: pw, USER_FIRSTNAME:fn , USER_LASTNAME:ln, USER_MAIL:mail ,ACTIVE:active ,USER_ROLE:role };
                    $.ajax({
                        url: '@Url.Action("KullaniciUpdate", "YonetimPaneli")',
                        type: 'POST',
                        data: JSON.stringify(json),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        error: function (xhr) {
                            alert('Error: ' + xhr.statusText);
                        },
                        success: function (result) {

                        },
                        async: true,
                        processData: false
                    });
                }
                function change(v) {
                    
                    var row = document.getElementById("table").getElementsByTagName("tr")[v.parentNode.parentNode.rowIndex];
                    
                    if (row == null) {
                        row = document.getElementById("table").getElementsByTagName("tr")[v.parentNode.parentNode.parentNode.parentNode.parentNode.rowIndex];
                        var username = row.getElementsByTagName("span")[1].innerHTML;

                        var pw = row.getElementsByTagName("input")[0].value;

                        var fn = row.getElementsByTagName("input")[1].value;
                        var ln = row.getElementsByTagName("input")[2].value;
                        var mail = row.getElementsByTagName("input")[3].value;
                        var active = row.getElementsByTagName("input")[4].checked;

                        var role = row.getElementsByTagName("select")[0].value;
                    } else {
                        var username = row.getElementsByTagName("td")[0].innerHTML;

                        var pw = row.getElementsByTagName("input")[0].value;
                       
                        var fn = row.getElementsByTagName("input")[1].value;
                       
                        var ln = row.getElementsByTagName("input")[2].value;
                       
                        var mail = row.getElementsByTagName("input")[3].value;
                        
                        var active = row.getElementsByTagName("input")[4].checked;
                        
                        var role = row.getElementsByTagName("select")[0].value;
                        
                    }
                    

                    var json = { USER_NAME: username, USER_PASSWORD: pw, USER_FIRSTNAME:fn , USER_LASTNAME:ln, USER_MAIL:mail ,ACTIVE:active ,USER_ROLE:role };
                    $.ajax({
                        url: '@Url.Action("KullaniciUpdate", "YonetimPaneli")',
                        type: 'POST',
                        data: JSON.stringify(json),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        error: function (xhr) {
                            alert('Error: ' + xhr.statusText);
                        },
                        success: function (result) {

                        },
                        async: true,
                        processData: false
                    });
                }
                 function changeinp(v) {
                     if (event.key == "Enter") {

                         var row = document.getElementById("table").getElementsByTagName("tr")[v.parentNode.parentNode.rowIndex];

                         if (row == null) {

                        row = document.getElementById("table").getElementsByTagName("tr")[v.parentNode.parentNode.parentNode.parentNode.parentNode.rowIndex];

                        var username = row.getElementsByTagName("span")[1].innerHTML;

                        var pw = row.getElementsByTagName("input")[0].value;

                        var fn = row.getElementsByTagName("input")[1].value;
                        var ln = row.getElementsByTagName("input")[2].value;
                        var mail = row.getElementsByTagName("input")[3].value;
                        var active = row.getElementsByTagName("input")[4].checked;

                        var role = row.getElementsByTagName("select")[0].value;
                    } else {
                        var username = row.getElementsByTagName("td")[0].innerHTML;

                        var pw = row.getElementsByTagName("input")[0].value;

                             var fn = row.getElementsByTagName("input")[1].value;
                        var ln = row.getElementsByTagName("input")[2].value;
                        var mail = row.getElementsByTagName("input")[3].value;
                        var active = row.getElementsByTagName("input")[4].checked;

                             var role = row.getElementsByTagName("select")[0].value;

                    }


                         var json = { USER_NAME: username, USER_PASSWORD: pw, USER_FIRSTNAME: fn, USER_LASTNAME: ln, USER_MAIL: mail, ACTIVE: active, USER_ROLE: role };

                    $.ajax({
                        url: '@Url.Action("KullaniciUpdate", "YonetimPaneli")',
                        type: 'POST',
                        data: JSON.stringify(json),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        error: function (xhr) {
                            alert('Error: ' + xhr.statusText);
                        },
                        success: function (result) {
                            Swal.fire(
                                'BAŞARILI',
                                'Kullanıcı bilgileri başarıyla güncellendi'
                            )
                        },
                        async: true,
                        processData: false
                    });
                     }

                }
                 function changemod() {
                     

                     var row = document.getElementById("table").getElementsByTagName("tr")[event.currentTarget.parentNode.parentNode.rowIndex];
                         var inckey = row.getElementsByTagName("td")[0].innerHTML;
                         var active = row.getElementsByTagName("input")[0].checked;


                         var json = { INCKEY: inckey, ACTIVE: active };

                    $.ajax({
                        url: '@Url.Action("ModuleActiveUpdate", "YonetimPaneli")',
                        type: 'POST',
                        data: JSON.stringify(json),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        error: function (xhr) {
                            alert('Error: ' + xhr.statusText);
                        },
                        success: function (result) {
                            Swal.fire(
                                'BAŞARILI',
                                'Modül bilgisi güncellendi!'
                            )
                        },
                        async: true,
                        processData: false
                    });

                     }

                


            </script>

        </div>

    </div>
    <script>
        var type = 'fa'
        var mods = null;
        function loadingTemplate(message) {
            if (type === 'fa') {
                return '<div class="heart"><img id="progress" src="/images/novasaydam.png" style="max-width:15vw" /></div>'
            }
            if (type === 'pl') {
                return '<div class="ph-item"><div class="ph-picture"></div></div>'
            }
        }
        var last = null;
        $(document).ready(function () {

            document.getElementById("yonetimpaneli").className = "menu-item open active";
            document.getElementById("kullanici").className = "menu-item active";
            getModulesAsync().then(function (data) {
                modules = data;
            }).then(function () {
                mods = modules.filter(x=>x.ACTIVE==1);
                for (let i = 0; i < mods.length; i++) {
                    var option = document.createElement('option');
                    option.innerHTML = mods[i].INCKEY + " " + mods[i].MODULE_NAME + " || " + mods[i].PROGRAM_NAME;
                    option.value = mods[i].INCKEY;
                    $('#filter2').append(option);
                }
            })
            $.getJSON("http://192.168.2.13:83/api/userlogin/exec/situation", function (data) {
                last = data;
            })
            getRoleAsync().then(function (data) {
                roles = data;
            }).then(function () {

                $.getJSON("@Url.Action("GetUser","Satis")", function (result) {
                    $("#table").bootstrapTable("destroy").bootstrapTable({ data: JSON.parse(result) })

            })
            })
            getUserAsync().then(function (data) {
                users = data;
            }).then(function () {
                var filter = JSON.parse(users);
                for (let i = 0; i < filter.length; i++) {
                    var option = document.createElement('option');
                    option.innerHTML = filter[i].USER_FIRSTNAME + " " + filter[i].USER_LASTNAME;
                    option.value = filter[i].USER_ID;
                    $('#filter').append(option);
                }
            })

            $('#filter').hide();
            $('#filter2').hide();

        }).ajaxComplete(function () {

            $('.select2clss').select2({width:"100%"}).on('change', function () {
                changesel(this.parentNode.parentNode.rowIndex);
            });

        })
        function changetable(value) {

            if (value == 1) {
                $('#filter').select2('destroy');
                $('#filter').hide();
                $('#filter2').select2('destroy');
                $('#filter2').hide();
                $('#table').bootstrapTable('destroy');
                 $.getJSON("@Url.Action("GetUser","Satis")", function (result) {
                     $('#table').bootstrapTable({
                         data: JSON.parse(result),
                         columns: [{
                             field: 'USER_NAME',
                             title: 'USERNAME'
                         },
                         {
                             field: 'USER_PASSWORD',
                             title: 'PASSWORD',
                             formatter: 'Formatter',
                             halign: 'center'
                         },
                         {
                             field: 'USER_ROLE',
                             title: 'ROLE',
                             formatter: 'RoleFormatter',
                             halign: 'center'
                         },
                         {
                             field: 'USER_FIRSTNAME',
                             title: 'FIRST NAME',
                             formatter: 'Formatter',
                             halign: 'center'

                         },
                         {
                             field: 'USER_LASTNAME',
                             title: 'LAST NAME',
                             formatter: 'Formatter',
                             halign: 'center'
                         },
                         {
                             field: 'USER_MAIL',
                             title: 'MAIL',
                             formatter: 'Formatter',
                             halign: 'center'
                         },
                         {
                             field: 'ACTIVE',
                             title: 'ACTIVE',
                             formatter: 'ActiveFormatter',
                             halign: 'center',
                             width: "100"
                         }
                         ]

                     })

            })
               
            }
            else if (value == 2) {

                $('#filter').select2({ placeholder: 'Kullanıcı Filtreleme', width: '90%', float: 'end' });
                $('#filter').show();
                $('#filter2').select2({ placeholder: 'Modül Filtreleme', width: '90%', float: 'end' });
                $('#filter2').show();
                $('#table').bootstrapTable('destroy');
                $('#table').bootstrapTable({
                    url: 'http://192.168.2.13:83/api/user/auth',
                    columns: [{
                        field: 'USER_ID',
                        title: 'NAME',
                        formatter: 'formatterAuth1'
                    },
                    {
                        field: 'MODULE_INCKEY',
                        title: 'MODULE',
                        formatter: 'formatterAuth2',
                        sortable: true
                        },
                    {
                        field: 'INCKEY',
                        title: 'INCKEY',
                        formatter: 'formatterAuth3',
                        sortable: true
                    },
                    {
                        field: 'ROLE_ID',
                        title: 'ROLE',
                        formatter: 'formatterRoleAuth2'
                    },
                    {
                        field: 'USER_AUTH',
                        title: 'AUTH',
                        formatter: 'formatterAuth',
                        align: 'center',
                        width:"100"
                    },
                    {
                        field: 'SELECT_AUTH',
                        title: 'SELECT',
                        formatter: 'formatterAuth',
                        align: 'center',
                        width:"100"
                    },
                    {
                        field: 'INSERT_AUTH',
                        title: 'INSERT',
                        formatter: 'formatterAuth',
                        align: 'center',
                        width:"100"
                    },
                    {
                        field: 'UPDATE_AUTH',
                        title: 'UPDATE',
                        formatter: 'formatterAuth',
                        align: 'center',
                        width:"100"
                    },
                    {
                        field: 'DELETE_AUTH',
                        title: 'DELETE',
                        formatter: 'formatterAuth',
                        align: 'center',
                        width:"100"
                    }
                    ]

                })
                $('#filter').change(function (e) {
                    var filterAlgorithm = $('#filter').val()
                    var filterAlgorithm = [];
                    var seperate1 = $('#filter').val().toString().split(',');
                    var filterAlgorithm2 = [];
                    var seperate = $('#filter2').val().toString().split(',');
                    if ($('#filter2').val().length > 0) {
                        for (let i = 0; i < seperate.length; i++) {
                            filterAlgorithm2.push(parseInt(seperate[i]));
                        }
                    } else {
                        filterAlgorithm2 = null;
                    }
                    if ($('#filter').val().length > 0) {
                        for (let i = 0; i < seperate1.length; i++) {
                            filterAlgorithm.push(parseInt(seperate1[i]));
                        }
                    } else {
                        filterAlgorithm = null;
                    }


                    var moduleinc = [];
                    for (let i = 0; i < mods.length; i++) {
                        if (!moduleinc.includes(mods[i].INCKEY)) {
                            moduleinc.push(parseInt(mods[i].INCKEY));
                        }
                    }
                    if (filterAlgorithm2 != null && filterAlgorithm == null) {
                        $('#table').bootstrapTable('filterBy', {
                            MODULE_INCKEY: filterAlgorithm2
                        })
                    } else if (filterAlgorithm2 == null && filterAlgorithm != null) {
                        $('#table').bootstrapTable('filterBy', {
                            USER_ID: filterAlgorithm
                        })
                    } else if (filterAlgorithm2 != null && filterAlgorithm != null) {
                        $('#table').bootstrapTable('filterBy', {
                            USER_ID: filterAlgorithm,
                            MODULE_INCKEY: filterAlgorithm2
                        })
                    } else {
                        $('#table').bootstrapTable('filterBy', {});

                    }

                })
                $('#filter2').change(function (e) {
                    var filterAlgorithm = $('#filter').val()
                    var filterAlgorithm = [];
                    var seperate1 = $('#filter').val().toString().split(',');
                    var filterAlgorithm2 = [];
                    var seperate = $('#filter2').val().toString().split(',');
                    if ($('#filter2').val().length>0) {
                        for (let i = 0; i < seperate.length; i++) {
                            filterAlgorithm2.push(parseInt(seperate[i]));
                        }
                    } else {
                        filterAlgorithm2 = null;
                    }
                    if ($('#filter').val().length > 0) {
                        for (let i = 0; i < seperate1.length; i++) {
                            filterAlgorithm.push(parseInt(seperate1[i]));
                        }
                    } else {
                        filterAlgorithm = null;
                    }


                    var moduleinc = [];
                    for (let i = 0; i < mods.length; i++) {
                        if (!moduleinc.includes(mods[i].INCKEY)) {
                            moduleinc.push(parseInt(mods[i].INCKEY));
                        }
                    }
                    if (filterAlgorithm2 != null && filterAlgorithm == null) {
                        $('#table').bootstrapTable('filterBy', {
                            MODULE_INCKEY: filterAlgorithm2
                        })
                    } else if (filterAlgorithm2 == null && filterAlgorithm != null) {
                        $('#table').bootstrapTable('filterBy', {
                            USER_ID: filterAlgorithm
                        })
                    } else if (filterAlgorithm2 != null && filterAlgorithm != null) {
                        $('#table').bootstrapTable('filterBy', {
                            USER_ID: filterAlgorithm,
                            MODULE_INCKEY: filterAlgorithm2
                        })

                    } else {
                        $('#table').bootstrapTable('filterBy', {});

                    }

                })
            }
            else if (value == 4) {
                $('#filter').select2({ placeholder: 'Kullanıcı Filtreleme', width: '90%', float: 'end' });
                $('#filter').show();
                $('#filter2').select2();
                $('#filter2').select2('destroy');
                $('#filter2').hide();
                $('#table').bootstrapTable('destroy');
                $('#table').bootstrapTable({
                    url: 'http://192.168.2.13:83/api/rolesauth',
                    columns: [{
                        field: 'ROLE_ID',
                        title: 'ROLE NAME',
                        formatter: 'formatterRoleFormatter'
                    },
                    {
                        field: 'MODULE_INCKEY',
                        title: 'MODULE',
                        formatter: 'formatterAuth2',
                        sortable: true
                    },
                    {
                        field: 'USER_AUTH',
                        title: 'AUTH',
                        formatter: 'RoleformatterAuth',
                        width: "100"
                    },
                    {
                        field: 'SELECT_AUTH',
                        title: 'SELECT',
                        formatter: 'RoleformatterAuth',
                        width: "100"
                    },
                    {
                        field: 'INSERT_AUTH',
                        title: 'INSERT',
                        formatter: 'RoleformatterAuth',
                        width: "100"
                    },
                    {
                        field: 'UPDATE_AUTH',
                        title: 'UPDATE',
                        formatter: 'RoleformatterAuth',
                        width: "100"
                    },
                    {
                        field: 'DELETE_AUTH',
                        title: 'DELETE',
                        formatter: 'RoleformatterAuth',
                        width: "100"
                    }
                    ]

                })
                $('#filter').change(function (e) {
                    var filterAlgorithm = $('#filter').val()

                    if (filterAlgorithm.length > 0) {
                        $('#table').bootstrapTable('filterBy', {
                            ROLE_ID: filterAlgorithm
                        }, {
                            'filterAlgorithm': (row, filters) => {

                                return row.ROLE_ID == filters.ROLE_ID;
                            }
                        })
                    } else {
                        $('#table').bootstrapTable('filterBy', {});

                    }

                })
            }
            else if (value == 3) {
                $('#filter').select2();
                $('#filter').select2('destroy');
                $('#filter').hide();
                $('#filter2').select2();
                $('#filter2').select2('destroy');
                $('#filter2').hide();
                $('#table').bootstrapTable('destroy');
                document.getElementById("trid").replaceChildren();
                $('#table').bootstrapTable({
                    url: 'http://192.168.2.13:83/api/modules',
                    columns: [
                        {
                            field: 'INCKEY',
                            title: 'INCKEY',
                        }, {
                            field: 'INCKEY',
                            title: 'NAME',
                            formatter: 'formatterModuleName'
                        },
                        {
                            field: 'ACTIVE',
                            title: 'ACTIVE',
                            formatter: 'FormatterModule'
                        }
                    ]

                })
            } else {
                $('#filter').select2();
                $('#filter').select2('destroy');
                $('#filter').hide();
                $('#filter2').select2();
                $('#filter2').select2('destroy');
                $('#filter2').hide();
                $('#table').bootstrapTable('destroy');
                document.getElementById("trid").replaceChildren();
                $('#table').bootstrapTable({
                    url: 'http://192.168.2.13:83/api/userlogin/exec/lastseen',
                    columns: [
                        {
                            field: 'LOG_ID',
                            title: 'Oturum Numarası',
                            sorter: 'dataSorter',
                            sortable: true,
                            visible: false

                        },
                        {
                            field: 'USER_NAME',
                            title: 'Kullanıcı Adı',
                            formatter: 'userFormatter'
                        },
                        {
                            field: 'LAST_SEEN',
                            title: 'Son Görülme',
                            formatter: 'userFormatter',
                        },
                        {
                            field: 'USER_STATUS',
                            title: 'Durum',
                            formatter: 'userFormatter'
                        },
                        {
                            field: 'LAST_ACTIVITY',
                            title: 'Son Aktivite',
                            formatter: 'aktiviteFormatter'
                        },
                        {
                            field: '',
                            title: 'Oturum',
                            formatter: 'oturumFormatter'

                        }

                    ]

                })
            }
        }
        function dataSorter(a, b) {
            if (parseInt(a) < parseInt(b)) return 1;
            if (parseInt(a) > parseInt(b)) return -1;
            return 0;
        }
        function formatterAuth(value, index, row) {
            if (value) {
                return '<input class="form-check-input" type="checkbox" value="" onchange="changeAuth(' + index.USER_ID + ',' + index.MODULE_INCKEY +')" checked="">';
            } else {
                return '<input class="form-check-input" type="checkbox" onchange="changeAuth(' + index.USER_ID + ',' + index.MODULE_INCKEY +')" value="" id="defaultCheck3">';
            }
        }
        function RoleformatterAuth(value, index, row) {
            if (value) {
                return '<input class="form-check-input" type="checkbox" value="" onchange="changeRoleAuth(' + index.ROLE_ID + ',' + index.MODULE_INCKEY + ')" checked="">';
            } else {
                return '<input class="form-check-input" type="checkbox" onchange="changeRoleAuth(' + index.ROLE_ID + ',' + index.MODULE_INCKEY + ')" value="" id="defaultCheck3">';
            }
        }
        function userFormatter(value, index, row) {
            if (index.USER_STATUS == "Çevrimiçi") {
                return "<span style='color:green'>" + value + "</span>";
            } else {
                return "<span style='color:red'>" + value + "</span>";
            }

        }

        function changeAuth(value, value2) {

            var row = document.getElementById("table").getElementsByTagName("tbody")[0].getElementsByTagName("tr")[event.currentTarget.parentNode.parentNode.rowIndex-1];
            if (row == null) {
                row = document.getElementById("table").getElementsByTagName("tbody")[0].getElementsByTagName("tr")[event.currentTarget.parentNode.parentNode.parentNode.parentNode.parentNode.rowIndex-1]
            }

            var userid = value;
            var ua = row.getElementsByTagName("input")[0].checked;
            var sa = row.getElementsByTagName("input")[1].checked;
            var ia = row.getElementsByTagName("input")[2].checked;
            var uaa = row.getElementsByTagName("input")[3].checked;
            var da = row.getElementsByTagName("input")[4].checked;
            var mi = value2;
            var json = { USER_ID: userid, MODULE_INCKEY: mi, USER_AUTH: ua, SELECT_AUTH: sa, INSERT_AUTH: ia, UPDATE_AUTH: uaa, DELETE_AUTH:da };
                    $.ajax({
                        url: '@Url.Action("YetkiUpdate", "YonetimPaneli")',
                        type: 'POST',
                        data: JSON.stringify(json),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        error: function (xhr) {
                            alert('Error: ' + xhr.statusText);
                        },
                        success: function (result) {

                        },
                        async: true,
                        processData: false
                    });

        }
        function changeRoleAuth(value, value2) {

            var row = document.getElementById("table").getElementsByTagName("tbody")[0].getElementsByTagName("tr")[event.currentTarget.parentNode.parentNode.rowIndex-1];
            if (row == null) {
                row = document.getElementById("table").getElementsByTagName("tbody")[0].getElementsByTagName("tr")[event.currentTarget.parentNode.parentNode.parentNode.parentNode.parentNode.rowIndex-1]
            }

            var roleid = value;
            var ua = row.getElementsByTagName("input")[0].checked;
            var sa = row.getElementsByTagName("input")[1].checked;
            var ia = row.getElementsByTagName("input")[2].checked;
            var uaa = row.getElementsByTagName("input")[3].checked;
            var da = row.getElementsByTagName("input")[4].checked;
            var mi = value2;
            var json = { ROLE_ID: roleid, MODULE_INCKEY: mi, USER_AUTH: ua, SELECT_AUTH: sa, INSERT_AUTH: ia, UPDATE_AUTH: uaa, DELETE_AUTH:da };
                    $.ajax({
                        url: '@Url.Action("RoleUpdate", "YonetimPaneli")',
                        type: 'POST',
                        data: JSON.stringify(json),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        error: function (xhr) {
                            alert('Error: ' + xhr.statusText);
                        },
                        success: function (result) {

                        },
                        async: true,
                        processData: false
                    });

        }

        function formatterAuth1(value, index, row) {
            var user = JSON.parse(users).filter(x => x.USER_ID == value);
            return user[0].USER_FIRSTNAME + " " + user[0].USER_LASTNAME;

        }
        function formatterAuth2(value, index, row) {
            var m = modules.filter(x => x.INCKEY == value);
            return "<div class='row'><div class='col'>"+m[0].MODULE_NAME + "</div><div class='col'>" + m[0].PROGRAM_NAME+"</div></div>";
        }
        function formatterAuth3(value, index, row) {

            return index.MODULE_INCKEY;
        }
        function RoleFormatter(value, index, row) {
            var q = "";
            for (let i = 0; i < roles.length; i++) {
                if (value == roles[i].ROLE_ID) {
                    q = q + "<option selected value='" + roles[i].ROLE_ID + "'>" + roles[i].ROLE_NAME + "</option>"
                } else {
                    q = q + "<option value='" + roles[i].ROLE_ID + "'>" + roles[i].ROLE_NAME + "</option>"
                }

            }
            return "<select onchange='change(this)' class='select2clss'>"+q+"</select>";
        }
        function changesel(value) {
            var row = document.getElementById("table").getElementsByTagName("tr")[value];

                    var username = row.getElementsByTagName("td")[0].innerHTML;
                    var pw = row.getElementsByTagName("input")[0].value;
                    var fn = row.getElementsByTagName("input")[1].value;
                    var ln = row.getElementsByTagName("input")[2].value;
                    var mail = row.getElementsByTagName("input")[3].value;
                    var active = row.getElementsByTagName("input")[4].checked;
                    var role = row.getElementsByTagName("select")[0].value;
                    var json = { USER_NAME: username, USER_PASSWORD: pw, USER_FIRSTNAME: fn, USER_LASTNAME: ln, USER_MAIL: mail, ACTIVE: active, USER_ROLE: role };

                    $.ajax({
                        url: '@Url.Action("KullaniciUpdate", "YonetimPaneli")',
                        type: 'POST',
                        data: JSON.stringify(json),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        error: function (xhr) {
                            alert('Error: ' + xhr.statusText);
                        },
                        success: function (result) {

                        },
                        async: true,
                        processData: false
                    });

        }
        function formatterRoleAuth2(value, index, row) {
            return roles.filter(x => x.ROLE_ID==value)[0].ROLE_NAME;
        }
        function formatterRoleFormatter(value, index, row) {

            return ROLENAMES.filter(x => x.ROLE_ID == value)[0].ROLE_NAME;
        }
        function formatterModuleName(value, index, row) {
            var m = modules.filter(x => x.INCKEY == value);
            return "<div class='row'><div class='col'>" + m[0].MODULE_NAME + "</div><div class='col'>" + m[0].PROGRAM_NAME + "</div></div>";
        }
        function myEkleFunction() {
            document.getElementById("myFormAdd").submit();
        }
        function aktiviteFormatter(value, index, row) {

            var m = last.filter(x => x.LOG_ID == index.LOG_ID)[0];
            if (m != null) {
                return m.LAST_ACTIVITY;
            } else {

                return ""
            }

        }
        function oturumFormatter(value, index, row) {
            if (index.USER_STATUS=="Çevrimiçi") {
                return '<img id="logoff" style="cursor:pointer" onclick="logoff(' + index.LOG_ID + ')" src="/assets/img/icons/unicons/power-off.png"/>';
            }
            else{
                return "-";
            }


        }
        function logoff(value) {
            Swal.fire({
                title: 'Kullanıcının oturumunu kapatmak istediğinize emin misiniz? ',
                icon: 'question',
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: 'Evet',
                cancelButtonText: 'Hayır',
                confirmButtonColor: '#03c3ec',
                confirmButtonBorderColor: '#03c3ec',
                cancelButtonColor: '#ff3e1d',
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    var url = "http://192.168.2.13:83/api/userlogin/exec/logoff/" + value;
                    $.getJSON(url, function (data) {

                    }).done(function () {
                        $('#table').bootstrapTable('destroy');
                        document.getElementById("trid").replaceChildren();
                        $('#table').bootstrapTable({
                            url: 'http://192.168.2.13:83/api/userlogin/exec/lastseen',
                            columns: [
                                {
                                    field: 'LOG_ID',
                                    title: 'Oturum Numarası',
                                    sorter: 'dataSorter',
                                    sortable: true,
                                    visible: false

                                },
                                {
                                    field: 'USER_NAME',
                                    title: 'Kullanıcı Adı',
                                    formatter: 'userFormatter'
                                },
                                {
                                    field: 'LAST_SEEN',
                                    title: 'Son Görülme',
                                    formatter: 'userFormatter'
                                },
                                {
                                    field: 'USER_STATUS',
                                    title: 'Durum',
                                    formatter: 'userFormatter'
                                },
                                {
                                    field: 'LAST_ACTIVITY',
                                    title: 'Son Aktivite',
                                    formatter: 'aktiviteFormatter'
                                },
                                {
                                    field: '',
                                    title: 'Oturum',
                                    formatter: 'oturumFormatter'

                                }

                            ]

                        })
                    });

                }
            })

        }

        var type = 'fa'

        function loadingTemplate(message) {
            if (type === 'fa') {
                return '<div class="heart"><img id="progress" src="/images/novasaydam.png" style="max-width:15vw" /></div>'
            }
            if (type === 'pl') {
                return '<div class="ph-item"><div class="ph-picture"></div></div>'
            }
        }

    </script>
</div>







