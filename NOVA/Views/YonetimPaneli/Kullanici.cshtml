@{
    Layout = "/Views/Shared/_Layout_yonetim.cshtml";
}
<!DOCTYPE html>
@model Tuple<NOVA.Models.User,NOVA.Models.Mail> 



<html lang="en"
      class="light-style layout-menu-fixed"
      dir="ltr"
      data-theme="theme-default"
      data-assets-path="../assets/"
      data-template="vertical-menu-template-free">
<head>

    <style>
        .results tr[visible='false'],
        .no-result {
            display: none;
        }

        .results tr[visible='true'] {
            display: table-row;
        }

        .counter {
            padding: 8px;
            color: #ccc;
        }

        .full-width-div {
            position: absolute;
            width: 100%;
            left: 0;
        }

        .sticky {
            position: fixed;
            top: 0;
        }
    </style>
</head>

<body onclose="close()">


    <!-- Content wrapper -->
    <div class="content-wrapper">
        <!-- Content -->

        <div class="container flex-grow-0">
            @if (ViewBag.Durum != null)
            {
            if (ViewBag.Durum.ToString() == "Kullanıcı başarıyla eklendi!")
            {
            <div class="alert alert-success" role="alert">
                <a class="closebtn" onclick="this.parentElement.style.display='none';">&times;</a>
                @ViewBag.Durum.ToString()
            </div>
            }
            else if (ViewBag.Durum.ToString() == "Kullanıcı eklenemedi!")
            {
            <div class="alert alert-danger" role="alert">
                <a class="closebtn" onclick="this.parentElement.style.display='none';">&times;</a>
                @ViewBag.Durum.ToString()
            </div>
            }
            }
            @{ 
                string update = "disabled";
                string delete = "disabled";
                string insert = "disabled";
                if (ViewBag.Update != null)
                {
                    update = "";
                }
                if (ViewBag.Delete != null)
                {
                    delete = "";
                }
                if (ViewBag.Insert != null)
                {
                    insert = "";
                }
            }
            <div class="row"><h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Yönetim Paneli/</span>Kullanıcı Tablosu</h4></div>
            <div class="row mb-3" style="display:none">

                <span data-bs-toggle="modal" data-bs-target="#">
                    <a data-bs-toggle="tooltip" data-bs-offset="0,4" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<i class='bx bxs-file' ></i> <span>Stok Listesini Excel Formatında Mail Olarak Al</span>" class="btn btn-success float-start bx bxl-gmail bx-tada">

                    </a>
                </span>
            </div>
            <div class="row mt-2">
                <div class="col">
                    <select data-bs-toggle="tooltip" data-bs-offset="0,4" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<i class='bx bxs-info-circle bx-xs' ></i> <span>Tablo içinde gösterilecek kişi sayısı</span>" class="form-select dropdown-toggle" id="maxRows">

                        <option value="5000">Hepsini Göster</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                    </select>
                </div>
                <div class="col">


                </div>

                <div class="col">
                    <div class="row">
                        <div class="col">
                            <button data-bs-toggle="tooltip" data-bs-offset="0,4" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<i class='bx bxs-info-circle bx-xs' ></i> <span>Tüm Kullanıcılara Bilgi Gönderimi Yapar</span>" class="btn btn-success float-end bx bx-mail-send me-1" onclick="location.href='@Url.Action("MailFormuToplu","YonetimPaneli")'">

                            </button>
                        </div>
                        <div class="col-2">
                            <span data-bs-toggle="modal" data-bs-target="#modalCenter">
                                <button data-bs-toggle="tooltip" data-bs-offset="0,4" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<i class='bx bxs-info-circle bx-xs' ></i> <span>Yeni Kullanıcı Ekleme Formunu Açar</span>" class="btn btn-success float-end bx bxs-user-plus" @insert>

                                </button>
                            </span>
                        </div>
                    </div>



                </div>

                <div class="modal fade" id="ModulEkle" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog modal-m" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="modalCenterTitle">Modül Ekleme Formu</h5>
                                <button type="button"
                                        class="btn-close"
                                        data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                            </div>

                        </div>
                    </div>
                </div>



                <div class="modal fade" id="modalCenter" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="modalCenterTitle">Yeni Kullanıcı Ekleme Formu</h5>
                                <button type="button"
                                        class="btn-close"
                                        data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                            </div>
                            @{

                                using (Html.BeginForm("AddUser", "YonetimPaneli", FormMethod.Post, new { @id = "myFormAdd" }))
                                {
                                    <div class="modal-body">
                                        <div class="form-group">
                                            <label>USER NAME:</label>
                                            @Html.TextBoxFor(Model => Model.Item1.USER_NAME, new { @class = "form-control" })
                                        </div>
                                        <div class="form-group">
                                            <label>USER ROLE:</label>

                                            @Html.DropDownListFor(Model => Model.Item1.USER_ROLE, (SelectList)ViewBag.Roles, htmlAttributes: new { @class = "form-select dropdown-toggle" })
                                        </div>
                                        <div class="form-group">
                                            <label>USER FIRST NAME:</label>
                                            @Html.TextBoxFor(Model => Model.Item1.USER_FIRSTNAME, new { @class = "form-control" })
                                        </div>
                                        <div class="form-group">
                                            <label>USER LAST NAME:</label>
                                            @Html.TextBoxFor(Model => Model.Item1.USER_LASTNAME, new { @class = "form-control" })
                                        </div>
                                        <div class="form-group">
                                            <label>USER MAIL:</label>
                                            @Html.TextBoxFor(Model => Model.Item1.USER_MAIL, new { @class = "form-control" })
                                        </div>

                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="ekle btn btn-outline-info" onclick="myEkleFunction()" data-bs-dismiss="modal">EKLE</button>
                                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">KAPAT</button>
                                    </div>
                                }
                            }


                        </div>
                    </div>
                </div>

            </div>
            <hr class="my-3" />
            <!-- Striped Rows -->
            <div class="card" style="max-height:600px">
                <div class="table-responsive text-nowrap">
                    <table class="table table-striped table-hover results sorttable centered" id="sortTable">
                        <thead class="centered">
                            <tr>
                                <th style="background-color:white">ID</th>
                                <th style="background-color:white">User Name</th>
                                <th style="background-color:white">Password</th>
                                <th style="background-color:white">First Name</th>
                                <th style="background-color:white">Last Name</th>
                                <th style="text-align: center;background-color:white">Role</th>
                                <th style="background-color:white">Mail</th>
                                <th style="background-color:white">Active</th>
                                <th style="background-color:white">Edit</th>
                            </tr>
                        </thead>
                        <tbody class="table-border-bottom-0">
                            @{
                                int a = 0;

                                foreach (var urn in ViewBag.Users)
                                {
                                    using (Html.BeginForm("KullaniciAyar", "YonetimPaneli", FormMethod.Post, new { @id = "myFormKaydet" }))
                                    {


                                        <tr>
                                            <td scope="row">@Html.LabelFor(Model => Model.Item1.USER_ID, (String)urn.USER_ID) @Html.TextBoxFor(Model => Model.Item1.USER_ID, new { @Value = urn.USER_ID, Style = "display: none;" })</td>
                                            <td>@Html.LabelFor(Model => Model.Item1.USER_NAME, (String)urn.USER_NAME) @Html.TextBoxFor(Model => Model.Item1.USER_NAME, new { @Value = urn.USER_NAME, Style = "display: none;" })</td>
                                            <td>@Html.TextBoxFor(Model => Model.Item1.USER_PASSWORD, new { @Value = urn.USER_PASSWORD, Style = "background-color: transparent;border: none;width:90px;text-align:center" })</td>
                                            <td>@Html.TextBoxFor(Model => Model.Item1.USER_FIRSTNAME, new { @Value = urn.USER_FIRSTNAME, Style = "background-color: transparent;width:80px;border: none;text-align:center" })</td>
                                            <td>@Html.TextBoxFor(Model => Model.Item1.USER_LASTNAME, new { @Value = urn.USER_LASTNAME, Style = "background-color: transparent;border: none;" })</td>
                                            <td>@Html.DropDownListFor(Model => Model.Item1.USER_ROLE, new SelectList(ViewBag.Roles1, "ROLE_ID", "ROLE_NAME", (String)urn.USER_ROLE), htmlAttributes: new { @class = "form-select dropdown-toggle", Style = "background-color: transparent;border: none;text-align:center;" })</td>
                                            <td>@Html.TextBoxFor(Model => Model.Item1.USER_MAIL, new { @Value = urn.USER_MAIL, Style = "background-color: transparent;border: none;width:auto;text-align:center" })</td>
                                            @if (urn.ACTIVE == true)
                                            {
                                                <td>@Html.CheckBoxFor(Model => Model.Item1.ACTIVE, new { @checked = true, @class = "form-check-input info", Style = "text-align:center," })</td>
                                            }
                                            else
                                            {
                                                <td>@Html.CheckBoxFor(Model => Model.Item1.ACTIVE, new { @unchecked = true, @class = "form-check-input info", Style = "text-align:center" })</td>
                                            }
                                            @{ var s = "submitbutton" + a; var s1 = "deletebutton" + a;}
                                            <td>
                                                <div class="dropdown">
                                                    <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                                        <i class="bx bx-dots-vertical-rounded"></i>
                                                    </button>
                                                    <div class="dropdown-menu">

                                                        <button type="button" class="dropdown-item" value="@a" onclick="myUpdateFunction(this.value)" @update><i class="bx bx-edit-alt me-1"></i>GÜNCELLE</button>
                                                        <button type="submit" class="dropdown-item" style="display:none" id=@s name="submitbutton1"><i class="bx bx-edit-alt me-1"></i>GÜNCELLE</button>
                                                        <button type="button" class="dropdown-item" value="@a" onclick="myDeleteFunction(this.value)" @delete><i class="bx bx-trash me-1"></i>SİL</button>
                                                        <button type="submit" class="dropdown-item" style="display:none" id=@s1 name="submitbutton2"><i class="bx bx-trash me-1"></i>SİL</button>

                                                    </div>
                                                </div>
                                            </td>


                                        </tr>


                                    }
                                    a++;
                                }


                            }
                        </tbody>
                    </table>

                </div>

            </div>
            <!--/ Striped Rows -->


        </div>
    </div>
    <!-- / Content -->
    <!-- Footer -->
    <!-- / Footer -->
    <!-- / Layout wrapper -->
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script type="text/javascript">
        document.getElementById("yonetimpaneli").className = "menu-item open active";
        document.getElementById("kullanici").className = "menu-item active";
        function myUpdateFunction(clicked_value) {
            var s = "submitbutton" + clicked_value;
            Swal.fire({
                title: 'Yaptığınız değişiklikten emin misiniz?',
                icon: 'question',
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: 'Evet',
                cancelButtonText: 'Hayır',
                confirmButtonColor: '#03c3ec',
                confirmButtonBorderColor: '#03c3ec',
                cancelButtonColor: '#ff3e1d',
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    Swal.fire(
                        'Başarılı!',
                        'Değişiklik yapıldı',
                        'success'
                    )
                    document.getElementById(s).click();
                }
            })
        }
        function myDeleteFunction(clicked_value) {
            var s = "deletebutton" + clicked_value;
            Swal.fire({
                title: 'Kullanıcıyı silmek istediğinizden emin misiniz?',
                icon: 'question',
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: 'Evet',
                cancelButtonText: 'Hayır',
                confirmButtonColor: '#03c3ec',
                confirmButtonBorderColor: '#03c3ec',
                cancelButtonColor:'#ff3e1d',
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    Swal.fire(
                        'Başarılı!',
                        'Değişiklik yapıldı',
                        'success'
                    )
                    document.getElementById(s).click();
                }
            })
        }
        function myEkleFunction() {
            Swal.fire({
                title: 'Kullanıcıyı eklemek istediğinizden emin misiniz?',
                icon: 'question',
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: 'Evet',
                cancelButtonText: 'Hayır',
                confirmButtonColor: '#03c3ec',
                confirmButtonBorderColor: '#03c3ec',
                cancelButtonColor: '#ff3e1d',
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {

                    document.getElementById("myFormAdd").submit();
                }
            })
        }
          function close() {
            @{Session["Durum"] = null;
            }
        }

    </script>
</body>
</html>

