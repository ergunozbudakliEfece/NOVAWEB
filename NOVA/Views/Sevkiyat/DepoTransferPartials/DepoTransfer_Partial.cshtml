<div class="flex-column px-0 pt-2">
    <div class="row w-100 d-flex justify-content-start align-items-center belge-bilgi mb-2" style="padding-left: 1rem; row-gap: 0.5rem;">
        <div class="col-sm-auto" style="padding-right: 0;"><span><b id="BELGE_NO" style="font-size: large;">-</b></span></div>
        <div class="col-sm-auto d-flex justify-content-start align-items-center" style="line-height: normal; gap: 0.5rem;">
            <div class="form-check form-switch mx-1" style="min-height:0 !important;">
                <input class="form-check-input" type="checkbox" id="BELGE_DURUMU" style="transform:Scale(1.25);width:2rem !important;" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<span>Belge Durumu</span>" checked disabled>
            </div>

            <i data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<span>Belgeleri Getir</span>" onclick="BelgeListesi()" class="bi bi-file-earmark-ruled-fill showmodal" style="color:#203289; font-size: x-large;"></i>
            <i data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<span>Yeni Belge Oluştur</span>" onclick="YeniBelgeOlustur()" id="YeniBelgeOlusturButton" class="bi bi-file-earmark-plus-fill i-disabled" style="color:#203289; font-size: x-large;"></i>
            <i data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<span>Araç Bilgi Girişi</span>" onclick="AracBilgiGiris()" id="AracBilgiGirisButton" class="bx bxs-truck" style="color:#203289; font-size: x-large;"></i>
        </div>

        <div class="col" style="display: flex; justify-content: end; align-items: baseline; gap: 0.5rem;">
            <p id="TONAJ_PROGRESS" class="meter mt-1" style="height: auto;border: 1px solid #d9dee3;border-radius: 5px;width:160px;" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<span>TONAJ BİLGİSİ BULUNAMADI</span>">
                <span id="TONAJ_ORAN" style="width: 0%; display: block; background-color: #07e655; animation: progressBar 1s ease-in-out; animation-fill-mode: both; ">
                    <span class="progress custom-progress" id="progress-msip" style=" height: 1.5rem; border-radius: 0.25rem !important;">
                        <span id="TONAJ_ORAN_TEXT" style="text-align: end; font-size: initial; text-wrap: nowrap;">
                            0%<span>
                            </span>
                        </span>
            </p>
        </div>
    </div>
    <div class="row w-100 d-flex justify-content-start align-items-center belge-bilgi" style="padding-left: 1rem; row-gap: 0.5rem;">
        <div class="col-12 col-sm-6 col-md-3">
            <div class="form-label-group outline m-0">
                <input type="text" id="CIKIS_DEPO" class="form-control" placeholder="ÇIKIŞ DEPO" autocomplete="off" />
                <span><label for="CIKIS_DEPO">ÇIKIŞ DEPO</label></span>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-md-3">
            <div class="form-label-group outline m-0">
                <input type="text" id="GIRIS_DEPO" class="form-control" placeholder="GİRİŞ DEPO" autocomplete="off" />
                <span><label for="GIRIS_DEPO">GİRİŞ DEPO</label></span>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-md-3">
            <div class="form-label-group outline m-0">
                <input type="text" id="PLAKA" class="form-control" placeholder="PLAKA" autocomplete="off" />
                <span><label for="PLAKA">PLAKA</label></span>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-md-3">
            <div class="form-label-group outline m-0">
                <input type="text" id="SOFOR" class="form-control" placeholder="ŞOFÖR" autocomplete="off" />
                <span><label for="SOFOR">ŞOFÖR</label></span>
            </div>
        </div>
    </div>
</div>
<div id="ScrollArea" class="modal-body p-0" style="overflow-x:hidden !important;">
    <div class="container-fluid pt-2 px-3" style="overflow-x:hidden !important;">
        <div class="row gx-2 gy-2">
            <div class="col-md-5 ms-auto">
                <div class="form-label-group outline autocomplete m-0">
                    <input type="text" id="STOK_ADLARI" class="form-control" placeholder="STOK ADLARI" value="" autocomplete="off" disabled />
                    <span><label for="STOK_ADLARI">STOK ADI</label></span>
                </div>
            </div>
            <div class="col-md-4 ms-auto" style="display:flex;gap:0.5rem;">
                <div class="col">
                    <div class="form-label-group outline autocomplete m-0">
                        <input type="text" id="SERI_NO" class="form-control" placeholder="BARKOD NO" value="" autocomplete="off" />
                        <span><label for="SERI_NO">BARKOD NO</label></span>
                    </div>
                </div>
                <div class="col">
                    <button type="button" id="BarkodButton" onclick="BarkodModal()" class="btn btn-primary showmodal" style="width:100%;" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<span>Barkod</span>" disabled>
                        <i class="bi bi-qr-code-scan"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-3 ms-auto">
                <div class="row gx-2 gy-2">
                    <div class="col">
                        <button type="button" id="BARKOD_LISTE_BUTTON" onclick="SeriNoListesi()" class="btn btn-primary showmodal" style="width:100%;" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<span>Seri Listesi</span>" disabled><i class="bi bi-list-ul"></i></button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row gx-2 gy-2 mt-3">
            <div class="col-sm-3 col-6 m-auto">
                <div class="form-label-group outline m-0">
                    <input type="number" id="MIKTAR" class="form-control" step="0.01" placeholder="MİKTAR 1" min="0.00" disabled />
                    <span><label for="MIKTAR">MİKTAR 1</label></span>
                </div>
            </div>
            <div class="col-sm-3 col-6 m-auto">
                <div class="form-label-group outline m-0">
                    <input type="text" id="OLCU_BR1" class="form-control" value="" placeholder="ÖLÇÜ BİRİMİ 1" disabled="disabled" />
                    <span><label for="OLCU_BR1">ÖLÇÜ BİRİMİ 1</label></span>
                </div>
            </div>
            <div class="col-sm-3 col-6 m-auto miktarbirim">
                <div class="form-label-group outline m-0">
                    <input type="number" id="MIKTAR2" class="form-control" step="0.01" placeholder="MİKTAR 2" min="0.00" disabled />
                    <span><label for="MIKTAR2">MİKTAR 2</label></span>
                </div>
            </div>
            <div class="col-sm-3 col-6 m-auto miktarbirim">
                <div class="form-label-group outline m-0">
                    <input type="text" id="OLCU_BR2" class="form-control" value="" placeholder="ÖLÇÜ BİRİMİ 2" disabled="disabled" />
                    <span><label for="OLCU_BR2">ÖLÇÜ BİRİMİ 2</label></span>
                </div>
            </div>
        </div>

        <div class="row my-3">
            <div class="accordion accordion-flush" id="accordionFlushExample">
                <div class="accordion-item">
                    <h2 class="accordion-header">
                        <button class="accordion-button bg-secondary collapsed" style="color:#fff" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">Ek Bilgiler</button>
                    </h2>
                    <div id="flush-collapseOne" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
                        <div class="accordion-body p-3">

                            <div class="row gy-3">
                                <div class="col-12 col-sm-4 col-lg">
                                    <div class="form-label-group outline m-0">
                                        <input type="text" id="ACIK1" class="form-control" autocomplete="off" value="-" disabled />
                                        <span><label for="ACIK1">KALINLIK</label></span>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-4 col-lg">
                                    <div class="form-label-group outline m-0">
                                        <input type="text" id="ACIK2" class="form-control" autocomplete="off" value="-" disabled />
                                        <span><label for="ACIK2">GENİŞLİK</label></span>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-4 col-lg">
                                    <div class="form-label-group outline m-0">
                                        <input type="text" id="ACIK3" class="form-control" autocomplete="off" value="-" disabled />
                                        <span><label for="ACIK3">ÜRÜN NO</label></span>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-4 col-lg">
                                    <div class="form-label-group outline m-0">
                                        <input type="text" id="SERI_NO_3" class="form-control" autocomplete="off" value="-" disabled />
                                        <span><label for="SERI_NO_3">KALİTE</label></span>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-4 col-lg">
                                    <div class="form-label-group outline m-0">
                                        <input type="text" id="SERI_NO_4" class="form-control" autocomplete="off" value="-" disabled />
                                        <span><label for="SERI_NO_4">KAPLAMA</label></span>
                                    </div>
                                </div>


                                <div class="col-12 col-sm-4 col-lg" style="display: none;">
                                    <div class="form-label-group outline m-0">
                                        <input type="text" id="ACIKLAMA_4" class="form-control" autocomplete="off" value="-" disabled />
                                        <span><label for="ACIKLAMA_4">MENŞEİ</label></span>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-4 col-lg" style="display: none;">
                                    <div class="form-label-group outline m-0">
                                        <input type="text" id="ACIKLAMA_5" class="form-control" autocomplete="off" value="-" disabled />
                                        <span><label for="ACIKLAMA_5">ESKİ BOBİN NO</label></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-4 gy-2">
            <div class="col" style="display:none;" id="ekle">
                <button type="button" id="eklebutton" onclick="KayitEkle()" class="btn btn-primary" style="width:100%;" disabled>EKLE</button>
            </div>
            <div class="col" style="display:none;" id="guncelle">
                <button type="button" id="guncellebutton" onclick="KayitGuncelle()" class="btn btn-primary" style="width: 100%;" disabled>GÜNCELLE</button>
            </div>
            <div class="col" style="display:none;" id="iptal">
                <button type="button" id="iptalbutton" onclick="GuncellemeIptal()" class="btn btn-primary" style="width: 100%;">İPTAL</button>
            </div>
        </div>

        <div class="row mt-2">
            <div class="card-body p-0">
                <div id="TempTableToolbar">
                    <div class="row my-2 gap-2">
                        <div class="col-sm-auto d-flex justify-content-start gap-2 pe-0">
                            <div class="d-flex justify-content-center align-items-center mx-2"><div style="width: 1.25rem; height: 1.25rem; background-color: #e9ebff; margin-right: 0.2rem; "></div>AÇIK</div>
                            <div class="d-flex justify-content-center align-items-center"><div style="width: 1.25rem; height: 1.25rem; background-color: #FAEAEA; margin-right: 0.2rem; "></div>KAPALI</div>
                            <div class="d-flex justify-content-center align-items-center">
                                <button class="btn btn-primary" style="margin-left: 0.2rem;" onclick="TOPLAM_OZET()">
                                    Σ
                                </button>
                            </div>
                        </div>
                        <div class="col ps-0">
                            <input class="form-control" type="text" placeholder="Ara" id="customSearchTempTable" />
                        </div>
                    </div>
                </div>

                <div class="table-responsive">
                    <table id="DepoTransferTable"
                           data-data="[]"
                           data-search="true"
                           data-search-selector="#customSearchTempTable"
                           data-show-refresh="false"
                           data-show-toggle="false"
                           data-show-fullscreen="false"
                           data-show-columns="false"
                           data-show-columns-toggle-all="false"
                           data-detail-view="false"
                           data-show-export="false"
                           data-click-to-select="true"
                           data-minimum-count-columns="2"
                           data-show-pagination-switch="false"
                           data-page-size="5"
                           data-page-list="[5,20,50,100]"
                           data-pagination="false"
                           data-id-field="id"
                           data-show-footer="false"
                           data-mobile-responsive="true"
                           data-response-handler="responseHandler"
                           data-locale="tr-TR"
                           data-row-style="TabloSatirStili"
                           data-toggle="table">
                        <thead>
                            <tr>
                                <th data-formatter="NullCheck" data-field="SERI_NO" data-sortable="true" data-halign="center" data-align="center">BARKOD NO</th>
                                <th data-formatter="NullCheck" data-field="STOK_ADI" data-sortable="true" data-halign="center" data-align="center">STOK ADI</th>
                                <th data-formatter="MiktarFormatla" data-field="MIKTAR" data-sortable="true" data-halign="center" data-align="center">MİKTAR 1</th>
                                <th data-formatter="NullCheck" data-field="OLCU_BR1" data-sortable="true" data-halign="center" data-align="center">BİRİM 1</th>
                                <th data-formatter="MiktarFormatla" data-field="MIKTAR2" data-sortable="true" data-halign="center" data-align="center">MİKTAR 2</th>
                                <th data-formatter="NullCheck" data-field="OLCU_BR2" data-sortable="true" data-halign="center" data-align="center">BİRİM 2</th>
                                <th data-formatter="KalinlikFormatter" data-field="ACIK1" data-sortable="true" data-halign="center" data-align="center">KALINLIK</th>
                                <th data-formatter="GenislikFormatter" data-field="ACIK2" data-sortable="true" data-halign="center" data-align="center">GENİŞLİK</th>
                                <th data-formatter="NullCheck" data-field="ACIK3" data-sortable="true" data-halign="center" data-align="center">ÜRÜN NO</th>
                                <th data-formatter="NullCheck" data-field="SERI_NO_3" data-sortable="true" data-halign="center" data-align="center">KALİTE</th>
                                <th data-formatter="NullCheck" data-field="SERI_NO_4" data-sortable="true" data-halign="center" data-align="center">KAPLAMA KALINLIĞI</th>
                                <th data-formatter="DepoFormatter" data-field="GIRIS_DEPO" data-sortable="true" data-halign="center" data-align="center">GÖNDERİLEN DEPO</th>
                                <th data-formatter="DepoTransferIslemFormatter" data-halign="center" data-align="center">İŞLEM</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>

    </div>
</div>

<div class="modal-footer d-flex justify-content-center align-items-center">
    <button id="belgekaydetbtn" class="btn btn-primary" type="button" onclick="Kaydet()" disabled>KAYDET</button>
    <button id="belgesilbtn" class="btn btn-warning" type="button" onclick="Sil()" style="display:none;">SİL</button>
</div>


<script>
    var KayitTipi = 0;
    var SayfaTipi = 9;

    var Kayitlar = [];
    var KayitId = 0;

    var GuncellenenId = -1;
    var Silinecek_Kayitlar = [];

    var Depolar = [];
    var GirisDepo = -1;
    var CikisDepo = -1;

    var SeciliStokKodu = "";

    $(document).ready(() => {
        DepoGetir();
        DurumDegisikligi(0);
        BelgeyiKaydetButonKontrol();
        EkranBoyutDegisikligi();
        LocalStorageCheck();

        $('#DepoTransferTable').bootstrapTable('destroy');
        $('#DepoTransferTable').bootstrapTable({ data: Kayitlar });

        BelgeNoGetir().then((data) => {

            BELGE_NO = data;
            $('#BELGE_NO').html(data);
            BelgeNoFormat();
            HideProgress();
        });
    });

    $(document).on("click", () => {
        BelgeyiKaydetButonKontrol();
    });

    function DurumDegisikligi(Durum) {
        switch (Durum) {
            case 0:
                var BelgeDurumu = $("#BELGE_DURUMU").is(':checked');

                $('#STOK_ADLARI').val('');
                $('#STOK_ADLARI').prop("disabled", KayitTipi == 1 && BelgeDurumu ? false : true);

                $('#BarkodButton').prop("disabled", BelgeDurumu && CikisDepo != -1 && GirisDepo != -1 ? false : true);
                $("#BARKOD_LISTE_BUTTON").prop("disabled", true);

                $('#MIKTAR').val("");
                $("#MIKTAR").prop("disabled", true);

                $('#MIKTAR2').val("");
                $("#MIKTAR2").prop("disabled", true);

                $("#OLCU_BR1").val("");
                $("#OLCU_BR2").val("");

                $("#ACIK1").val("");
                $("#ACIK2").val("");
                $("#ACIK3").val("");

                $("#SERI_NO_3").val("");
                $("#SERI_NO_4").val("");

                $("#SERI_NO").val("");
                $("#SERI_NO").prop("disabled", true);

                BarkodNoOtomatikTamamlama([]);
                MiktarGirisKontrolu();
                TabloButonAyarla(0);
                break;
            case 1:

                $('#STOK_ADLARI').prop("disabled", true);

                $('#BarkodButton').prop("disabled", true);
                $("#BARKOD_LISTE_BUTTON").prop("disabled", true);

                $("#MIKTAR").prop("disabled", false);
                $("#MIKTAR2").prop("disabled", false);

                $("#SERI_NO").prop("disabled", true);

                MiktarGirisKontrolu();
                TabloButonAyarla(2);
                break;
        };
    }

    function TabloButonAyarla(Durum) {
        switch (Durum) {
            case 0:
                $("#ekle").hide();
                $("#guncelle").hide();
                $("#iptal").hide();
                break;
            case 1:
                $("#ekle").show();
                $("#guncelle").hide();
                $("#iptal").hide();
                break;
            case 2:
                $("#ekle").hide();
                $("#guncelle").show();
                $("#iptal").show();
                break;
        };
    }

    function BelgeyiKaydetButonKontrol() {
        if (Kayitlar.length > 0 && $("#BELGE_DURUMU").is(':checked')) {
            $('#belgekaydetbtn').prop("disabled", false);
        }
        else {
            $('#belgekaydetbtn').prop("disabled", true);
        }
    }

    var StokAdlari = [];

    function StokAdlariGetir() {
        $.ajax({
            url: "http://192.168.2.13:83/api/stok/rehber/",
            type: 'GET',
            success: function (result) {
                if (result.length > 0) {
                    StokAdlari = result;
                    StokAdlariOtomatikTamamlama(result);
                }
            }
        });
    }

    function BarkodNoGetir(STOK_KODU) {
        SeciliStokKodu = STOK_KODU;

        var Liste = [];

        $.ajax({
            url: "http://192.168.2.13:83/api/seri/rehber/" + STOK_KODU + "/" + CikisDepo,
            type: 'GET',
            success: function (result) {
                for (var i = 0; i < result.length; i++) {
                    Liste.push(result[i].SERI_NO);
                }
            }
        }).then(() => {
            var result = Liste.filter(x => {
                return !Kayitlar.some(k => k.SERI_NO === x)
            });

            BarkodNoOtomatikTamamlama(result);
        });


    }

    function DepoGetir() {
        $.ajax({
            url: "http://192.168.2.13:83/api/stok/depo",
            type: 'GET',
            success: function (result) {
                if (result.length > 0) {
                    Depolar = result;
                    DepoOtomatikTamamlama('GIRIS_DEPO', result);
                    DepoOtomatikTamamlama('CIKIS_DEPO', result);
                }
            }
        });
    }

    function BilgileriOku() {
        return {
            "ID": KayitId,
            "ACTIVE": true,
            "STOK_ADI": $('#STOK_ADLARI').val(),
            "STOK_KODU": SeciliStokKodu,
            "MIKTAR": LineCheck($("#MIKTAR").val()),
            "OLCU_BR1": LineCheck($("#OLCU_BR1").val()),
            "MIKTAR2": LineCheck($("#MIKTAR2").val()),
            "OLCU_BR2": LineCheck($("#OLCU_BR2").val()),
            "SERI_NO": LineCheck($("#SERI_NO").val()),
            "ACIK1": LineCheck($("#ACIK1").val()),
            "ACIK2": LineCheck($("#ACIK2").val()),
            "ACIK3": LineCheck($("#ACIK3").val()),
            "SERI_NO_3": LineCheck($("#SERI_NO_3").val()),
            "SERI_NO_4": LineCheck($("#SERI_NO_4").val()),
            "ACIKLAMA_4": LineCheck($("#ACIKLAMA_4").val()),
            "ACIKLAMA_5": LineCheck($("#ACIKLAMA_5").val()),
            "GIRIS_DEPO": GirisDepo,
            "CIKIS_DEPO": CikisDepo,
            "PLAKA": $('#PLAKA').val() == '' ? null : $('#PLAKA').val(),
            "SOFOR": $('#SOFOR').val() == '' ? null : $('#SOFOR').val()
        };
    }

    function BilgileriDoldur(Kayit) {
        $('#STOK_ADLARI').val(Kayit.STOK_ADI);

        $('#SERI_NO').val(Kayit.SERI_NO);

        $("#MIKTAR").val(Kayit.MIKTAR);
        $("#OLCU_BR1").val(Kayit.OLCU_BR1);
        $("#MIKTAR2").val(Kayit.MIKTAR2);
        $("#OLCU_BR2").val(Kayit.OLCU_BR2);

        $("#ACIK1").val(Kayit.ACIK1);
        $("#ACIK2").val(Kayit.ACIK2);
        $("#ACIK3").val(Kayit.ACIK3);

        $("#SERI_NO_3").val(Kayit.SERI_NO_3);
        $("#SERI_NO_4").val(Kayit.SERI_NO_4);

        $("#ACIKLAMA_4").val(Kayit.ACIKLAMA_4);
        $("#ACIKLAMA_5").val(Kayit.ACIKLAMA_5);
    }

    function BilgileriGoster(Id) {
        var Kayit = Kayitlar.filter(x => x.ID == Id);

        if (Kayit.length > 0) {
            BilgileriDoldur(Kayit[0]);
            DurumDegisikligi(1);

            GuncellenenId = Kayit[0].ID;

            var GirisDep = Depolar.filter(x => x.DEPO_KODU == Kayit[0].GIRIS_DEPO)[0];
            var CikisDep = Depolar.filter(x => x.DEPO_KODU == Kayit[0].CIKIS_DEPO)[0];

            GirisDepo = GirisDep.DEPO_KODU;
            CikisDepo = CikisDep.DEPO_KODU;

            $('#GIRIS_DEPO').val(GirisDep.DEPO_ISMI);
            $('#CIKIS_DEPO').val(CikisDep.DEPO_ISMI);

            SeciliBarkodVar = true;

            let ESKI_MIKTAR = Kayit[0].MIKTAR;
            let ESKI_MIKTAR2 = Kayit[0].MIKTAR2;

            $.ajax({
                url: "http://192.168.2.13:83/api/seri/bakiye/" + Kayit[0].SERI_NO + "/" + CikisDepo,
                type: 'GET',
                success: function (result) {
                    switch (KayitTipi) {
                        case 0:
                            $('#MIKTAR').prop('max', parseInt(result[0].MIKTAR));
                            $('#MIKTAR2').prop('max', parseInt(result[0].MIKTAR2));
                            break;
                        case 1:
                            $('#MIKTAR').prop('max', parseInt(result[0].MIKTAR) + parseInt(ESKI_MIKTAR));
                            $('#MIKTAR2').prop('max', parseInt(result[0].MIKTAR2) + parseInt(ESKI_MIKTAR2));
                            break;
                    }
                }
            });
        }
    }

    function AlanlariTemizle() {
        $('#MIKTAR').val("");
        $('#MIKTAR2').val("");

        $('#ACIK1').val("");
        $('#ACIK2').val("");
        $('#ACIK3').val("");

        $('#SERI_NO_3').val("");
        $('#SERI_NO_4').val("");

        $("#ACIKLAMA_4").val("");
        $("#ACIKLAMA_5").val("");
    }
</script>

<script>
    function KayitEkle() {
        if ($('#SERI_NO').val().trim().length != 0) {
            Kayitlar.push(BilgileriOku());
            KayitId += 1;
            LocalStorageTrigger();
            DurumDegisikligi(0);
            $('#STOK_ADLARI').prop("disabled", false);
            $('#BarkodButton').prop("disabled", CikisDepo != -1 && GirisDepo != -1 ? false : true);

            $('#DepoTransferTable').bootstrapTable("load", Kayitlar);
            TonajGuncelle();
        }
        else {
            Swal.fire({
                text: "Barkod no boş geçilemez.",
                icon: "error",
                showConfirmButton: false,
                timer: '1500'
            });
        }
    }

    function KayitGuncelle() {
        var Bilgi = BilgileriOku();

        Kayitlar[GuncellenenId].MIKTAR = Bilgi.MIKTAR;
        Kayitlar[GuncellenenId].OLCU_BR1 = Bilgi.OLCU_BR1;
        Kayitlar[GuncellenenId].MIKTAR2 = Bilgi.MIKTAR2;
        Kayitlar[GuncellenenId].OLCU_BR2 = Bilgi.OLCU_BR2;
        Kayitlar[GuncellenenId].SERI_NO = Bilgi.SERI_NO;
        Kayitlar[GuncellenenId].ACIK1 = Bilgi.ACIK1;
        Kayitlar[GuncellenenId].ACIK2 = Bilgi.ACIK2;
        Kayitlar[GuncellenenId].ACIK3 = Bilgi.ACIK3;
        Kayitlar[GuncellenenId].SERI_NO_3 = Bilgi.SERI_NO_3;
        Kayitlar[GuncellenenId].SERI_NO_4 = Bilgi.SERI_NO_4;
        Kayitlar[GuncellenenId].ACIKLAMA_4 = Bilgi.ACIKLAMA_4;
        Kayitlar[GuncellenenId].ACIKLAMA_5 = Bilgi.ACIKLAMA_5;

        GuncellenenId = -1;

        $('#DepoTransferTable').bootstrapTable('load', Kayitlar);
        LocalStorageTrigger();

        DurumDegisikligi(0);
        TonajGuncelle();
    }

    function KayitSil(Id, BarkodNo) {
        Swal.fire({
            html: `<b>${BarkodNo}</b><br /> no'lu barkodu silmek istediğinize emin misiniz?`,
            icon: 'warning',
            showCancelButton: true,
            allowEnterKey: false,
            cancelButtonText: 'HAYIR',
            cancelButtonColor: '#d33',
            confirmButtonColor: '#3085d6',
            confirmButtonText: 'EVET',
            allowOutsideClick: false,
            customClass: 'AreYouSureAlert'
        }).then((result) => {
            if (result.isConfirmed) {
                Kayitlar = Kayitlar.filter(x => x.SERI_NO != BarkodNo);

                var Kayit = DuzenlenmemisBelgeler.filter(x => x.BELGE_NO == BELGE_NO && x.SERI_NO == BarkodNo);

                if (Kayit.length > 0) {
                    Silinecek_Kayitlar.push(BarkodNo);
                }

                if (Kayitlar.length == 0 && KayitTipi == 1) {
                    KalemleriSil().then(() => {
                        setTimeout("YeniBelge()", 50);
                    });
                }

                LocalStorageTrigger();


                $("#DepoTransferTable").bootstrapTable('load', Kayitlar);

                DurumDegisikligi(0);

                $('#STOK_ADLARI').prop("disabled", false);

                TonajGuncelle();
            }
        });
    }

    function GuncellemeIptal() {
        DurumDegisikligi(0);
        GuncellenenId = -1;
    }

    let KalemleriSil = async () => {
        const result = await Promise.all(Silinecek_Kayitlar.map(each => {
            $.ajax({
                url: `http://192.168.2.13:83/api/shipping/${BELGE_NO}/${each}`,
                type: 'DELETE',
                success: () => {
                }
            });
        }));

        return result;
    }
</script>

<script>
    function Kaydet()
    {
        if (GirisDepo != -1 && CikisDepo != -1)
        {
            if (Kayitlar.length > 0) {
                ShowProgress();

                KalemleriSil().then(() => {

                    switch (KayitTipi) {
                        case 0:
                            BelgeKaydet();
                            break;
                        case 1:
                            BelgeGuncelle();
                            break;
                    };
                });

            }
        }
        else
        {
            Swal.fire({
                text: "Depo seçimi tamamlanmadan kayıt işlemi yapılamaz",
                icon: "error",
                showConfirmButton: false,
                timer: '1500'
            });
        }
    }

    function BelgeKaydet()
    {
        var ProcUrl = "http://192.168.2.13:83/api/belge/exec/3";

        var BelgeNoDurumu = false;

        $.getJSON(ProcUrl, function (data) {
            BelgeNoDurumu = (BELGE_NO == data[0].SIRADAKI_BELGE_NO);
        }).done(() =>
        {
            if (BelgeNoDurumu) {
                for (var i = 0; i < Kayitlar.length; i++) {
                    var Item = {
                        "TYPE": SayfaTipi,
                        "SIPARIS_NO": 0,
                        "BELGE_NO": BELGE_NO,
                        "SERI_NO": Kayitlar[i].SERI_NO,
                        "STOK_KODU": Kayitlar[i].STOK_KODU,
                        "MIKTAR1": parseFloat(Kayitlar[i].MIKTAR),
                        "OLCU_BR1": Kayitlar[i].OLCU_BR1,
                        "MIKTAR2": parseFloat(Kayitlar[i].MIKTAR2),
                        "OLCU_BR2": Kayitlar[i].OLCU_BR2,
                        "ACIK1": Kayitlar[i].ACIK1,
                        "ACIK2": Kayitlar[i].ACIK2,
                        "ACIK3": Kayitlar[i].ACIK3,
                        "SERI_NO_3": Kayitlar[i].SERI_NO_3,
                        "SERI_NO_4": Kayitlar[i].SERI_NO_4,
                        "ACIKLAMA_4": Kayitlar[i].ACIKLAMA_4,
                        "ACIKLAMA_5": Kayitlar[i].ACIKLAMA_5,
                        "GIRIS_DEPO": Kayitlar[i].GIRIS_DEPO,
                        "CIKIS_DEPO": Kayitlar[i].CIKIS_DEPO,
                        "INS_USER_ID": @Request.Cookies["UserId"].Value,
                        "UPD_USER_ID": @Request.Cookies["UserId"].Value,
                        "EXP_1": null,
                        "EXP_2": null,
                        "EXP_3": null,
                        "PLAKA": Kayitlar[i].PLAKA,
                        "SOFOR": Kayitlar[i].SOFOR
                    };

                    $.ajax({
                        type: "POST",
                        url: "http://192.168.2.13:83/api/shipping",
                        data: JSON.stringify(Item),
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        success: function () {
                            GirisDepo = -1;
                            CikisDepo = -1;

                            Swal.fire(
                                'Başarılı!',
                                'İşlem başarılı',
                                'success'
                            );

                            YeniBelge();
                            HideProgress();
                            LocalStorageTrigger();
                            TonajGuncelle();
                        },
                        error: function (msg) {
                            Swal.fire(
                                'Hata Oluştu!',
                                'Girilen Stok Miktarlarını Kontrol Ediniz.',
                                'error'
                            );
                            console.log(msg)
                            HideProgress();
                        }
                    });
                }
            }
            else
            {
                BelgeNoDegisti();
            }
        });
    }

    async function BelgeGuncelle()
    {
        var BELGENO = BELGE_NO;
        var ESKI_SERILER = EskiBelgeler.map(x => x.SERI_NO);

        await GuncellemedenOnceSil(BELGENO, ESKI_SERILER);

        await GuncellemedenSonraEkle(BELGENO, Kayitlar).then(() =>
        {
            GirisDepo = -1;
            CikisDepo = -1;

            Swal.fire(
                'Başarılı!',
                'İşlem başarılı',
                'success'
            );

            YeniBelge();
            HideProgress();
            LocalStorageTrigger();
            TonajGuncelle();
        });
    }

    async function GuncellemedenOnceSil(BELGENO, SERILER)
    {
        for (const SERI of SERILER)
        {
            await axios.delete(`http://192.168.2.13:83/api/shipping/${BELGENO}/${SERI}`);
        }

        console.log(`Guncelleme Sonrası Silinen Seriler : ${JSON.stringify(SERILER)}`);
    }

    async function GuncellemedenSonraEkle(BELGENO, KAYITLAR)
    {
        for (const KAYIT of KAYITLAR)
        {
            var EskiBelge = EskiBelgeler.filter(x => x.SERI_NO == KAYIT.SERI_NO);

            var YENI_KAYIT = {
                "TYPE": SayfaTipi,
                "SIPARIS_NO": 0,
                "BELGE_NO": BELGENO,
                "SERI_NO": KAYIT.SERI_NO,
                "STOK_KODU": KAYIT.STOK_KODU,
                "MIKTAR1": parseFloat(KAYIT.MIKTAR),
                "OLCU_BR1": KAYIT.OLCU_BR1,
                "MIKTAR2": parseFloat(KAYIT.MIKTAR2),
                "OLCU_BR2": KAYIT.OLCU_BR2,
                "ACIK1": KAYIT.ACIK1,
                "ACIK2": KAYIT.ACIK2,
                "ACIK3": KAYIT.ACIK3,
                "SERI_NO_3": KAYIT.SERI_NO_3,
                "SERI_NO_4": KAYIT.SERI_NO_4,
                "ACIKLAMA_4": KAYIT.ACIKLAMA_4,
                "ACIKLAMA_5": KAYIT.ACIKLAMA_5,
                "GIRIS_DEPO": KAYIT.GIRIS_DEPO,
                "CIKIS_DEPO": KAYIT.CIKIS_DEPO,
                "INS_USER_ID": EskiBelge.length > 0 ? EskiBelge[0].INS_USER_ID : @Request.Cookies["UserId"].Value,
                "UPD_USER_ID": @Request.Cookies["UserId"].Value,
                "EXP_1": null,
                "EXP_2": null,
                "EXP_3": null,
                "PLAKA": KAYIT.PLAKA,
                "SOFOR": KAYIT.SOFOR
            };

            const Response = await axios.post('http://192.168.2.13:83/api/shipping', JSON.stringify(YENI_KAYIT), {
                headers: {
                    'Content-Type': 'application/json'
                }
            });
        }

        console.log(`Guncelleme Sonrası Eklenen Kayıtlar : ${JSON.stringify(KAYITLAR)}`);
    }

    function Sil()
    {
        Swal.fire({
            html: `<b>${BELGE_NO}</b><br/> no'lu form silinecek, emin misiniz?`,
            icon: 'warning',
            showCancelButton: true,
            cancelButtonText: 'HAYIR',
            cancelButtonColor: '#d33',
            confirmButtonColor: '#3085d6',
            allowEnterKey: false,
            confirmButtonText: 'EVET',
            allowOutsideClick: false
        }).then((result) => {
            if (result.isConfirmed) {
                ShowProgress();

                var Url = `http://192.168.2.13:83/api/shipping/${BELGE_NO}/0`;

                $.ajax({
                    url: Url,
                    type: 'DELETE',
                    success: function (result) {
                        Swal.fire({
                            text: "İşlem başarılı.",
                            icon: "success",
                            showConfirmButton: true,
                            confirmButtonText: 'TAMAM',
                            confirmButtonColor: '#3085d6',
                        });

                        YeniBelge();
                        HideProgress();
                        TonajGuncelle();
                    }
                });
            }
        });
    }
</script>

<script>
    $('#MIKTAR').on('change paste input', (e) => { LimitedDecimal(e, 2); MiktarGirisKontrolu(); });
    $('#MIKTAR').on('blur', (e) => { FormatDecimal(e, 2, true); });

    $('#MIKTAR2').on('change paste input', (e) => { LimitedDecimal(e, 2, true); MiktarGirisKontrolu(); });
    $('#MIKTAR2').on('blur', (e) => { FormatDecimal(e, 2, true); });

    function MiktarGirisKontrolu() {
        var Durum = $("#MIKTAR").val() == 0 || $("#MIKTAR2").val() == 0;

        $('#eklebutton').prop('disabled', Durum);
        $('#guncellebutton').prop('disabled', Durum);
    }

    function LimitedDecimal(e, Limit, StartWithZero = false) {
        if (!StartWithZero && e.currentTarget.value.at(0) == "0") {
            e.currentTarget.value = e.currentTarget.value.slice(-1, e.currentTarget.value.length);
        }

        if (!isNaN(parseFloat(e.currentTarget.value))) {
            var point = e.currentTarget.value.toString().indexOf('.');
            var decimalLimit = e.currentTarget.value.length > point + (Limit + 1);

            if (point >= 0 && decimalLimit) {
                e.currentTarget.value = e.currentTarget.value.slice(0, -1);
            }

            if (parseFloat(e.currentTarget.value) < parseFloat(e.currentTarget.min)) {
                e.currentTarget.value = e.currentTarget.min;
            }
            else if (parseFloat(e.currentTarget.value) > parseFloat(e.currentTarget.max)) {
                e.currentTarget.value = e.currentTarget.max;
            }
        }
        else {
            e.currentTarget.value = null;
        }
    }

    function FormatDecimal(e, Fixed, SetMin = false) {
        if (!isNaN(parseFloat(e.currentTarget.value))) {
            e.currentTarget.value = parseFloat(e.currentTarget.value).toFixed(Fixed);
        }
        else {
            if (SetMin) {
                e.currentTarget.value = e.currentTarget.min;
            }
            else {
                e.currentTarget.value = null;
            }
        }
    }

    function LineCheck(Value) {
        return Value == "-" ? null : Value;
    }

    function NullCheck(Value) {
        return (Value == null) || (Value == "") ? "-" : Value;
    }

    function DepoFormatter(Value) {
        var FiltreliDepolar = Depolar.filter(x => x.DEPO_KODU == Value);

        return FiltreliDepolar.length > 0 ? FiltreliDepolar[0].DEPO_ISMI : "-";
    }

    function MiktarFormatla(value) {
        return parseFloat(value).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });
    }

    function KalinlikFormatter(value, index, row) {
        if (value?.toString().trim().length > 0) {
            return GenislikKalinlikFormat(parseFloat(value.toString().replace(',', '.')).toFixed(2).toString());
        }

        return "-";
    }

    function GenislikFormatter(value, index, row) {
        if (value?.toString().trim().length > 0) {
            return GenislikKalinlikFormat(parseFloat(value.toString().replace(',', '.')).toFixed(1).toString());
        }

        return "-";
    }

    function GenislikKalinlikFormat(value) {
        return value.replace(".", ",");
    }

    function DepoTransferIslemFormatter(value, index, row) {
        if (KayitTipi == 1) {
            if (!index.ACTIVE) {
                return `<div class="d-flex justify-content-center align-items-center" style="gap:0.7rem;"><div><i class="bi bi-file-earmark-x-fill i-disabled" style="color:#203289;font-size:x-large;" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="bottom" data-bs-html="true" data-bs-original-title="<span>Sil</span>"></i></div></div>`;
            }
        }

        return `<div class="d-flex justify-content-center align-items-center" style="gap:0.7rem;"><div onclick="KayitSil(${index.ID}, '${index.SERI_NO}')"><i class="bi bi-file-earmark-x-fill" style="color:#203289;font-size:x-large;" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="bottom" data-bs-html="true" data-bs-original-title="<span>Sil</span>"></i></div></div>`;
    }

    function TabloSatirStili(row, index) {
        if (row.ACTIVE) {
            return {
                css: {
                    "background-color": '#e9ebff'
                }
            }
        }

        return {
            css: {
                "background-color": '#FAEAEA'
            }
        }
    }

    function BarkodNoTablodaVarMi(BarkodNo) {
        var Kayit = Kayitlar.filter(x => x.SERI_NO == BarkodNo);

        return Kayit.length > 0 ? true : false;
    }

    function KayitDepolariDegistir() {
        for (var i = 0; i < Kayitlar.length; i++) {
            Kayitlar[i].CIKIS_DEPO = CikisDepo;
        }

        LocalStorageTrigger();
    }

    function AracBilgiDegistir() {
        for (var i = 0; i < Kayitlar.length; i++) {
            Kayitlar[i].PLAKA = $('#PLAKA').val() != '' ? $('#PLAKA').val() : '';
            Kayitlar[i].SOFOR = $('#SOFOR').val() != '' ? SadeceBasHarfBuyut($('#SOFOR').val()) : '';
        }

        if ($('#PLAKA').val() != '')
        {
            TonajGuncelle();
        }
        LocalStorageTrigger();
    }

    window.addEventListener('resize', () => {
        EkranBoyutDegisikligi();
    });

    function EkranBoyutDegisikligi() {
        width = window.innerWidth;

        if (width <= 562) {
            $(".full-modal").removeClass("modal-xl");
            $(".full-modal").addClass("modal-fullscreen");
        }
        else {
            $(".full-modal").removeClass("modal-fullscreen");
            $(".full-modal").addClass("modal-xl");
        }
    }
</script>

<script>
    function isNumericString(input) {
        return typeof input === 'string' && !Number.isNaN(input)
    }

    function StokAdlariOtomatikTamamlama(arr) {
        var currentFocus;

        var inp = document.getElementById('STOK_ADLARI');

        let StokSorgu = new Fuse(arr, {
            keys: [
                { name: 'STOK_ADI', getFn: (item) => item.STOK_ADI },
                { name: 'STOK_KODU', getFn: (item) => item.STOK_KODU }],
            includeMatches: true,
            includeScore: true
        });

        inp.addEventListener("input", function (e) {
            var a, b, i, val = this.value.trim();

            closeAllLists();

            if (!val) {
                AlanlariTemizle();
                DurumDegisikligi(0);

                if (KayitTipi == 0) {
                    $('#STOK_ADLARI').prop("disabled", false);
                }

                $('#BarkodButton').prop("disabled", false);

                $('#STOK_ADLARI').focus();

                return true;
            }

            currentFocus = -1;

            a = document.createElement("DIV");
            a.setAttribute("id", this.id + "autocomplete-list");
            a.setAttribute("class", "autocomplete-items");
            a.setAttribute("style", "height:auto;max-height:200px;overflow-y:auto;box-shadow: 0 4px 2px -2px gray;");

            this.parentNode.appendChild(a);

            var itemNumber = 0;

            var KodSorgu = val.replaceAll(",", "").replaceAll(".", "").trimLeft().trimRight();
            var Sorgu;

            if (isNaN(KodSorgu)) {
                Sorgu = StokSorgu.search({ STOK_ADI: val });
            }
            else {
                Sorgu = StokSorgu.search({ STOK_KODU: val });
            }

            for (let i = 0; i < Sorgu.length; i++) {
                if ((itemNumber < 50 && isNaN(KodSorgu)) || (!isNaN(KodSorgu) && itemNumber < 1)) {

                    b = document.createElement("DIV");

                    b.innerHTML = Sorgu[i].item.STOK_ADI;

                    b.innerHTML += "<input type='hidden' kod='" + Sorgu[i].item.STOK_KODU + "' value='" + Sorgu[i].item.STOK_ADI + "'>";

                    b.addEventListener("click", function () {
                        inp.value = this.getElementsByTagName("input")[0].value;

                        if (inp.value.trim().length !== 0) {
                            $("#SERI_NO").prop("disabled", false);
                            $("#BARKOD_LISTE_BUTTON").prop("disabled", false);
                            $('#BarkodButton').prop("disabled", false);

                            $("#OLCU_BR1").val(Sorgu[i].item.OLCU_BR1);
                            $("#OLCU_BR2").val(Sorgu[i].item.OLCU_BR2);

                            BarkodNoGetir(this.getElementsByTagName("input")[0].getAttribute("kod"));
                        }

                        closeAllLists();
                    });

                    itemNumber = itemNumber + 1;

                    a.appendChild(b);
                }
            }
        });

        inp.addEventListener("keydown", function (e) {
            var x = document.getElementById(this.id + "autocomplete-list");
            if (x) x = x.getElementsByTagName("div");
            if (e.keyCode == 40) {

                currentFocus++;

                addActive(x);
            } else if (e.keyCode == 38) {
                currentFocus--;
                addActive(x);
            } else if (e.keyCode == 13) {
                e.preventDefault();
                if (currentFocus > -1) {
                    if (x) x[currentFocus].click();
                }
            }
        });
        function addActive(x) {
            if (!x) return false;
            removeActive(x);
            if (currentFocus >= x.length) currentFocus = 0;
            if (currentFocus < 0) currentFocus = (x.length - 1);
            x[currentFocus].classList.add("autocomplete-active");
        }
        function removeActive(x) {
            for (var i = 0; i < x.length; i++) {
                x[i].classList.remove("autocomplete-active");
            }
        }
        function closeAllLists(elmnt) {
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++) {
                if (elmnt != x[i] && elmnt != inp) {
                    x[i].parentNode.removeChild(x[i]);
                }
            }
        }
        document.addEventListener("click", function (e) {
            if (e.target.className.trim() != "") {
                closeAllLists(e.target);
            }
        });
    }

    function BarkodNoOtomatikTamamlama(arr) {
        var currentFocus;
        var inp = document.getElementById('SERI_NO');

        let BarkodSorgu = new Fuse(arr, {
            keys: [],
            includeMatches: true,
            threshold: 0.1,
            distance: 15
        });

        inp.addEventListener("input", function (e) {
            var a, b, i, val = this.value.trim();

            closeAllLists();
            if (!val) {
                AlanlariTemizle();

                $('#MIKTAR').prop("disabled", true);
                $('#MIKTAR2').prop("disabled", true);

                $('#BarkodButton').prop("disabled", false);
                $("#BARKOD_LISTE_BUTTON").prop("disabled", false);

                TabloButonAyarla(0);

                return false;
            }
            currentFocus = -1;

            a = document.createElement("DIV");
            a.setAttribute("id", this.id + "autocomplete-list");
            a.setAttribute("class", "autocomplete-items");

            this.parentNode.appendChild(a);

            var itemNumber = 0;

            var Sorgu = BarkodSorgu.search(val);

            for (let i = 0; i < Sorgu.length; i++) {

                if (itemNumber < 5) {
                    b = document.createElement("DIV");

                    b.innerHTML = Sorgu[i].item;

                    b.innerHTML += "<input type='hidden' value='" + Sorgu[i].item + "'>";

                    b.addEventListener("click", function (e) {
                        inp.value = this.getElementsByTagName("input")[0].value;

                        if (inp.value.trim().length !== 0) {
                            BarkodBakiyeGetir(this.getElementsByTagName("input")[0].value);

                            $('#MIKTAR').prop("disabled", true);
                            $('#MIKTAR2').prop("disabled", true);

                            $('#BarkodButton').prop("disabled", true);
                            $("#BARKOD_LISTE_BUTTON").prop("disabled", true);

                            TabloButonAyarla(1);
                        }

                        closeAllLists();
                    });

                    itemNumber = itemNumber + 1;

                    a.appendChild(b);
                }
            }
        });

        inp.addEventListener("keydown", function (e) {
            var x = document.getElementById(this.id + "autocomplete-list");
            if (x) x = x.getElementsByTagName("div");
            if (e.keyCode == 40) {

                currentFocus++;

                addActive(x);
            } else if (e.keyCode == 38) {
                currentFocus--;
                addActive(x);
            } else if (e.keyCode == 13) {
                e.preventDefault();
                if (currentFocus > -1) {
                    if (x) x[currentFocus].click();
                }
            }
        });
        function addActive(x) {
            if (!x) return false;
            removeActive(x);
            if (currentFocus >= x.length) currentFocus = 0;
            if (currentFocus < 0) currentFocus = (x.length - 1);
            x[currentFocus].classList.add("autocomplete-active");
        }
        function removeActive(x) {
            for (var i = 0; i < x.length; i++) {
                x[i].classList.remove("autocomplete-active");
            }
        }
        function closeAllLists(elmnt) {
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++) {
                if (elmnt != x[i] && elmnt != inp) {
                    x[i].parentNode.removeChild(x[i]);
                }
            }
        }
    }

    function DepoOtomatikTamamlama(id, arr) {
        var currentFocus;

        var inp = document.getElementById(id);

        let DepoSorgu = new Fuse(arr, {
            keys: ['DEPO_ISMI', 'DEPO_KODU'],
            includeMatches: true
        });

        inp.addEventListener("input", function (e) {
            var a, b, i, val = this.value.trimLeft();

            this.value = val.toUpperCase();

            closeAllLists();

            if (!val) {

                if (id == 'GIRIS_DEPO') {
                    GirisDepo = -1;
                }
                else if (id == 'CIKIS_DEPO') {
                    CikisDepo = -1;
                }

                AlanlariTemizle();
                DurumDegisikligi(0);

                return false;
            }

            currentFocus = -1;

            a = document.createElement("DIV");
            a.setAttribute("id", this.id + "autocomplete-list");
            a.setAttribute("class", "autocomplete-items");

            this.parentNode.appendChild(a);

            var itemNumber = 0;

            var Sorgu = DepoSorgu.search(val);

            for (let i = 0; i < Sorgu.length; i++) {

                var KodSorgu = parseInt(val.replace(",", "").replace(".", "").trim());

                if ((itemNumber < 5 && isNaN(KodSorgu)) || (!isNaN(KodSorgu) && itemNumber < 1)) {
                    b = document.createElement("DIV");

                    b.innerHTML = Sorgu[i].item.DEPO_ISMI;

                    b.innerHTML += "<input type='hidden' kod='" + Sorgu[i].item.DEPO_KODU + "' value='" + Sorgu[i].item.DEPO_ISMI + "'>";

                    b.addEventListener("click", function (e) {
                        inp.value = this.getElementsByTagName("input")[0].value;

                        if (inp.value.trim().length !== 0) {
                            if (id == 'GIRIS_DEPO') {
                                GirisDepo = parseInt(this.getElementsByTagName("input")[0].getAttribute("kod"));
                            }
                            else if (id == 'CIKIS_DEPO') {
                                StokAdlariGetir();
                                CikisDepo = parseInt(this.getElementsByTagName("input")[0].getAttribute("kod"));
                            }

                            if (GirisDepo != -1 && CikisDepo != -1) {
                                if (KayitTipi == 0) {
                                    $('#STOK_ADLARI').prop("disabled", false);
                                    $('#BarkodButton').prop("disabled", false);
                                }
                            }

                            KayitDepolariDegistir();
                        }

                        closeAllLists();
                    });

                    itemNumber = itemNumber + 1;

                    a.appendChild(b);
                }
            }
        });

        inp.addEventListener("keydown", function (e) {
            var x = document.getElementById(this.id + "autocomplete-list");
            if (x) x = x.getElementsByTagName("div");
            if (e.keyCode == 40) {

                currentFocus++;

                addActive(x);
            } else if (e.keyCode == 38) {
                currentFocus--;
                addActive(x);
            } else if (e.keyCode == 13) {
                e.preventDefault();
                if (currentFocus > -1) {
                    if (x) x[currentFocus].click();
                }
            }
        });
        function addActive(x) {
            if (!x) return false;
            removeActive(x);
            if (currentFocus >= x.length) currentFocus = 0;
            if (currentFocus < 0) currentFocus = (x.length - 1);
            x[currentFocus].classList.add("autocomplete-active");
        }
        function removeActive(x) {
            for (var i = 0; i < x.length; i++) {
                x[i].classList.remove("autocomplete-active");
            }
        }
        function closeAllLists(elmnt) {
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++) {
                if (elmnt != x[i] && elmnt != inp) {
                    x[i].parentNode.removeChild(x[i]);
                }
            }
        }
    }

    $('#GIRIS_DEPO').on("blur", (e) => {
        setTimeout(() => {
            var val = e.target.value.trimRight();

            if (val) {
                var FiltreliDepolar = Depolar.filter(x => x.DEPO_ISMI == val.toUpperCase());

                if (FiltreliDepolar.length > 0) {
                    GirisDepo = FiltreliDepolar[0].DEPO_KODU;

                    if (GirisDepo != -1 && CikisDepo != -1) {
                        if (KayitTipi == 0) {
                            $('#STOK_ADLARI').prop("disabled", false);
                            $('#BarkodButton').prop("disabled", false);
                        }
                    }
                }
                else {
                    var FiltreliDepolar = Depolar.filter(x => x.DEPO_KODU == val.toUpperCase());

                    if (FiltreliDepolar.length > 0) {
                        GirisDepo = FiltreliDepolar[0].DEPO_KODU;

                        $('#GIRIS_DEPO').val(FiltreliDepolar[0].DEPO_ISMI);

                        if (GirisDepo != -1 && CikisDepo != -1) {
                            if (KayitTipi == 0) {
                                $('#STOK_ADLARI').prop("disabled", false);
                                $('#BarkodButton').prop("disabled", false);
                            }
                        }

                        if (GirisDepo != -1) {
                            $('#GIRIS_DEPOautocomplete-list').html('');
                        }
                    }
                    else {
                        e.target.value = null;
                        GirisDepo = -1;
                    }
                }

                if (GirisDepo != -1) {
                    $('#GIRIS_DEPOautocomplete-list').html('');
                }

                if (GirisDepo != -1 && CikisDepo != -1) {
                    StokAdlariGetir();
                }

                KayitDepolariDegistir();
            }

        }, 100);
    });

    $('#CIKIS_DEPO').on("blur", (e) => {
        setTimeout(() => {
            var val = e.target.value.trimRight();

            if (val) {
                var FiltreliDepolar = Depolar.filter(x => x.DEPO_ISMI == val.toUpperCase());

                if (FiltreliDepolar.length > 0) {
                    CikisDepo = FiltreliDepolar[0].DEPO_KODU;

                    if (GirisDepo != -1 && CikisDepo != -1) {
                        if (KayitTipi == 0) {
                            $('#STOK_ADLARI').prop("disabled", false);
                            $('#BarkodButton').prop("disabled", false);
                        }
                    }
                }
                else {
                    var FiltreliDepolar = Depolar.filter(x => x.DEPO_KODU == val.toUpperCase());

                    if (FiltreliDepolar.length > 0) {
                        CikisDepo = FiltreliDepolar[0].DEPO_KODU;

                        $('#CIKIS_DEPO').val(FiltreliDepolar[0].DEPO_ISMI);

                        if (GirisDepo != -1 && CikisDepo != -1) {
                            if (KayitTipi == 0) {
                                $('#STOK_ADLARI').prop("disabled", false);
                                $('#BarkodButton').prop("disabled", false);
                            }
                        }

                        if (CikisDepo != -1) {
                            $('#CIKIS_DEPOautocomplete-list').html('');
                        }
                    }
                    else {
                        e.target.value = null;
                        CikisDepo = -1;
                    }
                }

                if (CikisDepo != -1) {
                    $('#CIKIS_DEPOautocomplete-list').html('');
                }
            }

            if (GirisDepo != -1 && CikisDepo != -1) {
                StokAdlariGetir();
            }

            KayitDepolariDegistir();
        }, 100);
    });

    $('#GIRIS_DEPO').on("keydown", (e) => {
        if (e.which == 9) {
            $('#GIRIS_DEPOautocomplete-list').html('');
        }
    });

    $('#CIKIS_DEPO').on("keydown", (e) => {
        if (e.which == 9) {
            $('#CIKIS_DEPOautocomplete-list').html('');
        }
    });

    $('#STOK_ADLARI').on("keydown", (e) => {
        if (e.which == 9 && (GirisDepo == -1 || CikisDepo == -1)) {
            $('#STOK_ADLARIautocomplete-list').html('');
        }
    });

    $('#SERI_NO').on("keydown", (e) => {
        if (e.which == 9) {
            $('#SERI_NOautocomplete-list').html('');
        }
    });

    function LocalStorageTrigger() {
        var PAGE_BACKUP = { BelgeNo: BELGE_NO, KayitTipi: KayitTipi, GirisDepo: GirisDepo, CikisDepo: CikisDepo, Kayitlar: Kayitlar, Silinecek_Kayitlar: Silinecek_Kayitlar, EskiBelgeler: EskiBelgeler, PLAKA: $('#PLAKA').val(), SOFOR: $('#SOFOR').val() };

        localStorage.setItem('DEPO_TRANSFER', Kayitlar.length > 0 ? JSON.stringify(PAGE_BACKUP) : null);
    }

    function LocalStorageCheck() {

        if (localStorage.getItem('DEPO_TRANSFER') == 'null' || localStorage.getItem('DEPO_TRANSFER') == null) {
            console.log("Herhangi bir veri bulunamadı.");
        }
        else {
            Swal.fire({
                html: `Kurtarılmış veriler bulundu, tekrar yüklemek ister misiniz?`,
                icon: 'warning',
                showCancelButton: true,
                cancelButtonText: 'HAYIR',
                cancelButtonColor: '#d33',
                confirmButtonColor: '#3085d6',
                allowEnterKey: false,
                confirmButtonText: 'EVET',
                allowOutsideClick: false
            }).then((result) => {
                if (result.isConfirmed) {
                    var PAGE_BACKUP = JSON.parse(localStorage.getItem('DEPO_TRANSFER'));
                    var requests = [];

                    Kayitlar = PAGE_BACKUP.Kayitlar;
                    KayitTipi = PAGE_BACKUP.KayitTipi;
                    GirisDepo = PAGE_BACKUP.GirisDepo;
                    CikisDepo = PAGE_BACKUP.CikisDepo;
                    EskiBelgeler = PAGE_BACKUP.EskiBelgeler;

                    $('#PLAKA').val(PAGE_BACKUP.PLAKA);
                    $('#SOFOR').val(PAGE_BACKUP.SOFOR);

                    $('#GIRIS_DEPO').val(GirisDepo).trigger('focus').trigger('blur');
                    $('#CIKIS_DEPO').val(CikisDepo).trigger('focus').trigger('blur');

                    if (KayitTipi == 1) {
                        $('#BELGE_NO').html(PAGE_BACKUP.BelgeNo);
                        BELGE_NO = PAGE_BACKUP.BelgeNo;
                        BelgeNoFormat();
                        $('#belgesilbtn').show();
                    }

                    StokAdlariGetir();

                    for (const Kayit of Kayitlar) {
                        requests.push($.ajax({
                            url: `http://192.168.2.13:83/api/seri/bakiye/${Kayit.SERI_NO}/${Kayit.CIKIS_DEPO}`,
                            type: "GET",
                            error: (e) => { reject("Kurtarılmış veriler kontrol edilirken bir sorun oluştu."); },
                            success: (response) => {
                                if (response.length <= 0) {
                                    Kayitlar = Kayitlar.filter(x => x.SERI_NO != Kayit.SERI_NO);
                                }
                            }
                        }));
                    }

                    $.when.apply($, requests).done(function () {
                        $('#DepoTransferTable').bootstrapTable('destroy');
                        $('#DepoTransferTable').bootstrapTable({ data: Kayitlar });

                        TonajGuncelle();
                    });

                }
                else {
                    localStorage.setItem('DEPO_TRANSFER', null);
                    Kayitlar = [];
                    $('#DepoTransferTable').bootstrapTable('destroy');
                    $('#DepoTransferTable').bootstrapTable({ data: Kayitlar });
                }
            });
        }
    }

    function TOPLAM_OZET() {
        if (Kayitlar.length > 0) {
            var DEEP_CLONE = JSON.parse(JSON.stringify(Kayitlar));

            DEEP_CLONE.sort((a, b) => {
                const nameA = a.STOK_ADI.toUpperCase();
                const nameB = b.STOK_ADI.toUpperCase();
                if (nameA < nameB) {
                    return -1;
                }
                if (nameA > nameB) {
                    return 1;
                }
                return 0;
            });

            const GRUPLANMIS_VERI = Object.groupBy(DEEP_CLONE, ({ STOK_ADI }) => STOK_ADI);

            var tableBody = "";

            var GENEL_TOPLAM_MIKTAR1 = 0;
            var GENEL_TOPLAM_MIKTAR2 = 0;

            for (const STOK_ADI of Object.getOwnPropertyNames(GRUPLANMIS_VERI)) {
                var TOPLAM_MIKTAR1 = 0;
                var TOPLAM_MIKTAR2 = 0;

                for (const VERI of GRUPLANMIS_VERI[STOK_ADI]) {
                    TOPLAM_MIKTAR1 += parseFloat(VERI.MIKTAR);
                    TOPLAM_MIKTAR2 += parseFloat(VERI.MIKTAR2);
                }

                GENEL_TOPLAM_MIKTAR1 += parseFloat(TOPLAM_MIKTAR1);
                GENEL_TOPLAM_MIKTAR2 += parseFloat(TOPLAM_MIKTAR2);

                tableBody += `<tr>
                    <td>${STOK_ADI}</td>
                    <td>${MiktarFormatla(TOPLAM_MIKTAR2)}</td>
                    <td>${MiktarFormatla(TOPLAM_MIKTAR1)}</td>
                </tr>`;
            }

            var STR = `<div class="d-flex flex-column justify-content-center align-items-center gap-2"><span>Belge üzerinde toplam <b>${Kayitlar.length}</b> kalem mevcut.</span>
    <table class="table table-striped table-bordered" style="text-align: center;vertical-align: middle;width: 100%; word-break: auto-phrase;">
        <thead>
            <th>STOK ADI</th>
            <th>MİKTAR 2</th>
            <th>MİKTAR 1</th>
        </thead>
        <tbody>
            ${tableBody}
        </tbody>
        <tfoot>
            <tr>
                <td><b>GENEL TOPLAM</b></td>
                <td><b>${MiktarFormatla(GENEL_TOPLAM_MIKTAR2)}</b></td>
                <td><b>${MiktarFormatla(GENEL_TOPLAM_MIKTAR1)}</b></td>
            </tr>
        </tfoot>
    </table></div>`;

            Swal.fire({
                title: "BELGE ÖZETİ",
                html: STR,
                confirmButtonText: 'TAMAM'
            });

            if (document.activeElement != document.body) document.activeElement.blur();
        }
    }


    function dynamicSort(property) {
        var sortOrder = 1;
        if (property[0] === "-") {
            sortOrder = -1;
            property = property.substr(1);
        }
        return function (a, b) {
            var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;
            return result * sortOrder;
        }
    }
</script>

<style>
    .autocomplete {
        position: relative;
    }

    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        top: 100%;
        left: 0;
        right: 0;
        height: auto;
    }

        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            background-color: #fff;
            border-bottom: 1px solid #d4d4d4;
        }

            .autocomplete-items div:hover {
                background-color: #e9e9e9;
            }

    .autocomplete-active {
        background-color: DodgerBlue !important;
        color: #ffffff;
    }
</style>

<style>
    @@media (max-width: 562px) {
        .miktarbirim {
            margin-top: 1rem !important;
        }
    }

    @@media (min-width: 562px) {
        .miktarbirim {
            margin-top: 0 !important;
        }

        .modal-ch {
            height: 90vh !important;
        }

        .modal-belge {
            height: 65vh !important;
        }
    }
</style>

<style>
    @@media (min-width: 768px) {
        .modal-xl {
            width: 90%;
            max-width: 1500px;
        }
    }

    @@media (max-width: 562px) {
        #DepoTransferTable, #DepoTransferBelgeTable, .belgedetailtbl {
            font-size: small;
        }

        .belge-bilgi {
            font-size: small;
        }
    }

    .fixed-table-toolbar .search {
        width: 100%;
    }
</style>

<style>
    .table:not(caption) > * > * {
        padding: 0 !important;
    }

    .no, .detail-view {
        --bs-table-bg: transparent;
        --bs-table-accent-bg: transparent;
        --bs-table-striped-color: #697a8d;
        --bs-table-striped-bg: rgba(105, 108, 255, 0.07);
        --bs-table-active-color: #697a8d;
        --bs-table-active-bg: rgba(67, 89, 113, 0.1);
        --bs-table-hover-color: #697a8d;
        --bs-table-hover-bg: rgba(105, 108, 255, 0.03);
    }

    #DepoTransferBelgeTable .card-views .card-view .card-view-value {
        margin-left: 0 !important;
        padding-left: 5px !important;
        white-space: normal !important;
    }

    #DepoTransferBelgeTable .card-views .card-view {
        margin-top: 0 !important;
    }

    .belgedetailtbl .card-views .card-view .card-view-value {
        margin-left: 0 !important;
        padding-left: 5px !important;
        white-space: normal !important;
    }

    .belgedetailtbl .card-views .card-view {
        margin-top: 0 !important;
    }
</style>


<div class="modal fade" id="arac-bilgi-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header justify-content-center">
                <div class="btn-group" role="group">
                    <input type="radio" class="btn-check" name="arac-bilgi-islem" id="arac-button-radio" value="arac" autocomplete="off" onclick="AracBilgiIslemDegistir()" checked>
                    <label class="btn btn-outline-primary" for="arac-button-radio">ARAÇ</label>

                    <input type="radio" class="btn-check" name="arac-bilgi-islem" id="sofor-button-radio" value="sofor" autocomplete="off" onclick="AracBilgiIslemDegistir()">
                    <label class="btn btn-outline-primary" for="sofor-button-radio">ŞOFÖR</label>
                </div>
            </div>
            <div class="modal-body">

                <div id="arac-bilgi">
                    <div class="row">
                        <div class="col-12">
                            <div class="form-label-group outline m-2">
                                <input type="text" id="YENI_PLAKA" class="form-control" autocomplete="off" value="" />
                                <span><label for="YENI_PLAKA">PLAKA</label></span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-label-group outline m-2">
                                <input type="number" id="YENI_YUK" class="form-control" autocomplete="off" value="" min="0" />
                                <span><label for="YENI_YUK">YÜK</label></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="sofor-bilgi" style="display: none;">
                    <div class="row">
                        <div class="col-12">
                            <div class="form-label-group outline m-2">
                                <input type="text" id="YENI_AD" class="form-control" autocomplete="off" value="" />
                                <span><label for="YENI_AD">AD</label></span>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">KAPAT</button>
                <button type="button" class="btn btn-primary" onclick="AracBilgileriKaydet()">KAYDET</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(() => { PlakalariGetir(); SoforleriGetir(); });

    var Plakalar = [];
    var Soforler = [];
    var Tonaj = 0;

    function PlakalariGetir() {

        $.ajax({
            url: `http://192.168.2.13:83/api/shipping/arac`,
            type: 'GET',
            error: () => { },
            success: (response) => {
                Plakalar = response;
                PlakaOtomatikTamamlama(response.map(X => X.PLAKA));
            }
        });

    }

    function SoforleriGetir() {
        $.ajax({
            url: `http://192.168.2.13:83/api/shipping/sofor`,
            type: 'GET',
            error: () => { },
            success: (response) => {
                Soforler = response.map(X => SadeceBasHarfBuyut(X.SOFOR_ADI));

                SoforOtomatikTamamlama(Soforler);
            }
        });
    }

    function TonajGuncelle()
    {
        var PLAKA = $('#PLAKA').val();
        var ARAC = Plakalar.filter(x => x.PLAKA == PLAKA);
        Tonaj = ARAC[0]?.AZAMI_YUK ?? 0;

        if (Tonaj != 0) {
            var YUK = 0;

            for (const VERI of Kayitlar) {
                if (VERI.OLCU_BR1 == "KG") {
                    YUK += parseFloat(VERI.MIKTAR);
                }
            }

            var ORAN = isNaN((YUK / Tonaj) * 100) ? 0 : ((YUK / Tonaj) * 100);

            $('#TONAJ_ORAN').css('width', `${ORAN > 100 ? 100 : ORAN}%`);

            $('#TONAJ_ORAN_TEXT').html(`${parseInt(ORAN)}%`);

            var FARK = parseFloat(Tonaj) - parseFloat(YUK);

            var TOOLTIP = `<div>
                                <span>${parseFloat(YUK).toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 0 })} KG / ${parseFloat(Tonaj).toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 0 })} KG</span>
                                <span id="TONAJ_FARK">(${FARK.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 0 })} KG)</span>
                           </div>`;

            $('#TONAJ_PROGRESS').tooltip('enable').attr('data-bs-original-title', TOOLTIP);
        }
        else {
            var ORAN = isNaN((YUK / Tonaj) * 100) ? 0 : ((YUK / Tonaj) * 100);

            $('#TONAJ_ORAN').css('width', `${0}%`);

            $('#TONAJ_ORAN_TEXT').html(`${parseInt(0)}%`);

            $('#TONAJ_PROGRESS').tooltip('enable').attr('data-bs-original-title', `-`);
        }
    }

    var TONAJ_TOOLTIP = document.getElementById('TONAJ_PROGRESS');

    TONAJ_TOOLTIP.addEventListener('shown.bs.tooltip', () => {
        var FARK = parseFloat($('#TONAJ_FARK').html().replace(/[|&;$%"<>()+,KGkg]/g, "").trim());

        $('#TONAJ_FARK').css('color', FARK < 0 ? 'red' : 'white');
    });

    function PlakaOtomatikTamamlama(arr) {
        var currentFocus;
        var inp = document.getElementById('PLAKA');

        let PlakaSorgu = new Fuse(arr, {
            keys: [],
            includeMatches: true,
            threshold: 0.1,
            distance: 15
        });

        inp.addEventListener("input", function (e) {
            var a, b, i, val = this.value.trim();

            closeAllLists();
            if (!val) {
                return false;
            }
            currentFocus = -1;

            a = document.createElement("DIV");
            a.setAttribute("id", this.id + "autocomplete-list");
            a.setAttribute("class", "autocomplete-items");

            this.parentNode.appendChild(a);

            var itemNumber = 0;

            var Sorgu = PlakaSorgu.search(val);

            for (let i = 0; i < Sorgu.length; i++) {

                if (itemNumber < 5) {
                    b = document.createElement("DIV");

                    b.innerHTML = Sorgu[i].item;

                    b.innerHTML += "<input type='hidden' value='" + Sorgu[i].item + "'>";

                    b.addEventListener("click", function (e) {
                        inp.value = this.getElementsByTagName("input")[0].value;

                        if (inp.value.trim().length !== 0) {
                        }

                        closeAllLists();

                        AracBilgiDegistir();
                    });

                    itemNumber = itemNumber + 1;

                    a.appendChild(b);
                }
            }
        });

        inp.addEventListener("keydown", function (e) {
            var x = document.getElementById(this.id + "autocomplete-list");
            if (x) x = x.getElementsByTagName("div");
            if (e.keyCode == 40) {

                currentFocus++;

                addActive(x);
            } else if (e.keyCode == 38) {
                currentFocus--;
                addActive(x);
            } else if (e.keyCode == 13) {
                e.preventDefault();
                if (currentFocus > -1) {
                    if (x) x[currentFocus].click();
                }
            }
        });
        function addActive(x) {
            if (!x) return false;
            removeActive(x);
            if (currentFocus >= x.length) currentFocus = 0;
            if (currentFocus < 0) currentFocus = (x.length - 1);
            x[currentFocus].classList.add("autocomplete-active");
        }
        function removeActive(x) {
            for (var i = 0; i < x.length; i++) {
                x[i].classList.remove("autocomplete-active");
            }
        }
        function closeAllLists(elmnt) {
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++) {
                if (elmnt != x[i] && elmnt != inp) {
                    x[i].parentNode.removeChild(x[i]);
                }
            }
        }
    }

    function SoforOtomatikTamamlama(arr) {
        var currentFocus;
        var inp = document.getElementById('SOFOR');

        let SoforSorgu = new Fuse(arr, {
            keys: [],
            includeMatches: true,
            threshold: 0.1,
            distance: 15
        });

        inp.addEventListener("input", function (e) {
            var a, b, i, val = this.value.trim();

            closeAllLists();
            if (!val) {
                return false;
            }
            currentFocus = -1;

            a = document.createElement("DIV");
            a.setAttribute("id", this.id + "autocomplete-list");
            a.setAttribute("class", "autocomplete-items");

            this.parentNode.appendChild(a);

            var itemNumber = 0;

            var Sorgu = SoforSorgu.search(val);

            for (let i = 0; i < Sorgu.length; i++) {

                if (itemNumber < 5) {
                    b = document.createElement("DIV");

                    b.innerHTML = Sorgu[i].item;

                    b.innerHTML += "<input type='hidden' value='" + Sorgu[i].item + "'>";

                    b.addEventListener("click", function (e) {
                        inp.value = this.getElementsByTagName("input")[0].value;

                        if (inp.value.trim().length !== 0) {
                        }

                        closeAllLists();

                        AracBilgiDegistir();
                    });

                    itemNumber = itemNumber + 1;

                    a.appendChild(b);
                }
            }
        });

        inp.addEventListener("keydown", function (e) {
            var x = document.getElementById(this.id + "autocomplete-list");
            if (x) x = x.getElementsByTagName("div");
            if (e.keyCode == 40) {

                currentFocus++;

                addActive(x);
            } else if (e.keyCode == 38) {
                currentFocus--;
                addActive(x);
            } else if (e.keyCode == 13) {
                e.preventDefault();
                if (currentFocus > -1) {
                    if (x) x[currentFocus].click();
                }
            }
        });
        function addActive(x) {
            if (!x) return false;
            removeActive(x);
            if (currentFocus >= x.length) currentFocus = 0;
            if (currentFocus < 0) currentFocus = (x.length - 1);
            x[currentFocus].classList.add("autocomplete-active");
        }
        function removeActive(x) {
            for (var i = 0; i < x.length; i++) {
                x[i].classList.remove("autocomplete-active");
            }
        }
        function closeAllLists(elmnt) {
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++) {
                if (elmnt != x[i] && elmnt != inp) {
                    x[i].parentNode.removeChild(x[i]);
                }
            }
        }
    }

    $('#PLAKA').on("keydown", (e) => {
        if (e.which == 9) {
            $('#PLAKAautocomplete-list').html('');
        }
    });

    $('#PLAKA').on("blur", (e) => {
        setTimeout(() => {
            var val = e.target.value.trimRight();

            if (val) {

                $('#PLAKA').val(Plakalar.map(x => x.PLAKA).includes(val.toUpperCase()) ? val.toUpperCase() : '');

                $('#PLAKAautocomplete-list').html('');

                AracBilgiDegistir();
            }

        }, 100);
    });

    $('#SOFOR').on("keydown", (e) => {
        if (e.which == 9) {
            $('#SOFORautocomplete-list').html('');
        }
    });

    $('#SOFOR').on("blur", (e) => {
        setTimeout(() => {
            var val = e.target.value.trimRight();

            if (val) {

                $('#SOFOR').val(Soforler.includes(SadeceBasHarfBuyut(val)) ? SadeceBasHarfBuyut(val) : '');

                $('#SOFORautocomplete-list').html('');

                AracBilgiDegistir();
            }

        }, 100);
    });

    function SadeceBasHarfBuyut(text)
    {
        const words = text.split(" ");

        return words.map((word) => {
            return word[0].toLocaleUpperCase('tr') + word.substring(1).toLocaleLowerCase('tr');
        }).join(" ");
    }
</script>

<script>
    function AracBilgiGiris() {

        $('#arac-button-radio').prop('checked', true);

        $('#YENI_PLAKA').val('');
        $('#YENI_YUK').val('');
        $('#YENI_AD').val('');

        AracBilgiIslemDegistir();

        $('#arac-bilgi-modal').modal('show');

    }

    function AracBilgiIslemDegistir()
    {
        var Islem = $('input[name="arac-bilgi-islem"]:checked').val();

        switch (Islem) {
            case "arac":
                $('#sofor-bilgi').hide();
                $('#arac-bilgi').show();
                break;
            case "sofor":
                $('#arac-bilgi').hide();
                $('#sofor-bilgi').show();
                break;
        }
    }

    function AracBilgileriKaydet() {
        ShowProgress();

        var PLAKA = $('#YENI_PLAKA').val();
        var YUK = $('#YENI_YUK').val() != '' ? $('#YENI_YUK').val() : 0;
        var SOFOR = $('#YENI_AD').val() != '' ? SadeceBasHarfBuyut($('#YENI_AD').val()) : '';

        $.when(
            $.ajax({
                url: $('#YENI_AD').val() != '' ? `http://192.168.2.13:83/api/shipping/sofor/${SOFOR}` : '',
                type: 'GET',
                error: () => { },
                success: (response) => { }
            }),
            $.ajax({
                url: $('#YENI_PLAKA').val() != '' ? `http://192.168.2.13:83/api/shipping/arac/${PLAKA}/${YUK}` : '',
                type: 'GET',
                error: () => { },
                success: (response) => { }
            })
        ).done(() =>
        {
            $('#SOFOR').val(SOFOR);
            $('#PLAKA').val(PLAKA);

            HideProgress();
            
            $('#arac-bilgi-modal').modal('hide');

            PlakalariGetir();
            SoforleriGetir(); 
        });
    }

    $('#YENI_PLAKA').on('change paste input', (e) => { e.target.value = e.target.value.toUpperCase().replace(' ', ''); });
</script>