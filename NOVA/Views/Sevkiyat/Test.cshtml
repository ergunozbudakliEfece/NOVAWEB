<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Battery Status API - Demo</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <meta http-equiv="cleartype" content="on">
    <meta name="HandheldFriendly" content="True">
    <link rel="stylesheet" href="src/styles.css">
</head>
<body>

    <header class="demo-header">
        <h1 class="demo-title">Battery Status API</h1>
        <p class="not-support" hidden>Your browser doesn't support the Battery Status API :(</p>
    </header>

    <article class="battery-card">
        <h1 class="battery-title">Battery Status</h1>

        <div class="battery-box">
            <strong class="battery-percentage"></strong>
            <i class="battery"></i>
        </div>

        <dl class="battery-info">
            <dt>Power Source</dt>
            <dd class="battery-status">---</dd>

            <dt>Level percentage</dt>
            <dd class="battery-level">---</dd>

            <dt>Fully charged in</dt>
            <dd class="battery-fully">---</dd>

            <dt>Remaining time</dt>
            <dd class="battery-remaining">---</dd>
        </dl>

    </article>

    <footer>
        <a href="https://github.com/pazguille/demo-battery-api" id="github-ribbon"><img width="149" height="149" src="https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png" alt="Fork me on GitHub"></a>
        by <a href="http://pazguille.me/">Guille Paz</a> with <span class="heart">❤</span>
        <iframe id="github-button" src="https://ghbtns.com/github-btn.html?user=pazguille&amp;repo=demo-battery-api&amp;type=watch&amp;count=true" allowtransparency="true" frameborder="0" scrolling="0" width="152" height="30"></iframe>
    </footer>

    <script async>
        (function () {
            'use strict';

            var battery;

            function toTime(sec) {
                sec = parseInt(sec, 10);

                var hours = Math.floor(sec / 3600),
                    minutes = Math.floor((sec - (hours * 3600)) / 60),
                    seconds = sec - (hours * 3600) - (minutes * 60);

                if (hours < 10) { hours = '0' + hours; }
                if (minutes < 10) { minutes = '0' + minutes; }
                if (seconds < 10) { seconds = '0' + seconds; }

                return hours + ':' + minutes;
            }

            function readBattery(b) {
                battery = b || battery;

                var percentage = parseFloat((battery.level * 100).toFixed(2)) + '%',
                    fully,
                    remaining;

                if (battery.charging && battery.chargingTime === Infinity) {
                    fully = 'Calculating...';
                } else if (battery.chargingTime !== Infinity) {
                    fully = toTime(battery.chargingTime);
                } else {
                    fully = '---';
                }

                if (!battery.charging && battery.dischargingTime === Infinity) {
                    remaining = 'Calculating...';
                } else if (battery.dischargingTime !== Infinity) {
                    remaining = toTime(battery.dischargingTime);
                } else {
                    remaining = '---';
                }

                document.styleSheets[0].insertRule('.battery:before{width:' + percentage + '}', 0);
                document.querySelector('.battery-percentage').innerHTML = percentage;
                document.querySelector('.battery-status').innerHTML = battery.charging ? 'Adapter' : 'Battery';
                document.querySelector('.battery-level').innerHTML = percentage;
                document.querySelector('.battery-fully').innerHTML = fully;
                document.querySelector('.battery-remaining').innerHTML = remaining;

            }

            if (navigator.battery) {
                readBattery(navigator.battery);

            } else if (navigator.getBattery) {
                navigator.getBattery().then(readBattery);

            } else {
                document.querySelector('.not-support').removeAttribute('hidden');
            }

            window.onload = function () {
                battery.addEventListener('chargingchange', function () {
                    readBattery();
                });

                battery.addEventListener("levelchange", function () {
                    readBattery();
                });
            };
        }());
    </script>
</body>
</html>