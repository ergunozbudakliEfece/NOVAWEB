
@{
    //Layout = "~/Views/Shared/_layout_satinalma.cshtml";
    Layout = "~/Views/Shared/_Layout_common.cshtml";
}



<link href="~/Content/table/bootstrap-table.min.css" rel="stylesheet" />
<link href="~/Content/table/placeholder-loading.min.css" rel="stylesheet" />
<link href="~/assets/fontawesome.css" rel="stylesheet" />
<link href="~/Scripts/select2.css" rel="stylesheet" />
<script src="~/Scripts/select2.min.js"></script>
<script src="~/Scripts/tippy/popper.min.js"></script>
<script src="~/assets/sweetalert/sweetalert.js"></script>
<link href="~/assets/vendor/css/cssprogress.min.css" rel="stylesheet" />
<link href="~/wwwroot/libs/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
<link href="~/assets/boxicons/css/boxicons.min.css" rel="stylesheet" />

<style>
    body {
        padding: 0 0 0 4rem !important;
    }

    #goster {
        display: none;
    }

    #gizle {
        display: none;
    }

    .group-by {
        background-color: rgba(105, 108, 255, 0.12)
    }

    #table tr[data-index]:nth-child(odd) {
        background-color: rgba(105, 108, 255, 0.05)
    }

    #table i {
        color: #00AAFF;
        font-weight: 300;
    }

        #table i:hover {
            opacity: 0.4;
        }

    .heart {
        animation: heartbeat 1s infinite alternate;
    }

    .swal2-icon {
        font-size: 35px;
    }

    .search {
        width: 100%;
    }


    .swal2-container.swal2-backdrop-show, .swal2-container.swal2-noanimation {
        background: rgba(0,0,0,.4) !important;
    }

    @@keyframes heartbeat {
        from {
            opacity: 0.3;
            transform: scale(0.32);
        }

        to {
            opacity: 1;
            transform: scale(0.40);
        }
    }

    .card-view {
        border-bottom: 1px dashed gray;
        margin-top: 2px;
    }

    .card-view-value {
        margin-left: 5px;
        white-space: normal;
    }



    .search {
        width: 50%;
    }



    .menu1 {
        display: none;
    }

    .th-inner {
        white-space: unset !important;
    }


    @@media screen and (max-width: 600px) {
        select {
            width: 100% !important;
        }

        .form-control {
            width: 100% !important;
        }

        #goster {
            display: unset;
        }

        #filters {
            display: none;
        }
    }

    .line {
        width: 100%;
        display: flex;
        justify-content: center;
        align-self: center;
    }

        .line > .left {
            width: 90%;
            display: flex;
            justify-content: start;
            align-items: center;
        }

        .line > .right {
            width: 10%;
            display: flex;
            justify-content: end;
            align-items: center;
        }

    .table-i {
        color: white !important;
    }

    .swal2-container {
        z-index: 10000;
    }

    i:hover {
        color: #0d5c69 !important;
    }

    .i-disabled,
    .i-disabled[disabled] {
        opacity: .4;
        cursor: default !important;
        pointer-events: none;
    }
</style>
<div id="nova-overlay" style="position: absolute; background: #00000080; left: 0; right: 0; bottom: 0; top: 0; z-index: 9999999;display:flex;justify-content:center;align-items:center;">
    <div class="heart"><img id="progress" src="~/images/novasaydam.png" width="400" /></div>
</div>
<div class="jumbotron vertical-center" onclick="hideAllPop()">
    <div class="container-fluid h-100">
        <div class="card mt-2">

            <div class="card-body">
                <div class="row">
                    <a id="goster" onclick="filtershow()" style="cursor:pointer">&#10148;Filtreleri Göster</a>
                    <a id="gizle" onclick="filterhide()" style="cursor:pointer">&#9660;Filtreleri Gizle</a>
                </div>

                <div id="filters">
                    <div class="row" onchange="datefilter()">
                        <div class="col-sm">
                            <label for="baslagictarihi">Başlagıç Tarihi:</label>
                            <input class="form-control" style="width: 15vw;height:32px" type="date" id="baslangictarihi" name="BASLANGIC_TARIH" value=" " placeholder="Başlangıç Tarihi">
                        </div>
                        <div class="col-sm">
                            <label for="bitistarihi">Bitiş Tarihi:</label>
                            <input class="form-control" style="width: 15vw;height:32px" type="date" id="bitistarihi" name="BASLANGIC_TARIH" value=" " placeholder="Bitiş Tarihi">
                        </div>
                        <div class="col">
                            <button onclick="clearfilter()" class="btn btn-secondary btn-sm mt-3"><i class="bx bxs-trash"></i></button>
                        </div>
                        <div class="col"></div>
                        <div class="col"></div>
                        <div class="col"></div>
                    </div>
                    <div id="toolbar">
                        <form id="form1">
                            <div class="row mt-1">
                                <div class="col-sm">
                                    <select id="teslim" multiple="multiple" name="filterAlgorithm" style="width: 15vw">
                                    </select>
                                </div>
                                <div class="col-sm">
                                    <select id="cari" multiple="multiple" name="plasiyerAlgorithm" style="width: 15vw">
                                    </select>
                                </div>
                                <div class="col">
                                    <select id="stokadi" multiple="multiple" name="stokadiAlgorithm" style="width: 15vw">
                                    </select>
                                </div>
                                <div class="col-sm">
                                    <select id="plasiyer" multiple="multiple" name="dovAlgorithm" style="width: 15vw">
                                    </select>
                                </div>

                                <div class="col">
                                    <div class="form-check form-switch">
                                        <label class="form-check-label  fs-tiny" for="flexSwitchCheckChecked2">Üretim</label>

                                        <input class="form-check-input" type="checkbox" id="uretimswitch" unchecked="" onclick="flex()" name="URETILECEKMI">
                                    </div>
                                </div>
                                <div class="col"></div>
                            </div>

                        </form>




                    </div>
                </div>

            </div>
        </div>
        <div class="card mt-1" style="font-size:14px;letter-spacing:1px">


            <div class="card-body" id="card1">
                <table id="table"
                       class="table"
                       data-show-fullscreen="true"
                       data-buttons-order="['filterTable','columns']"
                       data-toggle="table"
                       data-show-export="false"
                       data-export-data-type="all"
                       data-export-types="['excel']"
                       data-pagination="true"
                       data-page-size="100"
                       data-search="true"
                       data-show-columns="true"
                       data-show-columns-toggle-all="true"
                       data-locale="tr-TR"
                       data-filter-control="true"
                       data-filter-control-multiple-search="true"
                       data-loading-template="loadingTemplate"
                       data-height="700"
                       data-mobile-responsive="true"
                       data-show-footer="false"
                       data-detail-view="false"
                       data-check-on-init="true"
                       data-trim-on-search="false"
                       data-group-by="true"
                       data-group-by-field="CARI_ISIM">
                    <thead>
                        <tr>
                            <th data-field="SIPARIS_NO" data-halign="center" data-align="center" data-sortable="true" data-formatter="sipFormatter">Sipariş No</th>
                            <th data-field="FIRMA_SIPNO" data-halign="center" data-align="center" data-sortable="true" data-formatter="firmaSipNoFormatter">Firma Sipariş No</th>
                            <th data-field="PLASIYER_ADI" data-halign="center" data-align="center" data-sortable="true">Plasiyer</th>
                            <th data-field="TARIH" data-halign="center" data-align="center" data-sortable="true" data-formatter="tarihFormatter">Tarih</th>
                            <th data-field="STOK_ADI" data-halign="center" data-align="center" data-sortable="true" data-formatter="stokadiFormatter">Stok Adı</th>
                            <th data-field="MIKTAR" data-halign="center" data-align="center" data-sortable="true" data-formatter="miktar1Formatter">Miktar1</th>
                            <th data-field="MIKTAR2" data-halign="center" data-align="center" data-sortable="true" data-formatter="miktar2Formatter">Miktar2</th>
                            <th data-field="TESLIM_YERI" data-halign="center" data-align="center" data-sortable="true" data-formatter="teslimFormatter">Teslim Yeri</th>
                            <th data-field="TESLIM_MIKTARI" data-halign="center" data-align="center" data-sortable="true" data-formatter="miktarFormatter">SSIP Teslim</th>
                            <th data-field="BAKIYE_MIKTARI" data-halign="center" data-align="center" data-sortable="true" data-formatter="miktarFormatter">SSIP Bekleyen</th>
                            <th data-field="TESLIMAT_ORANI" data-halign="center" data-align="center" data-sortable="true" data-formatter="surecFormatter">SSIP Süreç</th>
                            <th data-halign="center" data-align="center" data-formatter="islemFormatter">İşlem</th>
                        </tr>
                    </thead>
                </table>
            </div>

        </div>

    </div>

</div>
<script>
    var detayli;
    var teslimyerleri = [];
    var cariisimler = [];
    var carikodlari = [];
    var stokadlari = [];
    var plasiyerler = [];
    $.getJSON("http://192.168.2.13:83/api/detayliSSIP/acik", function (data) {

        detayli = data;


        $("#table").bootstrapTable("destroy").bootstrapTable({
            data: data, formatColumnsToggleAll: function () {
                return "Hepsi";
            }, groupByFormatter: (value, idx) => { return GroupFormatter(value, idx); }, paginationSuccessivelySize: 3, paginationPagesBySide: 1
        });

        for (let i = 0; i < data.length; i++) {
            if (!teslimyerleri.includes(data[i].TESLIM_YERI)) {
                teslimyerleri.push(data[i].TESLIM_YERI);
            }
            if (!carikodlari.includes(data[i].CARI_KODU)) {

                cariisimler.push(data[i].CARI_ISIM);
                carikodlari.push(data[i].CARI_KODU);
            }
            if (!plasiyerler.includes(data[i].PLASIYER_ADI) && data[i].PLASIYER_ADI != null) {
                plasiyerler.push(data[i].PLASIYER_ADI);
            }
            if (!stokadlari.includes(data[i].STOK_ADI) && data[i].STOK_ADI != null) {
                stokadlari.push(data[i].STOK_ADI);
            }
        }
        teslimyerleri.sort();
        plasiyerler.sort();
        stokadlari.sort();
        for (let i = 0; i < teslimyerleri.length; i++) {
            var option = document.createElement("option");
            option.value = teslimyerleri[i];
            option.innerHTML = teslimyerleri[i];
            document.getElementById("teslim").appendChild(option);
        }
        for (let i = 0; i < carikodlari.length; i++) {
            var option = document.createElement("option");
            option.value = carikodlari[i];
            option.innerHTML = cariisimler[i];
            document.getElementById("cari").appendChild(option);
        }
        for (let i = 0; i < plasiyerler.length; i++) {
            var option = document.createElement("option");
            option.value = plasiyerler[i];
            option.innerHTML = plasiyerler[i];
            document.getElementById("plasiyer").appendChild(option);
        }
        for (let i = 0; i < stokadlari.length; i++) {
            var option = document.createElement("option");
            option.value = stokadlari[i];
            option.innerHTML = stokadlari[i];
            document.getElementById("stokadi").appendChild(option);
        }
    }).done(function () {
        sortOptions()
        $("#teslim").select2({ placeholder: "Teslim Yeri" });
        $("#cari").select2({ placeholder: "Cari İsim" });
        $("#plasiyer").select2({ placeholder: "Plasiyer" });
        $("#stokadi").select2({ placeholder: "Stok Adı" });
        HideProgress();
    })

    function sortOptions() {
        var allOptions = $("#cari option");
        allOptions.sort(function (op1, op2) {
            var text1 = $(op1).text().toLowerCase();
            var text2 = $(op2).text().toLowerCase();
            return (text1 < text2) ? -1 : 1;
        });
        allOptions.appendTo("#cari");
    }


    $("#divPartial").show();


    var type = 'fa'

    function loadingTemplate(message) {
        if (type === 'fa') {
            return '<div class="heart"><img id="progress" src="/images/novasaydam.png" style="max-width:15vw" /></div>'
        }
        if (type === 'pl') {
            return '<div class="ph-item"><div class="ph-picture"></div></div>'
        }
    }
    function islemFormatter(value, index, row) {
        return `<div onclick="SaticiRaporModal(event, this, '${index.STOK_KODU}')"  data-bs-toggle="modal" class="showmodal" data-bs-target="#SiparisModal"><i class="bi bi-file-earmark-text-fill" style="color:#203289;font-size:x-large;" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="left" data-bs-html="true" data-bs-original-title="<span>Kabul Formu Oluştur</span>"></i></div>`;
    }
    function sipFormatter(value, index, row) {
        var SeriNo = '<label hidden>' + value + '</label>';

        return SeriNo + "<span class='text-nowrap'>" + (value.substring(0, 1)) + (value.substring(3, 5)) + "-" + (value.substring(value.length - 5)) + "</span>";
    }
    function tarihFormatter(value, index, row) {

        return (new Date(value)).toLocaleDateString();
    }
    function teslimFormatter(value, index, row) {

        return "<span class='text-nowrap'>" + value + "</span>";
    }
    function stokadiFormatter(value, index, row) {
        return value.replaceAll('Ý', 'İ');
    }
    function firmaSipNoFormatter(value, index, row) {
        console.log(value);
        return value;
    }
    function miktarFormatter(value, index, row) {

        return parseFloat(value).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });
    }
    function miktar1Formatter(value, index, row) {

        return parseFloat(value).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + " " + index.OLCU_BR1;
    }
    function miktar2Formatter(value, index, row) {

        return parseFloat(value).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + " " + index.OLCU_BR2;
    }
    function iskontoFormatter(value, index, row) {

        return parseFloat(value).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + "%";
    }
    function brutFormatter(value, index, row) {
        if (index.DOV_NET_FIYAT == 0) {

            return parseFloat(index.NET_FIYAT).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        } else {

            return parseFloat(index.DOV_NET_FIYAT).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        }

    }
    function netFormatter(value, index, row) {
        if (index.DOV_FIAT == 0) {

            return parseFloat(index.BRUT_FIYAT).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        } else {

            return parseFloat(index.DOV_FIAT).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        }

    }
    function nettutarFormatter(value, index, row) {
        if (index.DOV_TUTAR != 0) {
            return "<span class='dovfiyat text-nowrap'>" + parseFloat(index.DOV_TUTAR).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + " " + (index.DOV_TIP == null ? "TRY" : index.DOV_TIP);
        } else {
            return "<span class='text-nowrap'>" + parseFloat(value).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + " " + (index.DOV_TIP == null ? "TRY" : index.DOV_TIP) + "</span>";
        }




    }
    function nettutarFormatter2(value, index, row) {

        return "<span class='text-nowrap'>" + parseFloat(value).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + " TRY</span>";

    }
    function surecFormatter(value, index, row) {

        return '<div class="meter" id="meter-msip" style="height:22.94px;width:100px"><span style="width:' + (parseFloat(value * 100).toFixed(0)) + '%"><span class="progress" id="progress-msip"><span class="text-nowrap" style="text-align:end;color:black">' + (parseFloat(value * 100).toFixed(0)) + '%</span></span></span></div>';

    }
    function GroupFormatter(value, index) {
        return `<div class="line"><div class="left">${value}</div><div class="right"></div></div>`;
    }
    function datefilter() {
        var baslangic = $('#baslangictarihi').val()
        var bitis = $('#bitistarihi').val()

        $('#table').bootstrapTable('showLoading');

        $.getJSON('http://192.168.2.13:83/api/detayliSSIP', function (data) {

            if ((baslangic != null && baslangic != "") && (bitis != null && bitis != "")) {
                var d = data.filter(x => new Date(x.TARIH.split("T")[0]) <= new Date(bitis) && new Date(x.TARIH.split("T")[0]) >= new Date(baslangic));
            } else if ((baslangic != null && baslangic != "") || (bitis != null && bitis != "")) {

                if (baslangic != null && baslangic != "") {


                    var d = data.filter(x => new Date(x.TARIH.split("T")[0]) >= new Date(baslangic));


                }
                if (bitis != null && bitis != "") {
                    var d = data.filter(x => new Date(x.TARIH.split("T")[0]) <= new Date(bitis));
                }
            }
            else {
                var d = data;
            }
            $('#table').bootstrapTable("destroy");

            $('#table').bootstrapTable({
                data: d, formatColumnsToggleAll: function () {
                    return "Hepsi";
                }
            })

            $('#table').bootstrapTable('hideLoading');
        })

    }

    $('#toolbar').change(function (e) {
        var filterAlgorithm = $('#teslim').val()
        var plasiyerAlgorithm = $('#cari').val()
        var dovAlgorithm = $('#plasiyer').val()
        var stokAlgorithm = $('#stokadi').val()
        var uretim = document.getElementById("uretimswitch").checked;


        if (uretim == true) {

            filterAlgorithm.push("EFECE 4");

        }

        $('#table').bootstrapTable('filterBy', {
            TESLIM_YERI: (filterAlgorithm.length > 0 ? filterAlgorithm : teslimyerleri),
            CARI_KODU: (plasiyerAlgorithm.length > 0 ? plasiyerAlgorithm : carikodlari),
            PLASIYER_ADI: (dovAlgorithm.length > 0 ? dovAlgorithm : plasiyerler),
            STOK_ADI: (stokAlgorithm.length > 0 ? stokAlgorithm : stokadlari),
        })
    })

    function clearfilter() {
        $("#teslim").val('').trigger('change');
        $("#cari").val('').trigger('change');
        $("#plasiyer").val('').trigger('change');
        $("#baslangictarihi").val('').trigger('change');
        $("#bitistarihi").val('').trigger('change');
    }


    function filtershow() {
        $("#goster").hide();
        $("#gizle").show();
        $("#filters").show();
    }
    function filterhide() {
        $("#goster").show();
        $("#gizle").hide();
        $("#filters").hide();
    }
</script>


@Html.Partial("SaticiSiparisRaporuPartials/SiparisRaporu_Modal")
@Html.Partial("SaticiSiparisRaporuPartials/SiparisRaporuBelgeList_Modal")
@Html.Partial("SaticiSiparisRaporuPartials/SiparisRaporu_HazırListe")

@*Birden Fazla Modal*@
<script>
    Array.from(document.getElementsByClassName('showmodal')).forEach((e) => {
        e.addEventListener('click', function (element) {
            element.preventDefault();
            if (e.hasAttribute('data-show-modal')) {
                showModal(e.getAttribute('data-show-modal'));
            }
        });
    });
    function showModal(modal) {
        const mid = document.getElementById(modal);
        let myModal = new bootstrap.Modal(mid);
        myModal.show();
    }
    $(document).ready(function () {
        $('#pageName').html('<div class="dot"></div> Satıcı Sipariş Raporu')
        $(document).on('show.bs.modal', '.modal', function () {
            const zIndex = 1040 + 10 * $('.modal:visible').length;
            $(this).css('z-index', zIndex);
            setTimeout(() => $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack'));
        });
    });
</script>

<style>
    @@media (min-width: 768px) {
        .modal-xl {
            width: 90%;
            max-width: 1500px;
        }
    }

    @@media (max-width: 562px) {
        #TempTable, #SiparisNoTable, #BelgeNoTable {
            font-size: smaller;
        }

        .belge-bilgi {
            font-size: small;
        }
    }

    .fixed-table-toolbar .search {
        width: 100%;
    }

    .swal-icon img {
        width: 60px;
        height: 60px;
    }
</style>
<script>
    function ShowProgress() {
        document.body.style.overflow = 'hidden';
        document.activeElement.blur();
        $('#nova-overlay').fadeIn('fast').css('display', 'flex');
    }
    function HideProgress() {
        document.body.style.overflow = 'auto';
        $('#nova-overlay').fadeOut('slow');
    }
</script>
<style>
    .autocomplete {
        position: relative;
    }

    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        top: 100%;
        left: 0;
        right: 0;
        height: auto;
    }

        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            background-color: #fff;
            border-bottom: 1px solid #d4d4d4;
        }

            .autocomplete-items div:hover {
                background-color: #e9e9e9;
            }

    .autocomplete-active {
        background-color: DodgerBlue !important;
        color: #ffffff;
    }
</style>