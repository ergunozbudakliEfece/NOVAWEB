<div class="modal fade" id="BelgeNoModal" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="BelgeNoModalLabel" aria-hidden="true">
    <div id="SaticiBelgeListModal" class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
        <div id="SaticiBelgeListModalContent" class="modal-content" style="box-shadow: inset 0 0 15px #dbdbdb;height:65vh;">

            <div class="modal-header ml-auto mr-auto">
                <h5 class="modal-title text-center w-100" id="SeriNoModalLabel">BELGE LİSTESİ</h5>
                <button type="button" class="ds btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body  py-2">
                <div class="container-fluid">
                    <div class="centercontent" id="content" style="display:flex;justify-content:center;">
                        <div class="heart"><img id="BelgeNoTableProgress" src="~/images/novasaydam.png" style="max-width:10vw" /></div>
                    </div>

                    <div class="row gy-3 my-2" id="BelgeListToolbar">
                        <div class="row mb-2 gy-2">
                            <div class="col-sm-auto">
                                <div class="btn-group" role="group" aria-label="Basic radio toggle button group">
                                    <input type="radio" class="btn-check" onclick="DurumSecim();" name="DocumentStateRadio" id="ACIK_BUTTON" value="true" checked="" autocomplete="off">
                                    <label class="btn btn-outline-primary" for="ACIK_BUTTON">AÇIK</label>
                                    <input type="radio" class="btn-check" onclick="DurumSecim();" name="DocumentStateRadio" id="KAPALI_BUTTON" value="false" autocomplete="off">
                                    <label class="btn btn-outline-primary" for="KAPALI_BUTTON">KAPALI</label>
                                    <input type="radio" class="btn-check" onclick="DurumSecim();" name="DocumentStateRadio" id="TUMU_BUTTON" value="all" autocomplete="off">
                                    <label class="btn btn-outline-primary" for="TUMU_BUTTON">TÜMÜ</label>
                                </div>
                            </div>
                            <div class="col-sm-auto">
                                <button type="button" id="refreshButton" class="btn btn-icon btn-outline-primary" onclick="VerileriGetir()" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="right" data-bs-html="true" data-bs-original-title="<span>Yenile</span>">
                                    <span class="tf-icons bx bx-refresh" style="font-size:x-large;"></span>
                                </button>
                            </div>
                            <div class="col d-flex justify-content-start gap-2">
                                <div class="d-flex justify-content-center align-items-center mx-2"><div style="width: 1.25rem; height: 1.25rem; background-color: #e9ebff; margin-right: 0.2rem; "></div>AÇIK</div>
                                <div class="d-flex justify-content-center align-items-center"><div style="width: 1.25rem; height: 1.25rem; background-color: #FAEAEA; margin-right: 0.2rem; "></div>KAPALI</div>
                            </div>
                        </div>
                    </div>

                    <div id="BelgeNoTableRow" class="row mb-2 gy-2">
                        <div id="employeeTableWrapper" class="tableWrapper table-responsive">
                            <table id="BelgeNoTable"
                                   data-search="true"
                                   data-show-refresh="false"
                                   data-show-toggle="false"
                                   data-show-fullscreen="false"
                                   data-show-columns="false"
                                   data-show-columns-toggle-all="false"
                                   data-detail-view="true"
                                   data-detail-view-by-click="true"
                                   data-show-export="false"
                                   data-click-to-select="true"
                                   data-minimum-count-columns="2"
                                   data-show-pagination-switch="false"
                                   data-page-size="5"
                                   data-pagination="true"
                                   data-id-field="id"
                                   data-show-footer="false"
                                   data-mobile-responsive="true"
                                   data-response-handler="responseHandler"
                                   data-pagination-parts="['pageSize', 'pageInfo', 'pageList']"
                                   data-locale="tr-TR"
                                   data-row-style="DetailSatirStili">
                                <thead>
                                    <tr>
                                        <th data-field="IRS_NO" data-sortable="true" data-halign="center" data-align="center">İRSALİYE NO</th>
                                        <th data-field="CARI_ISIM" data-halign="center" data-align="center">CARİ İSİM</th>
                                        <th data-field="SIPARIS_NO" data-sortable="true" data-halign="center" data-align="center">SİPARİŞ NO</th>
                                        <th data-field="BELGE_NO" data-sortable="true" data-halign="center" data-align="center">BELGE NO</th>
                                        <th data-formatter="BelgeDurumuFormatter" data-sortable="true" data-field="ACTIVE" data-halign="center" data-align="center">BELGE DURUMU</th>
                                        <th data-formatter="BelgeListIslemFormatter" data-halign="center" data-align="center">İŞLEM</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var BelgeList = [];
    var Belgeler = [];

    function BelgeNoModal() {
        Belgeler = [];
        VerileriGetir();
    }

    function VerileriGetir() {
        BelgeList = [];
        $("#BelgeNoTableProgress").show();
        $("#BelgeNoTableRow").hide();
        $("#BelgeListToolbar").hide();

        $('#ACIK_BUTTON').prop('checked', true);

        var SiparisNo = document.getElementById("SiparisNo").innerHTML;

        var ProcUrl = "http://192.168.2.13:83/api/shipping/sip/" + SiparisNo;

        $.getJSON(ProcUrl, function (data) {
            if (data.length > 0) {
                BelgeList = data;

                var AynıBelgeNoFilter = BelgeList.filter(
                    (obj, index) =>
                        BelgeList.findIndex((item) => item.BELGE_NO === obj.BELGE_NO) === index
                );

                Belgeler = [];

                for (var i = 0; i < AynıBelgeNoFilter.length; i++) {
                    var Filtered = BelgeList.filter(x => x.BELGE_NO == AynıBelgeNoFilter[i].BELGE_NO);
                    var AcikMi = false;

                    for (var j = 0; j < Filtered.length; j++) {
                        if (Filtered[j].ACTIVE) {
                            Belgeler.push({
                                "CARI_ISIM": AynıBelgeNoFilter[i].CARI_ISIM,
                                "SIPARIS_NO": AynıBelgeNoFilter[i].SIPARIS_NO,
                                "BELGE_NO": AynıBelgeNoFilter[i].BELGE_NO,
                                "IRS_NO": AynıBelgeNoFilter[i].IRS_NO,
                                "ACTIVE": true,
                            });
                            AcikMi = true;
                            break;
                        }
                    }

                    if (!AcikMi) {
                        Belgeler.push({
                            "CARI_ISIM": AynıBelgeNoFilter[i].CARI_ISIM,
                            "SIPARIS_NO": AynıBelgeNoFilter[i].SIPARIS_NO,
                            "BELGE_NO": AynıBelgeNoFilter[i].BELGE_NO,
                            "IRS_NO": AynıBelgeNoFilter[i].IRS_NO,
                            "ACTIVE": false,
                        });
                    }
                }

                Belgeler.sort((a, b) => {
                    const nameA = a.BELGE_NO.toUpperCase();
                    const nameB = b.BELGE_NO.toUpperCase();
                    if (nameA < nameB) {
                        return -1;
                    }
                    if (nameA > nameB) {
                        return 1;
                    }
                    return 0;
                });


                $("#BelgeNoTable").bootstrapTable("destroy");
                $('#BelgeNoTable').bootstrapTable({ data: Belgeler.filter(x => x.ACTIVE) });
            }
        }).done(function () {
            $("#BelgeNoTableRow").show();

            if (BelgeList.length == 0) {
                $("#BelgeNoTable").bootstrapTable("destroy");
                $('#BelgeNoTable').bootstrapTable({ data: BelgeList });
            }

            $("#BelgeListToolbar").show();
            $("#BelgeNoTableProgress").hide();
        });
    }

    function DetailSatirStili(row, index) {
        if (row.ACTIVE) {
            return {
                css: {
                    "background-color": '#e9ebff'
                }
            }
        }

        return {
            css: {
                "background-color": '#FAEAEA'
            }
        }
    }

    $('#BelgeNoTable').on('expand-row.bs.table', function (e, index, row, $detail) {
        $detail.html(`<div class="card-body p-2" style="background-color:mintcream;"> <div id="employeeTableWrapper" class="tableWrapper table-responsive"> <table id="BelgeNoDetail${row.BELGE_NO}Table" class="belgedetailtbl table-sm" data-search="false" data-show-refresh="false" data-show-toggle="false" data-show-fullscreen="false" data-show-columns="false" data-show-columns-toggle-all="false" data-detail-view="false" data-show-export="false" data-click-to-select="true" data-minimum-count-columns="2" data-show-pagination-switch="false" data-page-size="4" data-page-list="[5,20,50,100]" data-pagination-parts="['pageInfo','pageList']" data-pagination="true" data-id-field="id" data-show-footer="false" data-mobile-responsive="true" data-response-handler="responseHandler" data-locale="tr-TR" data-row-style="DetailSatirStili"> <thead> <tr> <th data-formatter="TempTableEmptyFormatter" data-field="SERI_NO" data-halign="center" data-align="center"  >SERİ NO</th> <th data-formatter="TempTableEmptyFormatter" data-field="STOK_ADI" data-halign="center" data-align="center"  >STOK ADI</th>  <th data-formatter="MiktarFormatla" data-field="MIKTAR1" data-halign="center" data-align="center"  >MİKTAR 1</th> <th data-formatter="TempTableEmptyFormatter" data-field="OLCU_BR1" data-halign="center" data-align="center"  >ÖLÇÜ BİRİMİ 1</th> <th data-formatter="MiktarFormatla" data-field="MIKTAR2" data-halign="center" data-align="center"  >MİKTAR 2</th> <th data-formatter="TempTableEmptyFormatter" data-field="OLCU_BR2" data-halign="center" data-align="center"  >ÖLÇÜ BİRİMİ 2</th> <th data-formatter="KalinlikFormatter" data-field="ACIK2" data-halign="center" data-align="center"  >KALINLIK</th> <th data-formatter="GenislikFormatter" data-field="ACIK1" data-halign="center" data-align="center"  >GENİŞLİK</th> <th data-formatter="TempTableEmptyFormatter" data-field="ACIK3" data-halign="center" data-align="center"  >ÜRÜN NO</th> <th data-formatter="TempTableEmptyFormatter" data-field="SERI_NO_3" data-halign="center" data-align="center"  >KALİTE</th> <th data-formatter="TempTableEmptyFormatter" data-field="SERI_NO_4" data-halign="center" data-align="center"  >KAPLAMA KALINLIĞI</th> <th data-formatter="BelgeDurumuFormatter" data-field="ACTIVE" data-halign="center" data-align="center"  >Durum</th> </tr></thead> </table> </div></div>`);

        var SiparisNo = row.SIPARIS_NO;
        var DetailFilteredList = BelgeList.filter(x => x.SIPARIS_NO == SiparisNo && x.BELGE_NO == row.BELGE_NO);

        var EditedData = [];

        for (var i = 0; i < DetailFilteredList.length; i++) {
                var Item =
                {
                    "ACTIVE": DetailFilteredList[i].ACTIVE,
                    "STOK_KODU": DetailFilteredList[i].STOK_KODU,
                    "IRS_NO": DetailFilteredList[i].IRS_NO,
                    "STOK_ADI": DetailFilteredList[i].STOK_ADI,
                    "SERI_NO": DetailFilteredList[i].SERI_NO,
                    "MIKTAR1": DetailFilteredList[i].MIKTAR1.toFixed(2),
                    "OLCU_BR1": DetailFilteredList[i].OLCU_BR1,
                    "MIKTAR2": DetailFilteredList[i].MIKTAR2.toFixed(2),
                    "OLCU_BR2": DetailFilteredList[i].OLCU_BR2,
                    "ACIK1": DetailFilteredList[i].ACIK1,
                    "ACIK2": DetailFilteredList[i].ACIK2,
                    "ACIK3": DetailFilteredList[i].ACIK3,
                    "ACIKLAMA_4": DetailFilteredList[i].ACIKLAMA_4,
                    "ACIKLAMA_5": DetailFilteredList[i].ACIKLAMA_5,
                    "SERI_NO_3": DetailFilteredList[i].SERI_NO_3,
                    "SERI_NO_4": DetailFilteredList[i].SERI_NO_4,
                };

                EditedData.push(Item);
        }

        EditedData.sort((a, b) => {
            const nameA = a.STOK_ADI.toUpperCase();
            const nameB = b.STOK_ADI.toUpperCase();
            if (nameA < nameB) {
                return -1;
            }
            if (nameA > nameB) {
                return 1;
            }
            return 0;
        });

        $(`#BelgeNoDetail${row.BELGE_NO}Table`).bootstrapTable({ data: EditedData });
    });

    function BelgeListIslemFormatter(e, index, row) {
        return `<button class="btn btn-primary" id="BelgeNoListAktarBtn" type="button" onclick="BelgeBilgisiGetir(event, '${index.SIPARIS_NO}', '${index.BELGE_NO}')">SEÇ</button>`
    }

    function BelgeDurumuFormatter(e, index, row) {
        return (index.ACTIVE == true) ? "AÇIK" : "KAPALI";
    }
</script>

<script>
    function BelgeBilgisiGetir(e, sipno, belgeno) {
        e.stopPropagation();

        if (Kalemler.length != 0) {
            Swal.fire({
                html: `<b>${belgeno}</b><br/> numaralı belgeyi seçmek istediğinize emin misiniz?`,
                text: "Kaydedilmeyen veriler var, bu işlem geri alınamaz!",
                icon: 'warning',
                showCancelButton: true,
                allowEnterKey: false,
                cancelButtonText: 'HAYIR',
                cancelButtonColor: '#d33',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'EVET',
                allowOutsideClick: false,
                customClass: 'AreYouSureAlert'
            }).then((result) => {
                if (result.isConfirmed) {
                    BelgeBilgisiDoldur(BelgeList.filter(x => x.SIPARIS_NO == sipno && x.BELGE_NO == belgeno));
                }
            });
        } else {
            BelgeBilgisiDoldur(BelgeList.filter(x => x.SIPARIS_NO == sipno && x.BELGE_NO == belgeno));
        }
    }
    function BelgeBilgisiDoldur(data) {
        SaveType = 1;
        Kalemler = [];
        KalemId = 0;
        BelgedenGelenKayitlar = [];

        $("#BelgeNoModal").modal("hide");

        $("#SiparisNo").html(data[0].SIPARIS_NO);
        $("#BelgeNo").html(data[0].BELGE_NO);
        $("#IRS_NO").val(data[0].IRS_NO);

        for (var i = 0; i < data.length; i++) {
            var Tarih = Date.parse(data[i].INS_DATE);

            var KalemData =
            {
                "INC_KEY": data[i].INCKEY,
                "ACTIVE": data[i].ACTIVE,
                "ID": KalemId,
                "CARI_ISIM": data[i].CARI_ISIM,
                "STOK_ADI": data[i].STOK_ADI,
                "STOK_KODU": data[i].STOK_KODU,
                "MIKTAR": data[i].MIKTAR1.toFixed(2),
                "OLCU_BR1": data[i].OLCU_BR1,
                "MIKTAR2": data[i].MIKTAR2.toFixed(2),
                "OLCU_BR2": data[i].OLCU_BR2,
                "SERI_NO": data[i].SERI_NO,
                "ACIK1": data[i].ACIK1,
                "ACIK2": data[i].ACIK2,
                "ACIK3": data[i].ACIK3,
                "SERI_NO_3": data[i].SERI_NO_3,
                "SERI_NO_4": data[i].SERI_NO_4,
                "ACIKLAMA_4": data[i].ACIKLAMA_4,
                "ACIKLAMA_5": data[i].ACIKLAMA_5,
                "ESKI_MIKTAR": data[i].MIKTAR1,
                "ESKI_MIKTAR2": data[i].MIKTAR2,
                "TARIH": (new Date(Tarih)).toLocaleDateString(),
                "CIKIS_DEPO": data[i].CIKIS_DEPO,
                "GIRIS_DEPO": data[i].GIRIS_DEPO
            };

            Kalemler.push(KalemData);
            BelgedenGelenKayitlar.push(KalemData.SERI_NO);
            KalemId = KalemId + 1;
        }

        var Depo = Depolar.filter(x => x.DEPO_KODU == Kalemler[0].GIRIS_DEPO);

        if (Depo.length > 0)
        {
            $('#GIRIS_DEPO').val(Depo[0].DEPO_ISMI);

            GirisDepo = Depo[0].DEPO_KODU;
        }

        BeforeDocument = Kalemler.length;

        Kalemler.sort((a, b) => {
            const nameA = a.STOK_ADI.toUpperCase();
            const nameB = b.STOK_ADI.toUpperCase();
            if (nameA < nameB) {
                return -1;
            }
            if (nameA > nameB) {
                return 1;
            }
            return 0;
        });
        
        $("#BelgeDurumu").prop('checked', false);

        if (Kalemler.filter(x => x.ACTIVE === true).length > 0)
        {
            $("#BelgeDurumu").prop('checked', true);
        }

        StokAdlariAyarla();

        $(`#StokAdlari`).prop('disabled', !($(`#BelgeDurumu`).is(':checked')));

        $('#TempTable').bootstrapTable("destroy");
        $('#TempTable').bootstrapTable({ data: Kalemler });

        $("#DeleteDocumentButton").show();
        $("#ModalSaveButton").prop("disabled", true);

        AlanlarıTemizle();
        ButonAyarla(0);

        $("#YeniBelgeOlusturButton").removeClass("i-disabled");

        $("#IRS_NO").prop("disabled", true);
        $("#StokAdlari").prop("disabled", true);
        $("#Miktar1").prop("disabled", true);
        $("#Miktar2").prop("disabled", true);
        $("#SERİ_NO").val(null);
    }
    function MiktarFormatla(value) {
        return parseFloat(value).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });
    }
    function KalinlikFormatter(value, index, row) {
        if (value?.toString().trim().length > 0) {
            return GenislikKalinlikFormat(value);
        }

        return "-";
    }

    function GenislikFormatter(value, index, row) {
        if (value?.toString().trim().length > 0) {
            return GenislikKalinlikFormat(value);
        }

        return "-";
    }

    function GenislikKalinlikFormat(value) {
        return value.replace(".", ",");
    }
</script>

<script>
    function YeniBelgeNoGetir() {
        var ProcUrl = "http://192.168.2.13:83/api/belge/exec/1";

        var BelgeNo = "";

        $.ajax({
            url: ProcUrl,
            type: 'GET',
            success: (result) => {
                BelgeNo = result[0].SIRADAKI_BELGE_NO;
            }
        }).then(() => {
            document.getElementById("BelgeNo").innerHTML = BelgeNo;
        });
    }

    function BelgeNoDegisti() {
        var ProcUrl = "http://192.168.2.13:83/api/belge/exec/1";

        $.getJSON(ProcUrl, function (data)
        {
            $('#BelgeNo').html(data[0].SIRADAKI_BELGE_NO);
        }).done(() =>
        {
            Swal.fire({
                title: `${$('#BelgeNo').html()}`,
                text: `Belge numaranız üstte yazılı olan numara ile değiştirilmiştir.`,
                icon: 'warning',
                showCancelButton: false,
                allowEnterKey: false,
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'TAMAM',
                allowOutsideClick: false,
            }).then((result) => {
                if (result.isConfirmed) {
                    ModalKaydet();
                }
            })
        });
    }

    function BelgeNoGuncelMi() {
        return new Promise((resolve, reject) =>
        {
            var ProcUrl = "http://192.168.2.13:83/api/belge/exec/1";

            $.ajax({
                type: 'GET',
                url: ProcUrl,
                success: function (response) {
                    if (response.length > 0)
                    {
                        if (response[0].SIRADAKI_BELGE_NO == $('#BelgeNo').html())
                        {
                            resolve(true);
                        }
                        else
                        {
                            resolve(false);
                        }
                    }
                },
                error: function () {
                    reject("some errors");
                }
            });
        });
    }
</script>

<script>
    function BelgeDurumSwitch() {
        document.getElementById("BelgeDurumu").blur();

        if ($(`#BelgeDurumu`).is(':checked')) {
            DegisimTipi = "Açık";
        }
        else {
            DegisimTipi = "Kapalı";
        }

        Swal.fire({
            html: `<b>${document.getElementById("BelgeNo").innerHTML}</b><br/> no'lu kabul formu '<b>${DegisimTipi}</b>' olarak kaydedilecektir, onaylıyor musunuz?`,
            icon: 'warning',
            showCancelButton: true,
            allowEnterKey: false,
            cancelButtonText: 'HAYIR',
            cancelButtonColor: '#d33',
            confirmButtonColor: '#3085d6',
            confirmButtonText: 'EVET',
            allowOutsideClick: false,
            customClass: 'AreYouSureAlert'
        }).then((result) =>
        {
            var Durum = $(`#BelgeDurumu`).is(':checked');

            if (result.isConfirmed)
            {
                AlanlarıTemizle();
                ButonAyarla(0);
                BelgeDurumDegistir();

                $("#Miktar1").prop("disabled", !Durum);
                $("#Miktar2").prop("disabled", !Durum);

                $("#SERİ_NO").val(null);

                for (var i = 0; i < Kalemler.length; i++) {
                    Kalemler[i].ACTIVE = Durum;
                }

                StokAdlariAyarla();
                $(`#StokAdlari`).prop('disabled', !($(`#BelgeDurumu`).is(':checked')));
                $("#TempTable").bootstrapTable("load", Kalemler);
            }
            else
            {
                $(`#BelgeDurumu`).prop("checked", !Durum);
                $(`#BelgeDurumu`).focusout();
            }
        });
    }

    function BelgeDurumDegistir() {
        var Belgeler = BelgeList.filter(x => x.SIPARIS_NO == SiparisNo && x.BELGE_NO == document.getElementById("BelgeNo").innerHTML);
        var Durum = $(`#BelgeDurumu`).is(':checked');

        for (var i = 0; i < Belgeler.length; i++) {

            var Url = `http://192.168.2.13:83/api/shipping/durum/${Durum}/${Belgeler[i].INCKEY}`;

            $.ajax({
                url: Url,
                type: 'PUT',
                success: function (result) {
                    Swal.fire({
                        title: 'Başarılı!',
                        text: 'Belge Durumu Başarıyla Değiştirildi.',
                        icon: 'success',
                        showConfirmButton: false,
                        allowEnterKey: false,
                        timer: 1500
                    });
                }
            });
        }
    }

    function DurumSecim()
    {
        var DocumentStateVal = $('input[name="DocumentStateRadio"]:checked').val();
        var DocState = DocumentStateVal == "all" ? "all" : (DocumentStateVal === 'true');

        if (DocState == "all") {
            Belge = Belgeler;
        }
        else if (DocState) {
            Belge = Belgeler.filter(x => x.ACTIVE);
        }
        else {
            Belge = Belgeler.filter(x => !x.ACTIVE);
        }

        $("#BelgeNoTable").bootstrapTable("destroy");
        $('#BelgeNoTable').bootstrapTable({ data: Belge });
    }
</script>

<style>
    .belgedetailtbl tr > th:nth-child(2), tr > td:nth-child(2) {
        background: var(--bs-table-bg);
    }

    tr > th:nth-child(2), tr > td:nth-child(2) {
        position: unset;
    }

    .no, .detail-view {
        --bs-table-bg: transparent;
        --bs-table-accent-bg: transparent;
        --bs-table-striped-color: #697a8d;
        --bs-table-striped-bg: rgba(105, 108, 255, 0.07);
        --bs-table-active-color: #697a8d;
        --bs-table-active-bg: rgba(67, 89, 113, 0.1);
        --bs-table-hover-color: #697a8d;
        --bs-table-hover-bg: rgba(105, 108, 255, 0.03);
    }

    #BelgeNoTable .card-views .card-view .card-view-value {
        margin-left: 0 !important;
        padding-left: 5px !important;
        white-space: normal !important;
    }

    #BelgeNoTable .card-views .card-view {
        margin-top: 0 !important;
    }

    .belgedetailtbl .card-views .card-view .card-view-value {
        margin-left: 0 !important;
        padding-left: 5px !important;
        white-space: normal !important;
    }

    .belgedetailtbl .card-views .card-view {
        margin-top: 0 !important;
    }

    .detail-view td {
        padding: 0 !important;
    }

    .pagination-info {
        color: var(--text-color) !important;
    }
</style>