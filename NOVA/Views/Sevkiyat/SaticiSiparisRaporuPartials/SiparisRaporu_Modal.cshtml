<div class="modal fade" id="SiparisModal" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="SiparisModalLabel" aria-hidden="true">
    <div id="ModalAyar" class="modal-dialog modal-dialog-scrollable modal-lg" style="max-width: 90% !important;">
        <div id="SiparisModalContent" class="modal-content" style="height:90vh;box-shadow: inset 0 0 15px #dbdbdb;">

            <div class="modal-header" style="display: flex; flex-direction: column;">
                <div class="row" style="display:flex;justify-content:center;align-items:center;">
                    <h5 class="modal-title" id="SiparisModalLabel">KABUL FORMU</h5>
                </div>
                <div class="row w-100 d-flex justify-content-start belge-bilgi" style="row-gap:0.5rem;">

                    <div class="row d-flex justify-content-start align-items-center" style="row-gap:0.5rem;">
                        <div class="col-sm-auto" style="padding-right: 0;">
                            <span style="font-size: 0.85rem;">SSIP NO: <b id="SiparisNo"></b></span>
                        </div>
                        <div class="col-md-2">
                            <div class="form-label-group outline m-0">
                                <input type="text" id="IRS_NO" class="form-control" placeholder="İRS.NO" autocomplete="off" />
                                <span><label for="IRS_NO">İRS.NO</label></span>
                            </div>
                        </div>
                    </div>

                    <div class="row d-flex justify-content-start align-items-center" style="row-gap:0.5rem;">
                        <div class="col-sm-auto" style="padding-right: 0;">
                            <span style="font-size: 0.85rem;">Belge Numarası: <b id="BelgeNo"></b></span>
                        </div>
                        <div class="col-sm-auto d-flex justify-content-start align-items-center" style="line-height: normal;">
                            <div class="form-check form-switch mx-2" style=" display: flex; justify-content: center; gap: 0.25rem; align-items: center;">
                                <input class="form-check-input" type="checkbox" id="BelgeDurumu" style="transform:Scale(1.25);" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<span>Belge Durumu</span>" disabled>
                            </div>

                            <i data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<span>Belgeleri Getir</span>" onclick="BelgeNoModal()" data-show-modal="BelgeNoModal" class="bi bi-file-earmark-ruled-fill showmodal" style="color:#203289; font-size: x-large;margin-right:0.5rem;"></i>
                            <i data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" data-bs-html="true" data-bs-original-title="<span>Yeni Belge Oluştur</span>" onclick="YeniBelgeOlustur()" id="YeniBelgeOlusturButton" class="bi bi-file-earmark-plus-fill i-disabled" style="color:#203289; font-size: x-large;"></i>
                        </div>
                        <div class="col-md-2">
                            <div class="form-label-group outline m-0">
                                <input type="text" id="GIRIS_DEPO" class="form-control" placeholder="DEPO" autocomplete="off" />
                                <span><label for="GIRIS_DEPO">DEPO</label></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="SaticiModalBody" class="modal-body pt-0">
                <div class="container-fluid pt-2">
                    <div class="row mb-4 gy-3">
                        <div class="col-md-7 ms-auto" id="Stoklar">
                        </div>
                        <div class="col-md-2 ms-auto">
                            <div class="form-label-group outline autocomplete m-0">
                                <input type="text" id="SIPARIS_BAKIYE" class="form-control" step="0.1" autocomplete="off" disabled />
                                <span><label for="SIPARIS_BAKIYE">Sipariş Bakiye</label></span>
                            </div>
                        </div>
                        <div class="col-md-3 ms-auto">
                            <div class="form-label-group outline autocomplete m-0">
                                <input type="text" id="SERİ_NO" class="form-control" placeholder="Barkod No" autocomplete="off" disabled />
                                <span><label for="SERİ_NO">Barkod No</label></span>
                            </div>
                        </div>
                    </div>
                    <div class="row gx-3 gy-2">
                        <div class="col-sm-3 col-6 m-auto">
                            <div class="form-label-group outline m-0">
                                <input type="number" id="Miktar1" class="form-control" step="0.01" value="0.00" placeholder="MİKTAR 1" min="0.00" />
                                <span><label for="Miktar1">MİKTAR 1</label></span>
                            </div>
                        </div>
                        <div class="col-sm-3 col-6 m-auto">
                            <div class="form-label-group outline m-0">
                                <input type="text" id="Olcubr1" class="form-control" placeholder="ÖLÇÜ BİRİMİ 1" disabled="disabled" />
                                <span><label for="Olcubr1">ÖLÇÜ BİRİMİ 1</label></span>
                            </div>
                        </div>
                        <div class="col-sm-3 col-6 m-auto miktarbirim">
                            <div class="form-label-group outline m-0">
                                <input type="number" id="Miktar2" class="form-control" value="0.00" step="0.01" placeholder="MİKTAR 2" min="0.00" />
                                <span><label for="Miktar2">MİKTAR 2</label></span>
                            </div>
                        </div>
                        <div class="col-sm-3 col-6 m-auto miktarbirim">
                            <div class="form-label-group outline m-0">
                                <input type="text" id="Olcubr2" class="form-control" placeholder="ÖLÇÜ BİRİMİ 2" disabled="disabled" />
                                <span><label for="Olcubr2">ÖLÇÜ BİRİMİ 2</label></span>
                            </div>
                        </div>
                    </div>
                    <div class="row my-3">
                        <div class="accordion accordion-flush" id="accordionFlushExample">
                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button bg-secondary collapsed" style="color:#fff" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">Ek Bilgiler</button>
                                </h2>
                                <div id="flush-collapseOne" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
                                    <div class="accordion-body p-3">

                                        <div class="row gy-3">
                                            <div class="col-sm">
                                                <div class="form-label-group outline m-0">
                                                    <input type="number" id="ACIK1" class="form-control" step="0.01" autocomplete="off" value="" />
                                                    <span><label for="ACIK1">KALINLIK</label></span>
                                                </div>
                                            </div>
                                            <div class="col-sm">
                                                <div class="form-label-group outline m-0">
                                                    <input type="number" id="ACIK2" class="form-control" step="0.1" autocomplete="off" value="" />
                                                    <span><label for="ACIK2">GENİŞLİK</label></span>
                                                </div>
                                            </div>
                                            <div class="col-sm">
                                                <div class="form-label-group outline m-0">
                                                    <input type="text" id="ACIK3" class="form-control" autocomplete="off" value="" />
                                                    <span><label for="ACIK3">ÜRÜN NO</label></span>
                                                </div>
                                            </div>
                                            <div class="col-sm">
                                                <div class="form-label-group outline m-0">
                                                    <input type="text" id="SERİ_NO_3" class="form-control" autocomplete="off" value="" />
                                                    <span><label for="SERİ_NO_3">KALİTE</label></span>
                                                </div>
                                            </div>
                                            <div class="col-sm">
                                                <div class="form-label-group outline m-0">
                                                    <input type="text" id="SERİ_NO_4" class="form-control" autocomplete="off" value="" />
                                                    <span><label for="SERİ_NO_4">KAPLAMA</label></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-4 gy-2">
                        <div class="col" id="kalemkaydet">
                            <button type="button" id="kalemkaydetbtn" onclick="YeniKalem()" class="btn btn-primary" style="width:100%;">EKLE</button>
                        </div>
                        <div class="col" id="guncellemekaydet">
                            <button type="button" id="guncellemekaydetbtn" onclick="KalemGuncelle()" class="btn btn-primary" style="width:100%;">GÜNCELLE</button>
                        </div>
                        <div class="col" id="guncellemeiptal">
                            <button type="button" id="guncellemeiptalbtn" onclick="IptalKalem()" class="btn btn-primary" style="width:100%;">İPTAL</button>
                        </div>
                    </div>

                    <div class="row">

                        <div class="card-body p-0">
                            <div id="TempTableToolbar">
                                <div class="row  my-2 gap-1">
                                    <div class="col-6 col-md-2 gap-1" style="display: flex; justify-content: start; align-items: center; width: fit-content; padding-right: 0;">
                                        <div style="width: 1.25rem; height: 1.25rem; background-color: #e9ebff;"></div>
                                        <div>AÇIK</div>
                                        <div style="width: 1.25rem; height: 1.25rem; background-color: #FAEAEA;"></div>
                                        <div>KAPALI</div>
                                    </div>
                                    <div class="col-3 col-sm-auto" style="display:flex;justify-content:start;align-items:center;">
                                        <div class="form-check form-switch h-100 position-relative">
                                            <input class="form-check-input" style="width: 6rem; height: 2rem;" type="checkbox" id="yazdirSwitch" onclick="YazdirSwitch()" checked="">
                                            <span id="yazdirLabel" style="position: absolute; left: 0.5rem; top: 0.7rem; font-size: 0.7rem; pointer-events: none; color: white;">YAZDIR</span>
                                            <span id="yazdirmaLabel" style="position: absolute; left: 2.1rem; top: 0.7rem; font-size: 0.7rem; pointer-events: none; opacity: 0;">YAZDIRMA</span>
                                        </div>
                                    </div>
                                    <div class="col-12 col-sm-auto" id="yazici-col" style="display:block;">
                                        <select id="yazici" class="form-select" style="width:250px;"  onchange="YaziciSec(this.value)">
                                        </select>
                                    </div>
                                    <div class="col-12 col-md-12">
                                        <input class="form-control" type="text" placeholder="Ara" id="customSearchTempTable" />
                                    </div>
                                </div>
                            </div>

                            <div id="employeeTableWrapper" class="tableWrapper table-responsive">
                                <table id="TempTable"
                                       data-search="true"
                                       data-search-selector="#customSearchTempTable"
                                       data-show-refresh="false"
                                       data-show-toggle="false"
                                       data-show-fullscreen="false"
                                       data-show-columns="false"
                                       data-show-columns-toggle-all="false"
                                       data-detail-view="false"
                                       data-show-export="false"
                                       data-click-to-select="true"
                                       data-minimum-count-columns="2"
                                       data-show-pagination-switch="false"
                                       data-page-size="5"
                                       data-page-list="[5,20,50,100]"
                                       data-pagination="false"
                                       data-id-field="id"
                                       data-show-footer="false"
                                       data-mobile-responsive="true"
                                       data-response-handler="responseHandler"
                                       data-locale="tr-TR" ,
                                       data-row-style="TabloSatirStili">
                                    <thead>
                                        <tr>
                                            <th data-field="SERI_NO" data-formatter="TempTableEmptyFormatter" data-sortable="true" data-halign="center" data-align="center">BARKOD NO</th>
                                            <th data-field="STOK_ADI" data-formatter="TempTableEmptyFormatter" data-sortable="true" data-halign="center" data-align="center">STOK ADI</th>
                                            <th data-field="MIKTAR" data-formatter="MiktarFormatla" data-sortable="true" data-halign="center" data-align="center">MİKTAR 1</th>
                                            <th data-field="OLCU_BR1" data-formatter="TempTableEmptyFormatter" data-sortable="true" data-halign="center" data-align="center">BİRİM 1</th>
                                            <th data-field="MIKTAR2" data-formatter="MiktarFormatla" data-sortable="true" data-halign="center" data-align="center">MİKTAR 2</th>
                                            <th data-field="OLCU_BR2" data-formatter="TempTableEmptyFormatter" data-sortable="true" data-halign="center" data-align="center">BİRİM 2</th>
                                            <th data-field="ACIK1" data-formatter="KalinlikFormatter" data-sortable="true" data-halign="center" data-align="center">KALINLIK</th>
                                            <th data-field="ACIK2" data-formatter="GenislikFormatter" data-sortable="true" data-halign="center" data-align="center">GENİŞLİK</th>
                                            <th data-field="ACIK3" data-formatter="TempTableEmptyFormatter" data-sortable="true" data-halign="center" data-align="center">ÜRÜN NO</th>
                                            <th data-field="SERI_NO_3" data-formatter="TempTableEmptyFormatter" data-sortable="true" data-halign="center" data-align="center">KALİTE</th>
                                            <th data-field="SERI_NO_4" data-formatter="TempTableEmptyFormatter" data-sortable="true" data-halign="center" data-align="center">KAPLAMA KALINLIĞI</th>
                                            <th data-halign="center" data-align="center" data-formatter="SaticiIslemFormatter">İŞLEM</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer" style="display:flex;justify-content:center;align-items:center;">
                <button class="btn btn-primary" id="ModalSaveButton" type="button" onclick="ModalKaydet()">KAYDET</button>
                <button class="btn btn-warning" id="DeleteDocumentButton" type="button" onclick="ModalSil()">SİL</button>
                <button class="btn btn-danger" type="button" onclick="ModalKapat()">KAPAT</button>
            </div>
        </div>
    </div>
</div>




<div class="modal fade" id="YaziciModal" data-bs-backdrop="static" data-bs-keyboard="false" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="box-shadow: inset 0 0 15px #dbdbdb;">

            <div class="modal-header" style="display: flex; flex-direction: column;">
                <div class="row" style="display:flex;justify-content:center;align-items:center;">
                    <h5 class="modal-title" style="text-align:center;"><b id="YaziciModalBarkod">BarkodNo</b><br /> barkod no'lu etiketi yazdırmak için lütfen yazıcı seçiniz.</h5>
                </div>
            </div>

            <div class="modal-body d-flex justify-content-center align-items-center">
                <select id="yazici-modal" class="form-select" style="width:100%" onchange="YaziciSecModal(this.value)">
                </select>
            </div>

            <div class="modal-footer" style="display:flex;justify-content:center;align-items:center;">
                <button class="btn btn-primary" type="button" onclick="SevkiyatCiktisiAl()">YAZDIR</button>
                <button class="btn btn-danger" type="button" onclick="YaziciModalKapat()">KAPAT</button>
            </div>
        </div>
    </div>
</div>




<script>
    var Kalemler = [];
    var SilinecekKalemler = [];
    var KalemId = 0;
    var GuncellenenKalem = -1;
    var SiparisNo = -1;
    var SaveType = 0;
    var PageType = 7;
    var Yazdir = true;
    var AcilisStok;
    var BelgedenGelenKayitlar = [];

    function SaticiRaporModal(e, value, stokKodu) {
        e.stopPropagation();
        $("#table").bootstrapTable('collapseAllRows');

        EkranAcilisi();
        SiparisNoAyarla(value);
        YeniBelgeNoGetir();
        StokAdlariAyarla();
        AlanlarıTemizle();
        StokDegistir(stokKodu);
        ButonAyarla(0);
        GuncelSiparisBakiye();
        ModalKaydetButtonState();
        FullscreenModal();
        YazdirSwitch();
        DepoGetir();

        AcilisStok = stokKodu;

        $('#StokAdlari').prop('disabled', true);

        $('#GIRIS_DEPO').val("");
        GirisDepo = -1;

        $("#TempTable").bootstrapTable("destroy");
        $("#TempTable").bootstrapTable({ data: Kalemler });

        history.pushState(null, null, window.location.href);
        history.back();
        window.onpopstate = function () { history.forward(); };

        $.ajax({
            url: 'http://192.168.2.13:83/api/printers/list',
            type: 'GET',
            error: (e) => { console.error(`Yazıcı Listesi Hata: ${e}`); },
            success: (response) => {
                $('#yazici').select2({ language: "tr", minimumResultsForSearch: 50 });
                $('#yazici-modal').select2({ language: "tr", minimumResultsForSearch: 50 });

                $('#yazici').html('');
                $('#yazici-modal').html('');

                response?.forEach((item) => {
                    $('#yazici').append(new Option(item.PRINTER_NAME, item.PRINTER_NAME));
                    $('#yazici-modal').append(new Option(item.PRINTER_NAME, item.PRINTER_NAME));
                });

                if (localStorage.getItem("yazici") == undefined || localStorage.getItem("yazici") == null || localStorage.getItem("yazici") == 'null')
                {
                    localStorage.setItem("yazici", $('#yazici').val());
                }
                else
                {
                    $('#yazici').val(localStorage.getItem("yazici"));
                }
            },
        });
    }

    function GetSiparisDetailsWithStockCode(StokKodu) {
        var SiparisNo = document.getElementById("SiparisNo").innerHTML;
        var detail = detayli.filter(x => x.STOK_KODU == StokKodu && x.SIPARIS_NO == SiparisNo);

        return detail;
    }

    function GetSiparisDetails() {
        var SiparisNo = document.getElementById("SiparisNo").innerHTML;
        var detail = detayli.filter(x => x.SIPARIS_NO == SiparisNo);

        return detail;
    }

    function SiparisNoAyarla(value) {
        var ScreenWidth = window.matchMedia("(max-width: 562px)");

        if (ScreenWidth.matches) {
            var SiparisIndex = (value.parentNode.parentNode.parentNode.parentNode.parentNode.rowIndex - 1);
            SiparisNo = document.getElementsByTagName("tbody")[0].getElementsByTagName("tr")[SiparisIndex].getElementsByTagName("td")[0].getElementsByClassName("card-views")[0].getElementsByClassName("card-view")[0].getElementsByTagName("span")[1].getElementsByTagName("label")[0].innerHTML;
        }
        else {
            var SiparisIndex = (value.parentNode.parentNode.rowIndex - 1);
            SiparisNo = document.getElementsByTagName("tbody")[0].getElementsByTagName("tr")[SiparisIndex].getElementsByTagName("td")[0].getElementsByTagName("label")[0].innerHTML;
        }

        document.getElementById("SiparisNo").innerHTML = SiparisNo;
    }

    function StokAdlariAyarla() {
        var StokOptions = '<select onchange="StokDegistir(this.value)" id="StokAdlari" class="form-select"><option value="" selected disabled>Lütfen Stok Adı Seçiniz</option>';

        if (SaveType == 1) {
            var uniqueStok = Kalemler.filter((obj, index) => Kalemler.findIndex((item) => item.STOK_KODU === obj.STOK_KODU) === index);

            for (var i = 0; i < uniqueStok.length; i++) {
                var filtered = Kalemler.filter(x => x.STOK_KODU == uniqueStok[i].STOK_KODU);

                var AcikVarMi = false;

                for (var j = 0; j < filtered.length; j++) {
                    if (filtered[j].ACTIVE) {
                        StokOptions += '<option value="' + uniqueStok[i].STOK_KODU + '">' + uniqueStok[i].STOK_ADI + '</option>';
                        AcikVarMi = true;
                        break;
                    }
                }

                if (!AcikVarMi) {
                    StokOptions += '<option disabled value="' + uniqueStok[i].STOK_KODU + '" style="color:#CDD4DA;">' + uniqueStok[i].STOK_ADI + '</option>';
                }
            }
        }
        else {
            var detail = GetSiparisDetails();

            for (let i = 0; i < detail.length; i++) {
                StokOptions += '<option value="' + detail[i].STOK_KODU + '">' + detail[i].STOK_ADI + '</option>';
            }
        }

        document.getElementById("Stoklar").innerHTML = StokOptions + "</select>";

        $(`#StokAdlari`).prop('disabled', !($(`#BelgeDurumu`).is(':checked')));
    }

    function VarsayılanStokAyarla(value) {
        var ScreenWidth = window.matchMedia("(max-width: 562px)");

        var StokAdi = null;

        if (ScreenWidth.matches) {
            var SiparisIndex = (value.parentNode.parentNode.parentNode.parentNode.parentNode.rowIndex - 1);
            StokAdi = document.getElementsByTagName("tbody")[0].getElementsByTagName("tr")[SiparisIndex].getElementsByTagName("td")[0].getElementsByClassName("card-views")[0].getElementsByClassName("card-view")[3].getElementsByTagName("span")[1].innerHTML;
        }
        else {
            var SiparisIndex = (value.parentNode.parentNode.rowIndex - 1);
            StokAdi = document.getElementsByTagName("tbody")[0].getElementsByTagName("tr")[SiparisIndex].getElementsByTagName("td")[3].innerHTML;
        }

        var List = document.getElementById("StokAdlari").getElementsByTagName("option");

        for (var i = 0; i < List.length; i++) {
            if (List[i].innerHTML == StokAdi) {
                StokDegistir(List[i].value);
                break;
            }
        }
    }

    function StokDegistir(value) {
        var detail = GetSiparisDetailsWithStockCode(value);

        document.getElementById("Olcubr1").value = detail[0].OLCU_BR1;
        document.getElementById("Olcubr2").value = detail[0].OLCU_BR2;

        document.getElementById("Miktar1").disabled = false;
        document.getElementById("Miktar2").disabled = false;

        document.getElementById("StokAdlari").value = value;

        document.getElementById("kalemkaydetbtn").disabled = true;

        GuncelSiparisBakiye();
        AlanlarıTemizle();
        ButonAyarla(1);

        if ($("#SERİ_NO").val().trim().length == 0 && GuncellenenKalem == -1) {
            GuncelSeriNoGetir();
            ModalKaydetButtonState();
        }
    }

    function GuncelSiparisBakiye() {
        var SiparisNo = document.getElementById("SiparisNo").innerHTML;
        var StokKodu = document.getElementById("StokAdlari").value;

        if (StokKodu == "") {
            $("#SIPARIS_BAKIYE").val("-");
        }
        else {
            var Filtered = detayli.filter(x => x.SIPARIS_NO == SiparisNo && x.STOK_KODU == StokKodu);
            var BakiyeMiktar = parseFloat(Filtered[0].BAKIYE_MIKTARI).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });
            $("#SIPARIS_BAKIYE").val(BakiyeMiktar);
        }
    }

    function YeniBelgeOlustur() {
        Swal.fire({
            text: 'Yeni belge oluşturmak istediğinize emin misiniz?',
            icon: 'warning',
            showCancelButton: true,
            allowEnterKey: false,
            cancelButtonText: 'HAYIR',
            cancelButtonColor: '#d33',
            confirmButtonColor: '#3085d6',
            confirmButtonText: 'EVET',
            allowOutsideClick: false,
            customClass: 'AreYouSureAlert'
        }).then((result) => {
            if (result.isConfirmed) {
                BelgeOlustur();
            }
        });
    }

    function BelgeOlustur() {
        Kalemler = [];
        KalemId = 0;
        GuncellenenKalem = -1;
        SaveType = 0;
        SilinecekKalemler = [];
        Yazdir = true;
        BelgedenGelenKayitlar = [];

        $('#GIRIS_DEPO').val("");
        GirisDepo = -1;

        $("#TempTable").bootstrapTable("destroy");
        $("#TempTable").bootstrapTable({ data: Kalemler });

        $(`#BelgeDurumu`).prop("checked", true);
        $(`#yazdirSwitch`).prop("checked", true);

        $("#YeniBelgeOlusturButton").addClass("i-disabled");

        $('#IRS_NO').val('');
        $("#IRS_NO").prop("disabled", false);
        $("#ModalSaveButton").prop("disabled", true);
        $("#kalemkaydetbtn").prop("disabled", true);
        $("#DeleteDocumentButton").hide();

        YeniBelgeNoGetir();
        AlanlarıTemizle();
        ButonAyarla(0);
        StokAdlariAyarla();
        StokDegistir(AcilisStok);
        GuncelSeriNoGetir();
        GuncelSiparisBakiye();
        YazdirSwitch();

        $("#StokAdlari").prop("disabled", true);
    }

    function EkranAcilisi() {
        Kalemler = [];
        KalemId = 0;
        GuncellenenKalem = -1;
        SiparisNo = -1;
        SaveType = 0;
        Yazdir = true;
        SilinecekKalemler = [];
        BelgedenGelenKayitlar = [];

        $(`#BelgeDurumu`).prop("checked", true);
        $(`#yazdirSwitch`).prop("checked", true);

        $("#YeniBelgeOlusturButton").addClass("i-disabled");

        $('#IRS_NO').val('');
        $("#IRS_NO").prop("disabled", false);
        $("#StokAdlari").prop("disabled", false);
        $("#ModalSaveButton").prop("disabled", true);
        $("#kalemkaydetbtn").prop("disabled", true);
        $("#DeleteDocumentButton").hide();
    }

    function ButonAyarla(state) {
        if (state === 0) {
            $("#kalemkaydet").hide();
            $("#guncellemekaydet").hide();
            $("#guncellemeiptal").hide();
            $("#yazdir").hide();
            EkBilgilerDurumAyarla(true);
        }
        else if (state === 1) {
            $("#kalemkaydet").show();
            $("#guncellemekaydet").hide();
            $("#guncellemeiptal").hide();
            $("#yazdir").show();
            EkBilgilerDurumAyarla(false);
        }
        else if (state === 2) {
            if (SaveType === 1) {
                $("#kalemkaydet").hide();
                $("#guncellemekaydet").show();
                $("#guncellemeiptal").show();
                $("#yazdir").show();
            }
            else if (SaveType == 0) {
                $("#kalemkaydet").show();
                $("#guncellemekaydet").show();
                $("#guncellemeiptal").show();
                $("#yazdir").show();
            }
            EkBilgilerDurumAyarla(false);
        }
    }

    function AlanlarıTemizle() {
        $("#Miktar1").val(parseFloat('0.00'));
        $("#Miktar2").val(parseFloat('0.00'));
        $("#ACIK1").val(null);
        $("#ACIK2").val(null);
        $("#ACIK3").val(null);
        $("#SERİ_NO_3").val(null);
        $("#SERİ_NO_4").val(null);
        $("#ACIKLAMA_4").val(null);
        $("#ACIKLAMA_5").val(null);
    }

    function EkBilgilerDurumAyarla(Durum) {
        $("#Miktar1").prop("disabled", Durum);
        $("#Miktar2").prop("disabled", Durum);
        $("#ACIK1").prop("disabled", Durum);
        $("#ACIK2").prop("disabled", Durum);
        $("#ACIK3").prop("disabled", Durum);
        $("#SERİ_NO_3").prop("disabled", Durum);
        $("#SERİ_NO_4").prop("disabled", Durum);
        $("#ACIKLAMA_4").prop("disabled", Durum);
        $("#ACIKLAMA_5").prop("disabled", Durum);
    }

    function YazdirSwitch() {
        Yazdir = $('#yazdirSwitch').is(':checked');

        if (!Yazdir) {
            $('#yazdirLabel').removeClass('fadeInAnimasyon');
            $('#yazdirmaLabel').removeClass('fadeOutAnimasyon');

            $('#yazdirLabel').addClass('fadeOutAnimasyon');
            $('#yazdirmaLabel').addClass('fadeInAnimasyon');

            $('#yazici-col').css('display', 'none');
        }
        else {
            $('#yazdirLabel').removeClass('fadeOutAnimasyon');
            $('#yazdirmaLabel').removeClass('fadeInAnimasyon');

            $('#yazdirLabel').addClass('fadeInAnimasyon');
            $('#yazdirmaLabel').addClass('fadeOutAnimasyon');

            $('#yazici-col').css('display', 'block');
        }
    }
</script>

<script>
    function BilgileriGetir() {
        var detail = GetSiparisDetailsWithStockCode(document.getElementById("StokAdlari").value);

        var StokAdi = detail[0].STOK_ADI;
        var Miktar1 = $('#Miktar1').val();
        var OlcuBr1 = document.getElementById("Olcubr1").value;
        var Miktar2 = $('#Miktar2').val();
        var OlcuBr2 = document.getElementById("Olcubr2").value;
        var SeriNo = document.getElementById("SERİ_NO").value;
        var Acik1 = $('#ACIK1').val()
        var Acik2 = $('#ACIK2').val()
        var Acik3 = document.getElementById("ACIK3").value;
        var SeriNo3 = document.getElementById("SERİ_NO_3").value;
        var SeriNo4 = document.getElementById("SERİ_NO_4").value;
        var Aciklama4 = null;
        var Aciklama5 = null;

        return Item = {
            "ID": KalemId,
            "ACTIVE": true,
            "STOK_ADI": StokAdi,
            "STOK_KODU": document.getElementById("StokAdlari").value,
            "MIKTAR": Miktar1,
            "OLCU_BR1": OlcuBr1,
            "MIKTAR2": Miktar2,
            "OLCU_BR2": OlcuBr2,
            "SERI_NO": SeriNo,
            "ACIK1": Acik1,
            "ACIK2": Acik2,
            "ACIK3": Acik3,
            "SERI_NO_3": SeriNo3,
            "SERI_NO_4": SeriNo4,
            "ACIKLAMA_4": Aciklama4,
            "ACIKLAMA_5": Aciklama5,
            "TARIH": (new Date()).toLocaleDateString(),
            "GIRIS_DEPO": GirisDepo,
            "CIKIS_DEPO": null
        };
    }

    function BilgileriDoldur(value) {
        StokDegistir(value.STOK_KODU);

        document.getElementById("Miktar1").value = value.MIKTAR;
        document.getElementById("Olcubr1").value = value.OLCU_BR1;
        document.getElementById("Miktar2").value = value.MIKTAR2;
        document.getElementById("Olcubr2").value = value.OLCU_BR2;
        document.getElementById("SERİ_NO").value = value.SERI_NO;
        $('#ACIK1').val(parseFloat(value.ACIK1).toString())
        $('#ACIK2').val(parseFloat(value.ACIK2).toString())
        document.getElementById("ACIK3").value = value.ACIK3;
        document.getElementById("SERİ_NO_3").value = value.SERI_NO_3;
        document.getElementById("SERİ_NO_4").value = value.SERI_NO_4;
        //document.getElementById("ACIKLAMA_4").value = value.ACIKLAMA_4;
        //document.getElementById("ACIKLAMA_5").value = value.ACIKLAMA_5;

        var Depo = Depolar.filter(x => x.DEPO_KODU == value.GIRIS_DEPO);

        $('#GIRIS_DEPO').val(Depo[0].DEPO_ISMI);

        GirisDepo = Depo[0].DEPO_KODU;
    }

    function YeniKalem() {
        ShowProgress()
        var SeriNo = $("#SERİ_NO").val();

        $("#kalemkaydetbtn").prop("disabled", true);

        if (SeriNo.trim().length !== 0 && SeriNo !== "-") {
            SeriNoOzgunMu(SeriNo).then((OzgunDeger) => {
                if (!OzgunDeger || SeriNoGeciciTablodaVarMi(SeriNo)) {
                    var SERI_TIP = 2;
                    var ProcUrl = `http://192.168.2.13:83/api/seri/exec/${SERI_TIP}`;

                    $.ajax({
                        url: ProcUrl,
                        type: 'GET',
                        success: (data) => {
                            HideProgress()
                            Swal.fire({
                                html: `Yeni kalem <br/><b>${data[0].SERI_NO}</b><br/> barkod no'su ile kaydedilecektir, onaylıyor musunuz?`,
                                icon: 'warning',
                                showCancelButton: true,
                                allowEnterKey: false,
                                cancelButtonText: 'HAYIR',
                                cancelButtonColor: '#d33',
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'EVET',
                                allowOutsideClick: false,
                                customClass: 'AreYouSureAlert'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    $("#SERİ_NO").val(data[0].SERI_NO);
                                    KalemEkle();
                                }
                            });
                        }
                    });
                }
                else {
                    KalemEkle();
                }
            });
        }
        else {
            Swal.fire({
                title: 'Uyarı',
                text: "Seri no seçilmeden kayıt yapılamaz.",
                icon: 'warning',
                showCancelButton: true,
                allowEnterKey: false,
                cancelButtonText: 'TAMAM',
                cancelButtonColor: '#3085d6',
                showConfirmButton: false,
                allowOutsideClick: false,
                customClass: 'AreYouSureAlert'
            });
        }
        HideProgress()
    }

    function KalemEkle() {
        var Bilgiler = BilgileriGetir();
        Kalemler.push(Bilgiler);
        KalemId = KalemId + 1;
        GuncellenenKalem == -1;

        if (Yazdir) {
            SevkiyatCiktisiAl(Bilgiler.SERI_NO);
        }

        $('#TempTable').bootstrapTable("destroy");
        $('#TempTable').bootstrapTable({ data: Kalemler });

        AlanlarıTemizle();
        ButonAyarla(0);

        $("#SERİ_NO").val(null);
        $("#StokAdlari").val("");

        $("#ModalSaveButton").prop('disabled', false);
        $("#kalemkaydetbtn").prop("disabled", false);

        GuncelSiparisBakiye();
        ModalKaydetButtonState();

        if (GirisDepo != -1) {
            $("#StokAdlari").prop("disabled", false);
        }
    }

    function KalemBilgisiGoster(KalemId) {
        GuncellenenKalem = Kalemler.findIndex(x => x.ID == KalemId);

        $('#SaticiModalBody').animate({ scrollTop: 0 }, 'fast');

        BilgileriDoldur(Kalemler[GuncellenenKalem]);

        ButonAyarla(2);

        ModalKaydetButtonState();
        MiktarGirisKontrolu();
    }

    function KalemGuncelle() {
        $("#guncellemekaydetbtn").prop("disabled", true);

        var Bilgi = BilgileriGetir();

        Kalemler[GuncellenenKalem].MIKTAR = Bilgi.MIKTAR;
        Kalemler[GuncellenenKalem].OLCU_BR1 = Bilgi.OLCU_BR1;
        Kalemler[GuncellenenKalem].MIKTAR2 = Bilgi.MIKTAR2;
        Kalemler[GuncellenenKalem].OLCU_BR2 = Bilgi.OLCU_BR2;
        Kalemler[GuncellenenKalem].SERI_NO = Bilgi.SERI_NO;
        Kalemler[GuncellenenKalem].ACIK1 = Bilgi.ACIK1;
        Kalemler[GuncellenenKalem].ACIK2 = Bilgi.ACIK2;
        Kalemler[GuncellenenKalem].ACIK3 = Bilgi.ACIK3;
        Kalemler[GuncellenenKalem].SERI_NO_3 = Bilgi.SERI_NO_3;
        Kalemler[GuncellenenKalem].SERI_NO_4 = Bilgi.SERI_NO_4;
        Kalemler[GuncellenenKalem].ACIKLAMA_4 = Bilgi.ACIKLAMA_4;
        Kalemler[GuncellenenKalem].ACIKLAMA_5 = Bilgi.ACIKLAMA_5;

        if (Yazdir) {
            SevkiyatCiktisiAl(Bilgi.SERI_NO);
        }

        $("#TempTable").bootstrapTable("destroy");
        $("#TempTable").bootstrapTable({ data: Kalemler });

        AlanlarıTemizle();
        ButonAyarla(0);

        GuncellenenKalem = -1;

        $("#SERİ_NO").val(null);

        $("#ModalSaveButton").prop('disabled', false);

        $("#StokAdlari").val(null);
        $("#guncellemekaydetbtn").prop("disabled", false);

        GuncelSiparisBakiye();
        ModalKaydetButtonState();

        if (GirisDepo != -1 && SaveType == 0) {
            $("#StokAdlari").prop("disabled", false);
        }
    }

    function KalemSil(Id, SeriNo) {
        Swal.fire({
            html: `<b>${SeriNo}</b><br /> no'lu barkodu silmek istediğinize emin misiniz?`,
            icon: 'warning',
            showCancelButton: true,
            allowEnterKey: false,
            cancelButtonText: 'HAYIR',
            cancelButtonColor: '#d33',
            confirmButtonColor: '#3085d6',
            confirmButtonText: 'EVET',
            allowOutsideClick: false,
            customClass: 'AreYouSureAlert'
        }).then((result) => {
            if (result.isConfirmed) {
                Kalemler = Kalemler.filter(x => x.ID != Id);

                var EskiKayit = BelgedenGelenKayitlar.includes(SeriNo);

                if (EskiKayit) {
                    SilinecekKalemler.push(SeriNo);
                }

                if (Kalemler.length == 0 && SaveType == 1) {
                    KalemleriSil().then(() => {
                        setTimeout("BelgeOlustur()", 50);
                    });
                }

                $("#TempTable").bootstrapTable("destroy");
                $("#TempTable").bootstrapTable({ data: Kalemler });

                AlanlarıTemizle();
                ButonAyarla(0);

                $("#SERİ_NO").val(null);

                $("#ModalSaveButton").prop('disabled', false);

                $("#StokAdlari").val(null);
                $("#guncellemekaydetbtn").prop("disabled", false);

                GuncelSiparisBakiye();
                ModalKaydetButtonState();
            }
        });
    }

    function IptalKalem() {
        AlanlarıTemizle();
        ButonAyarla(0);

        GuncellenenKalem = -1;

        $("#SERİ_NO").val(null);
        $("#StokAdlari").val("");

        GuncelSiparisBakiye();
        ModalKaydetButtonState();

        if (GirisDepo != -1 && SaveType == 0) {
            $("#StokAdlari").prop("disabled", false);
        }
    }

    function SeriNoOzgunMu(SeriNo) {
        return new Promise((resolve, reject) => {
            var ProcUrl = "http://192.168.2.13:83/api/shipping/sip/" + $('#SiparisNo').html();

            $.ajax({
                type: 'GET',
                url: ProcUrl,
                success: function (response) {
                    if (response.length > 0) {
                        var filtered = response.filter(x => x.SERI_NO == SeriNo);

                        if (filtered.length > 0) {
                            resolve(false);
                        }
                    }

                    resolve(true);
                },
                error: function () {
                    reject("some errors");
                }
            });
        });
    }

    function SeriNoGeciciTablodaVarMi(SeriNo) {
        var Kayit = Kalemler.filter(x => x.SERI_NO == SeriNo);

        return Kayit.length > 0;
    }

    function GuncelSeriNoGetir() {
        if (SiparisNo != -1) {
            var SERI_TIP = 2;
            var ProcUrl = `http://192.168.2.13:83/api/seri/exec/${SERI_TIP}`;

            $.ajax({
                url: ProcUrl,
                type: 'GET',
                success: (data) => {
                    document.getElementById("SERİ_NO").value = data[0].SERI_NO;
                }
            });
        }
    }

    let MiktarKontrol = async (KalemBirlesik, HataListesi) => {
        const result = await Promise.all(KalemBirlesik.map(each =>
            $.ajax({
                url: `http://192.168.2.13:83/api/shipping/kalembakiye/${document.getElementById('SiparisNo').innerHTML}/${each.STOK_KODU}/${each.MIKTAR}/${document.getElementById("BelgeNo").innerHTML}/${PageType}`,
                type: 'GET',
                success: (data) => {
                    if (data[0].BAKIYE_KONTROL == 0) {
                        var HataTemplate = {
                            "STOK_ADI": each.STOK_ADI,
                            "STOK_KODU": each.STOK_KODU,
                            "MIKTAR": each.MIKTAR
                        };

                        HataListesi.push(HataTemplate);
                    }
                }
            })
        ));

        return result;
    }

    let KalemleriSil = async () => {
        const result = await Promise.all(SilinecekKalemler.map(each =>
            $.ajax({
                url: `http://192.168.2.13:83/api/shipping/${document.getElementById("BelgeNo").innerHTML}/${each}`,
                type: 'DELETE',
                success: (data) => { }
            })
        ));

        return result;
    }

    function BelgeDurumKontrol() {
        return new Promise((resolve, reject) => {
            var SiparisNo = document.getElementById("SiparisNo").innerHTML;
            var BelgeNo = document.getElementById("BelgeNo").innerHTML;

            var ProcUrl = "http://192.168.2.13:83/api/shipping/sip/" + SiparisNo;

            $.ajax({
                url: ProcUrl,
                type: 'GET',
                success: function (data) {
                    if (data.length > 0) {
                        BelgeList = data;

                        var AynıBelgeNoFilter = BelgeList.filter(
                            (obj, index) =>
                                BelgeList.findIndex((item) => item.BELGE_NO === obj.BELGE_NO) === index
                        );

                        Belgeler = [];

                        for (var i = 0; i < AynıBelgeNoFilter.length; i++) {
                            var Filtered = BelgeList.filter(x => x.BELGE_NO == AynıBelgeNoFilter[i].BELGE_NO);
                            var AcikMi = false;

                            for (var j = 0; j < Filtered.length; j++) {
                                if (Filtered[j].ACTIVE) {
                                    Belgeler.push({
                                        "CARI_ISIM": AynıBelgeNoFilter[i].CARI_ISIM,
                                        "SIPARIS_NO": AynıBelgeNoFilter[i].SIPARIS_NO,
                                        "BELGE_NO": AynıBelgeNoFilter[i].BELGE_NO,
                                        "ACTIVE": true,
                                    });
                                    AcikMi = true;
                                    break;
                                }
                            }

                            if (!AcikMi) {
                                Belgeler.push({
                                    "CARI_ISIM": AynıBelgeNoFilter[i].CARI_ISIM,
                                    "SIPARIS_NO": AynıBelgeNoFilter[i].SIPARIS_NO,
                                    "BELGE_NO": AynıBelgeNoFilter[i].BELGE_NO,
                                    "ACTIVE": false,
                                });
                            }
                        }

                        if (Belgeler.filter(x => x.BELGE_NO == BelgeNo).length > 0) {
                            var Durum = Belgeler.filter(x => x.BELGE_NO == BelgeNo)[0].ACTIVE;
                            resolve(Durum);
                        }
                    }

                    resolve(true);
                },
                error: function (error) {
                    reject(error)
                },
            })
        })
    }
</script>

<script>
    function ModalKaydet() {

        $("#IRS_NO").prop("disabled", true);

        if (Kalemler.length > 0) {
            if (GirisDepo != -1) {
                if ($('#IRS_NO').val().trim().length > 0) {
                    BelgeDurumKontrol().then((Durum) => {
                        if (Durum) {
                            ShowProgress();

                            KalemleriSil().then(() => { SilinecekKalemler = []; });

                            var HataListesi = [];
                            var StokToplamlari = [];

                            Kalemler.forEach(function (a) {
                                if (!this[a.STOK_KODU]) {
                                    this[a.STOK_KODU] = { STOK_ADI: a.STOK_ADI, STOK_KODU: a.STOK_KODU, MIKTAR: 0 };

                                    StokToplamlari.push(this[a.STOK_KODU]);
                                }

                                this[a.STOK_KODU].MIKTAR += parseInt(a.MIKTAR);

                            }, Object.create(null));

                            MiktarKontrol(StokToplamlari, HataListesi).then(() => {
                                if (HataListesi.length > 0) {
                                    var HataMesaji = '<div style="overflow-y:auto;height:150px;font-size:smaller;margin-bottom:1rem;">';

                                    for (var i = 0; i < HataListesi.length; i++) {
                                        var Filtered = detayli.filter(x => x.SIPARIS_NO == SiparisNo && x.STOK_KODU == HataListesi[i].STOK_KODU);
                                        HataMesaji = HataMesaji + `<b>${HataListesi[i].STOK_ADI}</b> kalemine girilebilecek maksimum miktar <b>${parseFloat(Filtered[0].BAKIYE_MIKTARI).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })} ${Filtered[0].OLCU_BR1}</b>'dir.<br/>`;
                                    }

                                    Swal.fire({
                                        title: "UYARI",
                                        icon: 'error',
                                        html: HataMesaji + "</div><div>Lütfen girilen miktarları düzeltiniz.</div>",
                                        showConfirmButton: true,
                                        allowEnterKey: false,
                                        confirmButtonText: 'TAMAM', focusConfirm: true,
                                    });

                                    HideProgress();
                                }
                                else {
                                    if (SaveType == 0) {
                                        KalemleriEkle();
                                        window.onpopstate = function () { history.back(); };
                                    }
                                    else if (SaveType == 1) {
                                        KalemleriGuncelle();
                                        window.onpopstate = function () { history.back(); };
                                    }
                                }
                            });
                        }
                        else {
                            Swal.fire({
                                text: "Belge kapalıyken işlem yapamazsınız.",
                                icon: "error",
                                showConfirmButton: true, allowEnterKey: false, focusConfirm: true,
                                confirmButtonText: 'TAMAM',
                                confirmButtonColor: '#d33',
                            });
                        }

                    });
                }
                else {
                    Swal.fire({
                        text: "İrsaliye numarasını girmeden işlem yapamazsınız.",
                        icon: "error",
                        showConfirmButton: true,
                        confirmButtonText: 'TAMAM', allowEnterKey: false, focusConfirm: true, allowOutsideClick: false,
                        confirmButtonColor: '#d33',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $("#IRS_NO").prop("disabled", false);
                        }
                    });
                }
            }
            else {
                Swal.fire({
                    text: "Depo seçimi tamamlanmadan kayıt işlemi yapılamaz",
                    icon: "error",
                    showConfirmButton: false,
                    timer: '1500'
                });
            }
        }
    }

    function ModalSil() {

        Swal.fire({
            html: `<b>${document.getElementById("BelgeNo").innerHTML}</b><br/> no'lu kabul formu silinecek, emin misiniz?`,
            icon: 'warning',
            showCancelButton: true,
            cancelButtonText: 'HAYIR',
            cancelButtonColor: '#d33',
            confirmButtonColor: '#3085d6',
            allowEnterKey: false,
            confirmButtonText: 'EVET', focusConfirm: true,
            allowOutsideClick: false
        }).then((result) => {
            if (result.isConfirmed) {


                ShowProgress();

                var Url = `http://192.168.2.13:83/api/shipping/${document.getElementById("BelgeNo").innerHTML}/0`;

                $.ajax({
                    url: Url,
                    type: 'DELETE',
                    success: function (result) {
                        SiparisNo = -1;
                        window.onpopstate = function () { history.back(); };
                        $('#TempTable').bootstrapTable("destroy");
                        $('#SiparisModal').modal('hide');

                        HideProgress();

                        Swal.fire({
                            text: "İşlem başarılı.",
                            icon: "success",
                            showConfirmButton: true,
                            confirmButtonText: 'TAMAM',
                            confirmButtonColor: '#3085d6', allowEnterKey: false, focusConfirm: true, allowOutsideClick: false,
                        });
                    }
                });
            }
        })
    }

    function ModalKapat() {
        if (Kalemler.length > 0) {
            Swal.fire({
                title: 'Çıkmak istediğinize emin misiniz?',
                text: "Kaydedilmeyen veriler var, bu işlem geri alınamaz!",
                icon: 'warning',
                showCancelButton: true,
                allowEnterKey: false,
                cancelButtonText: 'HAYIR',
                cancelButtonColor: '#d33',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'EVET',
                allowOutsideClick: false,
                customClass: 'AreYouSureAlert'
            }).then((result) => {
                if (result.isConfirmed) {
                    Kalemler = [];
                    SiparisNo = -1;
                    window.onpopstate = function () { history.back(); };
                    $('#TempTable').bootstrapTable("destroy");
                    $('#SiparisModal').modal('hide');
                }
            });
        }
        else {
            window.onpopstate = function () { history.back(); };
            EkranAcilisi();
            $('#SiparisModal').modal('hide');
        }
    }

    function ModalKaydetButtonState() {
        if ($("#SERİ_NO")?.val()?.trim()?.length > 0) {
            $("#ModalSaveButton").prop('disabled', true);
        }
        else {
            if (Kalemler.length > 0 && GirisDepo != -1) {
                $("#ModalSaveButton").prop('disabled', false);
            }
            else {
                $("#ModalSaveButton").prop('disabled', true);
            }
        }
    }
</script>

<script>
    function KalemleriEkle()
    {
        var ProcUrl = "http://192.168.2.13:83/api/shipping/" + PageType;

        var BelgeNoDurumu = false;

        $.getJSON(ProcUrl, function (data) {
            BelgeNoDurumu = (document.getElementById("BelgeNo").innerHTML == data[0].SIRADAKI_BELGE_NO);
        }).done(() =>
        {
            if (BelgeNoDurumu)
            {
                KalemleriKaliciKaydet();
            }
            else
            {
                BelgeNoDegisti();
            }
        });
    }

    function KalemleriKaliciKaydet()
    {
        for (var i = 0; i < Kalemler.length; i++)
        {
            var Item = {
                "TYPE": PageType,
                "SIPARIS_NO": document.getElementById("SiparisNo").innerHTML,
                "BELGE_NO": document.getElementById("BelgeNo").innerHTML,
                "IRS_NO": $('#IRS_NO').val(),
                "SERI_NO": (Kalemler[i].SERI_NO),
                "STOK_KODU": (Kalemler[i].STOK_KODU),
                "MIKTAR1": parseFloat(Kalemler[i].MIKTAR).toFixed(2).toString(),
                "OLCU_BR1": (Kalemler[i].OLCU_BR1),
                "MIKTAR2": parseFloat(Kalemler[i].MIKTAR2).toFixed(2).toString(),
                "OLCU_BR2": (Kalemler[i].OLCU_BR2),
                "ACIK1": (Kalemler[i].ACIK1),
                "ACIK2": (Kalemler[i].ACIK2),
                "ACIK3": (Kalemler[i].ACIK3),
                "SERI_NO_3": (Kalemler[i].SERI_NO_3),
                "SERI_NO_4": (Kalemler[i].SERI_NO_4),
                "ACIKLAMA_4": (Kalemler[i].ACIKLAMA_4),
                "ACIKLAMA_5": (Kalemler[i].ACIKLAMA_5),
                "INS_USER_ID": @Request.Cookies["UserId"].Value,
                "UPD_USER_ID": @Request.Cookies["UserId"].Value,
                "EXP_1": null,
                "EXP_2": null,
                "EXP_3": null,
                "GIRIS_DEPO": Kalemler[i].GIRIS_DEPO,
                "CIKIS_DEPO": null
            };

            $.ajax({
                type: "POST",
                url: "http://192.168.2.13:83/api/shipping",
                data: JSON.stringify(Item),
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                success: function ()
                {
                    Swal.fire({
                            text: "İşlem başarılı.",
                            icon: "success",
                            showConfirmButton: true,
                            confirmButtonText: 'TAMAM',
                        confirmButtonColor: '#3085d6',
                        });

                    SaveType = 0;
                    SiparisNo = -1;
                    KalemId = 0;
                    GuncellenenKalem = -1;

                    $('#SiparisModal').modal('hide');
                    HideProgress();
                },
                error: function (msg)
                {
                    Swal.fire({
                        html: "Hata oluştu!<br>Girilen stok miktarlarını kontrol ediniz.",
                        icon: "error",
                        showConfirmButton: true,
                        confirmButtonText: 'TAMAM',
                        confirmButtonColor: '#d33',
                    });
                    HideProgress();
                }
            });
        }
    }

    function KalemleriGuncelle()
    {
        for (var i = 0; i < BeforeDocument; i++)
        {
            var Item = {
                "TYPE": PageType,
                "SIPARIS_NO": document.getElementById("SiparisNo").innerHTML,
                "BELGE_NO": document.getElementById("BelgeNo").innerHTML,
                "IRS_NO": $('#IRS_NO').val(),
                "SERI_NO": (Kalemler[i].SERI_NO),
                "CARI_ISIM": (Kalemler[i].CARI_ISIM),
                "STOK_KODU": (Kalemler[i].STOK_KODU),
                "MIKTAR1": parseFloat(Kalemler[i].MIKTAR).toFixed(2).toString(),
                "OLCU_BR1": (Kalemler[i].OLCU_BR1),
                "MIKTAR2": parseFloat(Kalemler[i].MIKTAR2).toFixed(2).toString(),
                "OLCU_BR2": (Kalemler[i].OLCU_BR2),
                "ACIK1": (Kalemler[i].ACIK1),
                "ACIK2": (Kalemler[i].ACIK2),
                "ACIK3": (Kalemler[i].ACIK3),
                "SERI_NO_3": (Kalemler[i].SERI_NO_3),
                "SERI_NO_4": (Kalemler[i].SERI_NO_4),
                "ACIKLAMA_4": (Kalemler[i].ACIKLAMA_4),
                "ACIKLAMA_5": (Kalemler[i].ACIKLAMA_5),
                "UPD_USER_ID": @Request.Cookies["UserId"].Value,
                "EXP_1": null,
                "EXP_2": null,
                "EXP_3": null,
                "GIRIS_DEPO": Kalemler[i].GIRIS_DEPO,
                "CIKIS_DEPO": null
            };

            $.ajax({
                    type: "PUT",
                url: "http://192.168.2.13:83/api/shipping/" + Kalemler[i].INC_KEY,
                    data: JSON.stringify(Item),
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                success: function (data) {
                    Swal.fire({
                        text: "İşlem başarılı.",
                        icon: "success",
                        showConfirmButton: true,
                        confirmButtonText: 'TAMAM',
                        confirmButtonColor: '#3085d6',
                    });

                    SaveType = 0;

                    SiparisNo = -1;
                    KalemId = 0;
                    GuncellenenKalem = -1;

                    $('#SiparisModal').modal('hide');
                    HideProgress();
                    },
                error: function (msg)
                {
                    Swal.fire({
                        text: "Hata oluştu!<br>Girilen stok miktarlarını kontrol ediniz.",
                        icon: "error",
                        showConfirmButton: true,
                        confirmButtonText: 'TAMAM',
                        confirmButtonColor: '#d33',
                    });
                    HideProgress();
                }
                });
        }

        for (var i = BeforeDocument; i < Kalemler.length; i++)
        {
            var Item = {
                "TYPE": PageType,
                    "SIPARIS_NO": document.getElementById("SiparisNo").innerHTML,
                    "BELGE_NO": document.getElementById("BelgeNo").innerHTML,
                    "SERI_NO": (Kalemler[i].SERI_NO),
                    "STOK_KODU": (Kalemler[i].STOK_KODU),
                    "MIKTAR1": parseFloat(Kalemler[i].MIKTAR),
                    "OLCU_BR1": (Kalemler[i].OLCU_BR1),
                    "MIKTAR2": parseFloat(Kalemler[i].MIKTAR2),
                    "OLCU_BR2": (Kalemler[i].OLCU_BR2),
                    "ACIK1": (Kalemler[i].ACIK1),
                    "ACIK2": (Kalemler[i].ACIK2),
                    "ACIK3": (Kalemler[i].ACIK3),
                    "SERI_NO_3": (Kalemler[i].SERI_NO_3),
                    "SERI_NO_4": (Kalemler[i].SERI_NO_4),
                    "ACIKLAMA_4": (Kalemler[i].ACIKLAMA_4),
                    "ACIKLAMA_5": (Kalemler[i].ACIKLAMA_5),
                    "INS_USER_ID": @Request.Cookies["UserId"].Value,
                    "UPD_USER_ID": @Request.Cookies["UserId"].Value,
                    "EXP_1": null,
                    "EXP_2": null,
                    "EXP_3": null,
                };

                $.ajax({
                    type: "POST",
                    url: "http://192.168.2.13:83/api/shipping",
                    data: JSON.stringify(Item),
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    success: function () {
                        Swal.fire({
                            text: "İşlem başarılı.",
                            icon: "success",
                            showConfirmButton: true,
                            confirmButtonText: 'TAMAM',
                            confirmButtonColor: '#3085d6',
                        });

                        SaveType = 0;

                        SiparisNo = -1;
                        KalemId = 0;
                        GuncellenenKalem = -1;

                        $('#SiparisModal').modal('hide');
                    },
                    error: function (msg)
                    {
                        Swal.fire({
                            text: "Hata oluştu!<br>Girilen stok miktarlarını kontrol ediniz.",
                            icon: "error",
                            showConfirmButton: true,
                            confirmButtonText: 'TAMAM',
                            confirmButtonColor: '#d33',
                        });
                    }
                });
        }
    }
</script>

<script>
    $('#ACIK1').on('change paste input', (e) => { LimitedDecimal(e, 2, true); });
    $('#ACIK1').on('blur', (e) => { FormatDecimal(e, 2); });

    $('#ACIK2').on('change paste input', (e) => { LimitedDecimal(e, 1, true); });
    $('#ACIK2').on('blur', (e) => { FormatDecimal(e, 1); });

    $('#Miktar1').on('change paste input', (e) => { LimitedDecimal(e, 2); MiktarGirisKontrolu(); });
    $('#Miktar1').on('blur', (e) => { FormatDecimal(e, 2, true); });

    $('#Miktar2').on('change paste input', (e) => { LimitedDecimal(e, 2); MiktarGirisKontrolu(); });
    $('#Miktar2').on('blur', (e) => { FormatDecimal(e, 2, true); });

    function MiktarGirisKontrolu() {
        var Durum = $("#Miktar1").val() == 0 || $("#Miktar2").val() == 0;

        $('#kalemkaydetbtn').prop('disabled', Durum);
        $('#guncellemekaydetbtn').prop('disabled', Durum);
    }

    function LimitedDecimal(e, Limit, StartWithZero = false) {
        if (!StartWithZero && e.currentTarget.value.at(0) == "0") {
            e.currentTarget.value = e.currentTarget.value.slice(-1, e.currentTarget.value.length);
        }

        if (!isNaN(parseFloat(e.currentTarget.value))) {
            var point = e.currentTarget.value.toString().indexOf('.');
            var decimalLimit = e.currentTarget.value.length > point + (Limit + 1);

            if (point >= 0 && decimalLimit) {
                e.currentTarget.value = e.currentTarget.value.slice(0, -1);
            }
        }
        else {
            e.currentTarget.value = null;
        }
    }

    function FormatDecimal(e, Fixed, SetMin = false) {
        if (!isNaN(parseFloat(e.currentTarget.value))) {
            e.currentTarget.value = parseFloat(e.currentTarget.value).toFixed(Fixed);
        }
        else {
            if (SetMin) {
                e.currentTarget.value = e.currentTarget.min;
            }
            else {
                e.currentTarget.value = null;
            }
        }
    }
</script>

<script>
    window.addEventListener('resize', () => {
        FullscreenModal();
    });

    function FullscreenModal() {
        width = window.innerWidth;

        if (width <= 562) {
            $("#ModalAyar").removeAttr("style");
            $("#ModalAyar").removeClass("modal-lg");
            $("#ModalAyar").addClass("modal-fullscreen");

            $("#SaticiBelgeListModal").removeClass("modal-xl");
            $("#SaticiBelgeListModal").addClass("modal-fullscreen");
        }
        else {
            $("#ModalAyar").removeAttr("style");
            $("#ModalAyar").removeClass("modal-fullscreen");
            $("#ModalAyar").addClass("modal-lg");

            $("#SaticiBelgeListModal").removeClass("modal-fullscreen");
            $("#SaticiBelgeListModal").addClass("modal-xl");
        }
    }
</script>

<style>
    @@media (max-width: 562px) {
        #ModalAyar {
            max-width: 100% !important;
        }

        #SiparisModalContent {
            height: 100vh !important;
        }

        #SaticiBelgeListModalContent {
            height: 100vh !important;
        }

        .miktarbirim {
            margin-top: 1rem !important;
        }
    }

    @@media (min-width: 562px) {
        #ModalAyar {
            max-width: 90% !important;
        }

        #SiparisModalContent {
            height: 90vh !important;
        }

        #SaticiBelgeListModalContent {
            height: 65vh !important;
        }

        .miktarbirim {
            margin-top: 0 !important;
        }
    }

    #TempTable .card-views .card-view .card-view-value {
        margin-left: 0 !important;
        padding-left: 5px !important;
        white-space: normal !important;
    }

    #TempTable .card-views .card-view {
        margin-top: 0 !important;
    }
</style>

<script>
    function TempTableEmptyFormatter(value, index, row) {
        return value?.toString().trim().length > 0 ? value : '-';
    }

    function SaticiIslemFormatter(value, index, row) {

        if (SaveType == 1) {
            if (!index.ACTIVE) {
                return `<div class="d-flex justify-content-center align-items-center" style="gap:0.7rem;">

                <div onclick=""><i class="bi bi-file-earmark-text-fill i-disabled" style="color:#203289;font-size:x-large;" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="bottom" data-bs-html="true" data-bs-original-title="<span>Yazdır</span>"></i></div>

                <div onclick=""><i class="bi bi-file-earmark-text-fill i-disabled" style="color:#203289;font-size:x-large;" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="bottom" data-bs-html="true" data-bs-original-title="<span>Güncelle</span>"></i></div>

                <div onclick=""><i class="bi bi-file-earmark-x-fill i-disabled" style="color:#203289;font-size:x-large;" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="bottom" data-bs-html="true" data-bs-original-title="<span>Sil</span>"></i></div></div>`;
            }
        }

        return `<div class="d-flex justify-content-center align-items-center" style="gap:0.7rem;">

        <div onclick="YaziciModalAc('${index.SERI_NO}')"><i class="bi bi-printer-fill" style="color:#203289;font-size:x-large;" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="bottom" data-bs-html="true" data-bs-original-title="<span>Yazdır</span>"></i></div>

        <div onclick="KalemBilgisiGoster(${index.ID})"><i class="bi bi-file-earmark-text-fill" style="color:#203289;font-size:x-large;" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="bottom" data-bs-html="true" data-bs-original-title="<span>Güncelle</span>"></i></div>

        <div onclick="KalemSil(${index.ID}, '${index.SERI_NO}')"><i class="bi bi-file-earmark-x-fill" style="color:#203289;font-size:x-large;" data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="bottom" data-bs-html="true" data-bs-original-title="<span>Sil</span>"></i></div></div>`;
    }

    function TabloSatirStili(row, index) {
        var Durum = SaveType == 1 ? row.ACTIVE : true;

        if (Durum) {
            return {
                css: {
                    "background-color": '#e9ebff'
                }
            }
        }

        return {
            css: {
                "background-color": '#FAEAEA'
            }
        }
    }

    $('#yazdirSwitch').on("focusout", function () {
        $('#yazdirmaLabel').css('color', '#b7b7b7');
    });

    $('#yazdirSwitch').on("focus", function () {
        $('#yazdirmaLabel').css('color', '#4417FA');
    });
</script>

<script>
    function SevkiyatCiktisiAl(BARKOD_NO = null)
    {
        BARKOD_NO = BARKOD_NO ?? $('#YaziciModalBarkod').html();
        var Printer = $('#yazici').val();
        var Kayit = Kalemler.filter(x => x.SERI_NO == BARKOD_NO);

        var FiltreliDetay = detayli.filter(x => x.SIPARIS_NO == $('#SiparisNo').html() && x.STOK_KODU == Kayit[0].STOK_KODU)

        if (Kayit.length > 0)
        {
            var Model = {
                "GRUP_ISIM": FiltreliDetay[0].GRUP_ISIM,
                "BARKOD_NO": Kayit[0].SERI_NO,
                "STOK_KODU": Kayit[0].STOK_KODU,
                "STOK_ADI": Kayit[0].STOK_ADI,
                "MIKTAR": `${parseFloat(Kayit[0].MIKTAR).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) }`,
                "OLCU_BR1": `${Kayit[0].OLCU_BR1}`,
                "MIKTAR2": `${parseFloat(Kayit[0].MIKTAR2).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) }`,
                "OLCU_BR2": `${Kayit[0].OLCU_BR2}`,
                "BIRIM_MIKTAR": `${(parseFloat(Kayit[0].MIKTAR) / parseFloat(Kayit[0].MIKTAR2)).toFixed(2).toString()}`,
                "KALINLIK": Kayit[0].ACIK1.toString().replace('.', ','),
                "GENISLIK": Kayit[0].ACIK2.toString().replace('.', ','),
                "KALITE": Kayit[0].SERI_NO_3,
                "KAPLAMA": Kayit[0].SERI_NO_4,
                "TARIH": Kayit[0].TARIH,
                "MENSEI": FiltreliDetay[0].CARI_ISIM,
                "FIRMA_SERI_NO": Kayit[0].ACIK3
            };

            $.ajax({
                url: "@Url.Action("SevkiyatBarkodCiktisi", "Sevkiyat")",
                type: 'POST',
                data: { "Model": Model, Yazdir: true, Yazici: Printer },
                success: (data) => { YaziciModalKapat(); }
            });
        }
    }

    function YaziciModalAc(BarkodNo)
    {
        $('#yazici-modal').val(localStorage.yazici).trigger('change');
        $('#YaziciModal').modal('show');
        $('#YaziciModalBarkod').html(BarkodNo);
    }

    function YaziciModalKapat()
    {
        $('#YaziciModal').modal('hide');
        $('#YaziciModalBarkod').html('-');
    }

    function YaziciSec(Value) {
        localStorage.setItem('yazici', Value);
    }

    function YaziciSecModal(Value)
    {
        $('#yazici').val(Value).trigger('change');
    }
</script>

<script>
    var GirisDepo = -1;
    var Depolar = [];

    function DepoGetir() {
        $.ajax({
            url: "http://192.168.2.13:83/api/stok/depo",
            type: 'GET',
            success: function (result) {
                if (result.length > 0) {
                    Depolar = result;
                    DepoOtomatikTamamlama('GIRIS_DEPO', result);
                }
            }
        });
    }

    function DepoOtomatikTamamlama(id, arr) {
        var currentFocus;

        var inp = document.getElementById(id);

        let DepoSorgu = new Fuse(arr, {
            keys: ['DEPO_ISMI', 'DEPO_KODU'],
            includeMatches: true
        });

        inp.addEventListener("input", function (e) {
            var a, b, i, val = this.value.trimLeft();

            this.value = val.toUpperCase();

            closeAllLists();

            if (!val) {
                GirisDepo = -1;

                return false;
            }

            currentFocus = -1;

            a = document.createElement("DIV");
            a.setAttribute("id", this.id + "autocomplete-list");
            a.setAttribute("class", "autocomplete-items");

            this.parentNode.appendChild(a);

            var itemNumber = 0;

            var Sorgu = DepoSorgu.search(val);

            for (let i = 0; i < Sorgu.length; i++) {

                var KodSorgu = parseInt(val.replace(",", "").replace(".", "").trim());

                if ((itemNumber < 5 && isNaN(KodSorgu)) || (!isNaN(KodSorgu) && itemNumber < 1)) {
                    b = document.createElement("DIV");

                    b.innerHTML = Sorgu[i].item.DEPO_ISMI;

                    b.innerHTML += "<input type='hidden' kod='" + Sorgu[i].item.DEPO_KODU + "' value='" + Sorgu[i].item.DEPO_ISMI + "'>";

                    b.addEventListener("click", function (e) {
                        inp.value = this.getElementsByTagName("input")[0].value;

                        if (inp.value.trim().length !== 0) {
                            GirisDepo = parseInt(this.getElementsByTagName("input")[0].getAttribute("kod"));

                            if (GirisDepo != -1) {
                                if (SaveType == 0) {
                                    ButonAyarla(1);

                                    if (document.getElementById('StokAdlari').value != '') {
                                        document.getElementById("Miktar1").disabled = false;
                                        document.getElementById("Miktar2").disabled = false;
                                    }

                                    document.getElementById("kalemkaydetbtn").disabled = true;

                                    $('#StokAdlari').prop("disabled", false);
                                }
                            }

                            KayitDepolariDegistir();
                        }

                        closeAllLists();
                    });

                    itemNumber = itemNumber + 1;

                    a.appendChild(b);
                }
            }
        });

        inp.addEventListener("keydown", function (e) {
            var x = document.getElementById(this.id + "autocomplete-list");
            if (x) x = x.getElementsByTagName("div");
            if (e.keyCode == 40) {

                currentFocus++;

                addActive(x);
            } else if (e.keyCode == 38) {
                currentFocus--;
                addActive(x);
            } else if (e.keyCode == 13) {
                e.preventDefault();
                if (currentFocus > -1) {
                    if (x) x[currentFocus].click();
                }
            }
        });
        function addActive(x) {
            if (!x) return false;
            removeActive(x);
            if (currentFocus >= x.length) currentFocus = 0;
            if (currentFocus < 0) currentFocus = (x.length - 1);
            x[currentFocus].classList.add("autocomplete-active");
        }
        function removeActive(x) {
            for (var i = 0; i < x.length; i++) {
                x[i].classList.remove("autocomplete-active");
            }
        }
        function closeAllLists(elmnt) {
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++) {
                if (elmnt != x[i] && elmnt != inp) {
                    x[i].parentNode.removeChild(x[i]);
                }
            }
        }
    }

    $('#GIRIS_DEPO').on("blur", (e) => {
        setTimeout(() => {
            var val = e.target.value.trimRight();

            if (val) {
                var FiltreliDepolar = Depolar.filter(x => x.DEPO_ISMI == val.toUpperCase());

                if (FiltreliDepolar.length > 0) {
                    GirisDepo = FiltreliDepolar[0].DEPO_KODU;

                    if (GirisDepo != -1) {
                        if (SaveType == 0) {
                            ButonAyarla(1);

                            if (document.getElementById('StokAdlari').value != '') {
                                document.getElementById("Miktar1").disabled = false;
                                document.getElementById("Miktar2").disabled = false;
                            }

                            document.getElementById("kalemkaydetbtn").disabled = true;

                            $('#StokAdlari').prop("disabled", false);
                        }
                    }
                }
                else {
                    var FiltreliDepolar = Depolar.filter(x => x.DEPO_KODU == val.toUpperCase());

                    if (FiltreliDepolar.length > 0) {
                        GirisDepo = FiltreliDepolar[0].DEPO_KODU;

                        $('#GIRIS_DEPO').val(FiltreliDepolar[0].DEPO_ISMI);

                        if (GirisDepo != -1) {

                            $('#GIRIS_DEPOautocomplete-list').html('');

                            if (SaveType == 0) {
                                ButonAyarla(1);

                                if (document.getElementById('StokAdlari').value != '') {
                                    document.getElementById("Miktar1").disabled = false;
                                    document.getElementById("Miktar2").disabled = false;
                                }

                                document.getElementById("kalemkaydetbtn").disabled = true;


                                $('#StokAdlari').prop("disabled", false);
                            }
                        }
                    }
                    else {
                        e.target.value = null;
                        GirisDepo = -1;
                        AlanlarıTemizle();
                        ButonAyarla(0);
                        $('#StokAdlari').prop("disabled", true);
                    }
                }

                KayitDepolariDegistir();
            } else {
                AlanlarıTemizle();
                ButonAyarla(0);
                $('#StokAdlari').prop("disabled", true);
            }

            $('#GIRIS_DEPOautocomplete-list').html('');
            ModalKaydetButtonState();

        }, 150);
    });

    function KayitDepolariDegistir() {
        for (var i = 0; i < Kalemler.length; i++) {
            Kalemler[i].GIRIS_DEPO = GirisDepo;
        }
    }
</script>

<style>
    @@-webkit-keyframes FadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    @@-webkit-keyframes FadeOut {
        from {
            opacity: 1;
        }

        to {
            opacity: 0;
        }
    }

    .fadeInAnimasyon {
        animation: FadeIn 0.2s ease 0s 1 normal forwards;
    }

    .fadeOutAnimasyon {
        animation: FadeOut 0.2s ease 0s 1 normal forwards;
    }

    @@media (max-width: 562px) {
        #yazdirmaLabel, #yazdirLabel {
            top: 30% !important;
        }
    }
</style>